/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         base_yyparse
#define yylex           base_yylex
#define yyerror         base_yyerror
#define yydebug         base_yydebug
#define yynerrs         base_yynerrs

/* First part of user prologue.  */
#line 1 "./grammar/grammar.y.tmp"

#line 1 "./grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

#if YYBISON == 1
// explicitly define stack growing support
// yacc cannot handle stack growing by default YYLTYPE is overriden - which the Postgres parser overrides with an `int`
// so we need to copy these definitions here explicitly
/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  short int yyss;
  YYSTYPE yyvs;
  YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))
#endif

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGNode *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int *seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeNamedParamRef(char* name, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);


#line 297 "./grammar/grammar_out.cpp"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "include/parser/gram.hpp"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_3_ = 3,                         /* ','  */
  YYSYMBOL_4_ = 4,                         /* ':'  */
  YYSYMBOL_5_ = 5,                         /* '?'  */
  YYSYMBOL_6_ = 6,                         /* '$'  */
  YYSYMBOL_7_ = 7,                         /* '#'  */
  YYSYMBOL_8_ = 8,                         /* '{'  */
  YYSYMBOL_9_ = 9,                         /* '}'  */
  YYSYMBOL_IDENT = 10,                     /* IDENT  */
  YYSYMBOL_FCONST = 11,                    /* FCONST  */
  YYSYMBOL_SCONST = 12,                    /* SCONST  */
  YYSYMBOL_BCONST = 13,                    /* BCONST  */
  YYSYMBOL_XCONST = 14,                    /* XCONST  */
  YYSYMBOL_Op = 15,                        /* Op  */
  YYSYMBOL_ICONST = 16,                    /* ICONST  */
  YYSYMBOL_PARAM = 17,                     /* PARAM  */
  YYSYMBOL_TYPECAST = 18,                  /* TYPECAST  */
  YYSYMBOL_DOT_DOT = 19,                   /* DOT_DOT  */
  YYSYMBOL_COLON_EQUALS = 20,              /* COLON_EQUALS  */
  YYSYMBOL_EQUALS_GREATER = 21,            /* EQUALS_GREATER  */
  YYSYMBOL_INTEGER_DIVISION = 22,          /* INTEGER_DIVISION  */
  YYSYMBOL_POWER_OF = 23,                  /* POWER_OF  */
  YYSYMBOL_LAMBDA_ARROW = 24,              /* LAMBDA_ARROW  */
  YYSYMBOL_DOUBLE_ARROW = 25,              /* DOUBLE_ARROW  */
  YYSYMBOL_LESS_EQUALS = 26,               /* LESS_EQUALS  */
  YYSYMBOL_GREATER_EQUALS = 27,            /* GREATER_EQUALS  */
  YYSYMBOL_NOT_EQUALS = 28,                /* NOT_EQUALS  */
  YYSYMBOL_ABORT_P = 29,                   /* ABORT_P  */
  YYSYMBOL_ABSOLUTE_P = 30,                /* ABSOLUTE_P  */
  YYSYMBOL_ACCESS = 31,                    /* ACCESS  */
  YYSYMBOL_ACTION = 32,                    /* ACTION  */
  YYSYMBOL_ADD_P = 33,                     /* ADD_P  */
  YYSYMBOL_ADMIN = 34,                     /* ADMIN  */
  YYSYMBOL_AFTER = 35,                     /* AFTER  */
  YYSYMBOL_AGGREGATE = 36,                 /* AGGREGATE  */
  YYSYMBOL_ALL = 37,                       /* ALL  */
  YYSYMBOL_ALSO = 38,                      /* ALSO  */
  YYSYMBOL_ALTER = 39,                     /* ALTER  */
  YYSYMBOL_ALWAYS = 40,                    /* ALWAYS  */
  YYSYMBOL_ANALYSE = 41,                   /* ANALYSE  */
  YYSYMBOL_ANALYZE = 42,                   /* ANALYZE  */
  YYSYMBOL_AND = 43,                       /* AND  */
  YYSYMBOL_ANTI = 44,                      /* ANTI  */
  YYSYMBOL_ANY = 45,                       /* ANY  */
  YYSYMBOL_ARRAY = 46,                     /* ARRAY  */
  YYSYMBOL_AS = 47,                        /* AS  */
  YYSYMBOL_ASC_P = 48,                     /* ASC_P  */
  YYSYMBOL_ASOF = 49,                      /* ASOF  */
  YYSYMBOL_ASSERTION = 50,                 /* ASSERTION  */
  YYSYMBOL_ASSIGNMENT = 51,                /* ASSIGNMENT  */
  YYSYMBOL_ASYMMETRIC = 52,                /* ASYMMETRIC  */
  YYSYMBOL_AT = 53,                        /* AT  */
  YYSYMBOL_ATTACH = 54,                    /* ATTACH  */
  YYSYMBOL_ATTRIBUTE = 55,                 /* ATTRIBUTE  */
  YYSYMBOL_AUTHORIZATION = 56,             /* AUTHORIZATION  */
  YYSYMBOL_BACKWARD = 57,                  /* BACKWARD  */
  YYSYMBOL_BEFORE = 58,                    /* BEFORE  */
  YYSYMBOL_BEGIN_P = 59,                   /* BEGIN_P  */
  YYSYMBOL_BETWEEN = 60,                   /* BETWEEN  */
  YYSYMBOL_BIGINT = 61,                    /* BIGINT  */
  YYSYMBOL_BINARY = 62,                    /* BINARY  */
  YYSYMBOL_BIT = 63,                       /* BIT  */
  YYSYMBOL_BOOLEAN_P = 64,                 /* BOOLEAN_P  */
  YYSYMBOL_BOTH = 65,                      /* BOTH  */
  YYSYMBOL_BY = 66,                        /* BY  */
  YYSYMBOL_CACHE = 67,                     /* CACHE  */
  YYSYMBOL_CALL_P = 68,                    /* CALL_P  */
  YYSYMBOL_CALLED = 69,                    /* CALLED  */
  YYSYMBOL_CASCADE = 70,                   /* CASCADE  */
  YYSYMBOL_CASCADED = 71,                  /* CASCADED  */
  YYSYMBOL_CASE = 72,                      /* CASE  */
  YYSYMBOL_CAST = 73,                      /* CAST  */
  YYSYMBOL_CATALOG_P = 74,                 /* CATALOG_P  */
  YYSYMBOL_CENTURIES_P = 75,               /* CENTURIES_P  */
  YYSYMBOL_CENTURY_P = 76,                 /* CENTURY_P  */
  YYSYMBOL_CHAIN = 77,                     /* CHAIN  */
  YYSYMBOL_CHAR_P = 78,                    /* CHAR_P  */
  YYSYMBOL_CHARACTER = 79,                 /* CHARACTER  */
  YYSYMBOL_CHARACTERISTICS = 80,           /* CHARACTERISTICS  */
  YYSYMBOL_CHECK_P = 81,                   /* CHECK_P  */
  YYSYMBOL_CHECKPOINT = 82,                /* CHECKPOINT  */
  YYSYMBOL_CLASS = 83,                     /* CLASS  */
  YYSYMBOL_CLOSE = 84,                     /* CLOSE  */
  YYSYMBOL_CLUSTER = 85,                   /* CLUSTER  */
  YYSYMBOL_COALESCE = 86,                  /* COALESCE  */
  YYSYMBOL_COLLATE = 87,                   /* COLLATE  */
  YYSYMBOL_COLLATION = 88,                 /* COLLATION  */
  YYSYMBOL_COLUMN = 89,                    /* COLUMN  */
  YYSYMBOL_COLUMNS = 90,                   /* COLUMNS  */
  YYSYMBOL_COMMENT = 91,                   /* COMMENT  */
  YYSYMBOL_COMMENTS = 92,                  /* COMMENTS  */
  YYSYMBOL_COMMIT = 93,                    /* COMMIT  */
  YYSYMBOL_COMMITTED = 94,                 /* COMMITTED  */
  YYSYMBOL_COMPRESSION = 95,               /* COMPRESSION  */
  YYSYMBOL_CONCURRENTLY = 96,              /* CONCURRENTLY  */
  YYSYMBOL_CONFIGURATION = 97,             /* CONFIGURATION  */
  YYSYMBOL_CONFLICT = 98,                  /* CONFLICT  */
  YYSYMBOL_CONNECTION = 99,                /* CONNECTION  */
  YYSYMBOL_CONSTRAINT = 100,               /* CONSTRAINT  */
  YYSYMBOL_CONSTRAINTS = 101,              /* CONSTRAINTS  */
  YYSYMBOL_CONTENT_P = 102,                /* CONTENT_P  */
  YYSYMBOL_CONTINUE_P = 103,               /* CONTINUE_P  */
  YYSYMBOL_CONVERSION_P = 104,             /* CONVERSION_P  */
  YYSYMBOL_COPY = 105,                     /* COPY  */
  YYSYMBOL_COST = 106,                     /* COST  */
  YYSYMBOL_CREATE_P = 107,                 /* CREATE_P  */
  YYSYMBOL_CROSS = 108,                    /* CROSS  */
  YYSYMBOL_CSV = 109,                      /* CSV  */
  YYSYMBOL_CUBE = 110,                     /* CUBE  */
  YYSYMBOL_CURRENT_P = 111,                /* CURRENT_P  */
  YYSYMBOL_CURSOR = 112,                   /* CURSOR  */
  YYSYMBOL_CYCLE = 113,                    /* CYCLE  */
  YYSYMBOL_DATA_P = 114,                   /* DATA_P  */
  YYSYMBOL_DATABASE = 115,                 /* DATABASE  */
  YYSYMBOL_DAY_P = 116,                    /* DAY_P  */
  YYSYMBOL_DAYS_P = 117,                   /* DAYS_P  */
  YYSYMBOL_DEALLOCATE = 118,               /* DEALLOCATE  */
  YYSYMBOL_DEC = 119,                      /* DEC  */
  YYSYMBOL_DECADE_P = 120,                 /* DECADE_P  */
  YYSYMBOL_DECADES_P = 121,                /* DECADES_P  */
  YYSYMBOL_DECIMAL_P = 122,                /* DECIMAL_P  */
  YYSYMBOL_DECLARE = 123,                  /* DECLARE  */
  YYSYMBOL_DEFAULT = 124,                  /* DEFAULT  */
  YYSYMBOL_DEFAULTS = 125,                 /* DEFAULTS  */
  YYSYMBOL_DEFERRABLE = 126,               /* DEFERRABLE  */
  YYSYMBOL_DEFERRED = 127,                 /* DEFERRED  */
  YYSYMBOL_DEFINER = 128,                  /* DEFINER  */
  YYSYMBOL_DELETE_P = 129,                 /* DELETE_P  */
  YYSYMBOL_DELIMITER = 130,                /* DELIMITER  */
  YYSYMBOL_DELIMITERS = 131,               /* DELIMITERS  */
  YYSYMBOL_DEPENDS = 132,                  /* DEPENDS  */
  YYSYMBOL_DESC_P = 133,                   /* DESC_P  */
  YYSYMBOL_DESCRIBE = 134,                 /* DESCRIBE  */
  YYSYMBOL_DETACH = 135,                   /* DETACH  */
  YYSYMBOL_DICTIONARY = 136,               /* DICTIONARY  */
  YYSYMBOL_DISABLE_P = 137,                /* DISABLE_P  */
  YYSYMBOL_DISCARD = 138,                  /* DISCARD  */
  YYSYMBOL_DISTINCT = 139,                 /* DISTINCT  */
  YYSYMBOL_DO = 140,                       /* DO  */
  YYSYMBOL_DOCUMENT_P = 141,               /* DOCUMENT_P  */
  YYSYMBOL_DOMAIN_P = 142,                 /* DOMAIN_P  */
  YYSYMBOL_DOUBLE_P = 143,                 /* DOUBLE_P  */
  YYSYMBOL_DROP = 144,                     /* DROP  */
  YYSYMBOL_EACH = 145,                     /* EACH  */
  YYSYMBOL_ELSE = 146,                     /* ELSE  */
  YYSYMBOL_ENABLE_P = 147,                 /* ENABLE_P  */
  YYSYMBOL_ENCODING = 148,                 /* ENCODING  */
  YYSYMBOL_ENCRYPTED = 149,                /* ENCRYPTED  */
  YYSYMBOL_END_P = 150,                    /* END_P  */
  YYSYMBOL_ENUM_P = 151,                   /* ENUM_P  */
  YYSYMBOL_ESCAPE = 152,                   /* ESCAPE  */
  YYSYMBOL_EVENT = 153,                    /* EVENT  */
  YYSYMBOL_EXCEPT = 154,                   /* EXCEPT  */
  YYSYMBOL_EXCLUDE = 155,                  /* EXCLUDE  */
  YYSYMBOL_EXCLUDING = 156,                /* EXCLUDING  */
  YYSYMBOL_EXCLUSIVE = 157,                /* EXCLUSIVE  */
  YYSYMBOL_EXECUTE = 158,                  /* EXECUTE  */
  YYSYMBOL_EXISTS = 159,                   /* EXISTS  */
  YYSYMBOL_EXPLAIN = 160,                  /* EXPLAIN  */
  YYSYMBOL_EXPORT_P = 161,                 /* EXPORT_P  */
  YYSYMBOL_EXPORT_STATE = 162,             /* EXPORT_STATE  */
  YYSYMBOL_EXTENSION = 163,                /* EXTENSION  */
  YYSYMBOL_EXTENSIONS = 164,               /* EXTENSIONS  */
  YYSYMBOL_EXTERNAL = 165,                 /* EXTERNAL  */
  YYSYMBOL_EXTRACT = 166,                  /* EXTRACT  */
  YYSYMBOL_FALSE_P = 167,                  /* FALSE_P  */
  YYSYMBOL_FAMILY = 168,                   /* FAMILY  */
  YYSYMBOL_FETCH = 169,                    /* FETCH  */
  YYSYMBOL_FILTER = 170,                   /* FILTER  */
  YYSYMBOL_FIRST_P = 171,                  /* FIRST_P  */
  YYSYMBOL_FLOAT_P = 172,                  /* FLOAT_P  */
  YYSYMBOL_FOLLOWING = 173,                /* FOLLOWING  */
  YYSYMBOL_FOR = 174,                      /* FOR  */
  YYSYMBOL_FORCE = 175,                    /* FORCE  */
  YYSYMBOL_FOREIGN = 176,                  /* FOREIGN  */
  YYSYMBOL_FORWARD = 177,                  /* FORWARD  */
  YYSYMBOL_FREEZE = 178,                   /* FREEZE  */
  YYSYMBOL_FROM = 179,                     /* FROM  */
  YYSYMBOL_FULL = 180,                     /* FULL  */
  YYSYMBOL_FUNCTION = 181,                 /* FUNCTION  */
  YYSYMBOL_FUNCTIONS = 182,                /* FUNCTIONS  */
  YYSYMBOL_GENERATED = 183,                /* GENERATED  */
  YYSYMBOL_GLOB = 184,                     /* GLOB  */
  YYSYMBOL_GLOBAL = 185,                   /* GLOBAL  */
  YYSYMBOL_GRANT = 186,                    /* GRANT  */
  YYSYMBOL_GRANTED = 187,                  /* GRANTED  */
  YYSYMBOL_GROUP_P = 188,                  /* GROUP_P  */
  YYSYMBOL_GROUPING = 189,                 /* GROUPING  */
  YYSYMBOL_GROUPING_ID = 190,              /* GROUPING_ID  */
  YYSYMBOL_GROUPS = 191,                   /* GROUPS  */
  YYSYMBOL_HANDLER = 192,                  /* HANDLER  */
  YYSYMBOL_HAVING = 193,                   /* HAVING  */
  YYSYMBOL_HEADER_P = 194,                 /* HEADER_P  */
  YYSYMBOL_HOLD = 195,                     /* HOLD  */
  YYSYMBOL_HOUR_P = 196,                   /* HOUR_P  */
  YYSYMBOL_HOURS_P = 197,                  /* HOURS_P  */
  YYSYMBOL_IDENTITY_P = 198,               /* IDENTITY_P  */
  YYSYMBOL_IF_P = 199,                     /* IF_P  */
  YYSYMBOL_IGNORE_P = 200,                 /* IGNORE_P  */
  YYSYMBOL_ILIKE = 201,                    /* ILIKE  */
  YYSYMBOL_IMMEDIATE = 202,                /* IMMEDIATE  */
  YYSYMBOL_IMMUTABLE = 203,                /* IMMUTABLE  */
  YYSYMBOL_IMPLICIT_P = 204,               /* IMPLICIT_P  */
  YYSYMBOL_IMPORT_P = 205,                 /* IMPORT_P  */
  YYSYMBOL_IN_P = 206,                     /* IN_P  */
  YYSYMBOL_INCLUDE_P = 207,                /* INCLUDE_P  */
  YYSYMBOL_INCLUDING = 208,                /* INCLUDING  */
  YYSYMBOL_INCREMENT = 209,                /* INCREMENT  */
  YYSYMBOL_INDEX = 210,                    /* INDEX  */
  YYSYMBOL_INDEXES = 211,                  /* INDEXES  */
  YYSYMBOL_INHERIT = 212,                  /* INHERIT  */
  YYSYMBOL_INHERITS = 213,                 /* INHERITS  */
  YYSYMBOL_INITIALLY = 214,                /* INITIALLY  */
  YYSYMBOL_INLINE_P = 215,                 /* INLINE_P  */
  YYSYMBOL_INNER_P = 216,                  /* INNER_P  */
  YYSYMBOL_INOUT = 217,                    /* INOUT  */
  YYSYMBOL_INPUT_P = 218,                  /* INPUT_P  */
  YYSYMBOL_INSENSITIVE = 219,              /* INSENSITIVE  */
  YYSYMBOL_INSERT = 220,                   /* INSERT  */
  YYSYMBOL_INSTALL = 221,                  /* INSTALL  */
  YYSYMBOL_INSTEAD = 222,                  /* INSTEAD  */
  YYSYMBOL_INT_P = 223,                    /* INT_P  */
  YYSYMBOL_INTEGER = 224,                  /* INTEGER  */
  YYSYMBOL_INTERSECT = 225,                /* INTERSECT  */
  YYSYMBOL_INTERVAL = 226,                 /* INTERVAL  */
  YYSYMBOL_INTO = 227,                     /* INTO  */
  YYSYMBOL_INVOKER = 228,                  /* INVOKER  */
  YYSYMBOL_IS = 229,                       /* IS  */
  YYSYMBOL_ISNULL = 230,                   /* ISNULL  */
  YYSYMBOL_ISOLATION = 231,                /* ISOLATION  */
  YYSYMBOL_JOIN = 232,                     /* JOIN  */
  YYSYMBOL_JSON = 233,                     /* JSON  */
  YYSYMBOL_KEY = 234,                      /* KEY  */
  YYSYMBOL_LABEL = 235,                    /* LABEL  */
  YYSYMBOL_LANGUAGE = 236,                 /* LANGUAGE  */
  YYSYMBOL_LARGE_P = 237,                  /* LARGE_P  */
  YYSYMBOL_LAST_P = 238,                   /* LAST_P  */
  YYSYMBOL_LATERAL_P = 239,                /* LATERAL_P  */
  YYSYMBOL_LEADING = 240,                  /* LEADING  */
  YYSYMBOL_LEAKPROOF = 241,                /* LEAKPROOF  */
  YYSYMBOL_LEFT = 242,                     /* LEFT  */
  YYSYMBOL_LEVEL = 243,                    /* LEVEL  */
  YYSYMBOL_LIKE = 244,                     /* LIKE  */
  YYSYMBOL_LIMIT = 245,                    /* LIMIT  */
  YYSYMBOL_LISTEN = 246,                   /* LISTEN  */
  YYSYMBOL_LOAD = 247,                     /* LOAD  */
  YYSYMBOL_LOCAL = 248,                    /* LOCAL  */
  YYSYMBOL_LOCATION = 249,                 /* LOCATION  */
  YYSYMBOL_LOCK_P = 250,                   /* LOCK_P  */
  YYSYMBOL_LOCKED = 251,                   /* LOCKED  */
  YYSYMBOL_LOGGED = 252,                   /* LOGGED  */
  YYSYMBOL_MACRO = 253,                    /* MACRO  */
  YYSYMBOL_MAP = 254,                      /* MAP  */
  YYSYMBOL_MAPPING = 255,                  /* MAPPING  */
  YYSYMBOL_MATCH = 256,                    /* MATCH  */
  YYSYMBOL_MATERIALIZED = 257,             /* MATERIALIZED  */
  YYSYMBOL_MAXVALUE = 258,                 /* MAXVALUE  */
  YYSYMBOL_METHOD = 259,                   /* METHOD  */
  YYSYMBOL_MICROSECOND_P = 260,            /* MICROSECOND_P  */
  YYSYMBOL_MICROSECONDS_P = 261,           /* MICROSECONDS_P  */
  YYSYMBOL_MILLENNIA_P = 262,              /* MILLENNIA_P  */
  YYSYMBOL_MILLENNIUM_P = 263,             /* MILLENNIUM_P  */
  YYSYMBOL_MILLISECOND_P = 264,            /* MILLISECOND_P  */
  YYSYMBOL_MILLISECONDS_P = 265,           /* MILLISECONDS_P  */
  YYSYMBOL_MINUTE_P = 266,                 /* MINUTE_P  */
  YYSYMBOL_MINUTES_P = 267,                /* MINUTES_P  */
  YYSYMBOL_MINVALUE = 268,                 /* MINVALUE  */
  YYSYMBOL_MODE = 269,                     /* MODE  */
  YYSYMBOL_MONTH_P = 270,                  /* MONTH_P  */
  YYSYMBOL_MONTHS_P = 271,                 /* MONTHS_P  */
  YYSYMBOL_MOVE = 272,                     /* MOVE  */
  YYSYMBOL_NAME_P = 273,                   /* NAME_P  */
  YYSYMBOL_NAMES = 274,                    /* NAMES  */
  YYSYMBOL_NATIONAL = 275,                 /* NATIONAL  */
  YYSYMBOL_NATURAL = 276,                  /* NATURAL  */
  YYSYMBOL_NCHAR = 277,                    /* NCHAR  */
  YYSYMBOL_NEW = 278,                      /* NEW  */
  YYSYMBOL_NEXT = 279,                     /* NEXT  */
  YYSYMBOL_NO = 280,                       /* NO  */
  YYSYMBOL_NONE = 281,                     /* NONE  */
  YYSYMBOL_NOT = 282,                      /* NOT  */
  YYSYMBOL_NOTHING = 283,                  /* NOTHING  */
  YYSYMBOL_NOTIFY = 284,                   /* NOTIFY  */
  YYSYMBOL_NOTNULL = 285,                  /* NOTNULL  */
  YYSYMBOL_NOWAIT = 286,                   /* NOWAIT  */
  YYSYMBOL_NULL_P = 287,                   /* NULL_P  */
  YYSYMBOL_NULLIF = 288,                   /* NULLIF  */
  YYSYMBOL_NULLS_P = 289,                  /* NULLS_P  */
  YYSYMBOL_NUMERIC = 290,                  /* NUMERIC  */
  YYSYMBOL_OBJECT_P = 291,                 /* OBJECT_P  */
  YYSYMBOL_OF = 292,                       /* OF  */
  YYSYMBOL_OFF = 293,                      /* OFF  */
  YYSYMBOL_OFFSET = 294,                   /* OFFSET  */
  YYSYMBOL_OIDS = 295,                     /* OIDS  */
  YYSYMBOL_OLD = 296,                      /* OLD  */
  YYSYMBOL_ON = 297,                       /* ON  */
  YYSYMBOL_ONLY = 298,                     /* ONLY  */
  YYSYMBOL_OPERATOR = 299,                 /* OPERATOR  */
  YYSYMBOL_OPTION = 300,                   /* OPTION  */
  YYSYMBOL_OPTIONS = 301,                  /* OPTIONS  */
  YYSYMBOL_OR = 302,                       /* OR  */
  YYSYMBOL_ORDER = 303,                    /* ORDER  */
  YYSYMBOL_ORDINALITY = 304,               /* ORDINALITY  */
  YYSYMBOL_OTHERS = 305,                   /* OTHERS  */
  YYSYMBOL_OUT_P = 306,                    /* OUT_P  */
  YYSYMBOL_OUTER_P = 307,                  /* OUTER_P  */
  YYSYMBOL_OVER = 308,                     /* OVER  */
  YYSYMBOL_OVERLAPS = 309,                 /* OVERLAPS  */
  YYSYMBOL_OVERLAY = 310,                  /* OVERLAY  */
  YYSYMBOL_OVERRIDING = 311,               /* OVERRIDING  */
  YYSYMBOL_OWNED = 312,                    /* OWNED  */
  YYSYMBOL_OWNER = 313,                    /* OWNER  */
  YYSYMBOL_PARALLEL = 314,                 /* PARALLEL  */
  YYSYMBOL_PARSER = 315,                   /* PARSER  */
  YYSYMBOL_PARTIAL = 316,                  /* PARTIAL  */
  YYSYMBOL_PARTITION = 317,                /* PARTITION  */
  YYSYMBOL_PASSING = 318,                  /* PASSING  */
  YYSYMBOL_PASSWORD = 319,                 /* PASSWORD  */
  YYSYMBOL_PERCENT = 320,                  /* PERCENT  */
  YYSYMBOL_PERSISTENT = 321,               /* PERSISTENT  */
  YYSYMBOL_PIVOT = 322,                    /* PIVOT  */
  YYSYMBOL_PIVOT_LONGER = 323,             /* PIVOT_LONGER  */
  YYSYMBOL_PIVOT_WIDER = 324,              /* PIVOT_WIDER  */
  YYSYMBOL_PLACING = 325,                  /* PLACING  */
  YYSYMBOL_PLANS = 326,                    /* PLANS  */
  YYSYMBOL_POLICY = 327,                   /* POLICY  */
  YYSYMBOL_POSITION = 328,                 /* POSITION  */
  YYSYMBOL_POSITIONAL = 329,               /* POSITIONAL  */
  YYSYMBOL_PRAGMA_P = 330,                 /* PRAGMA_P  */
  YYSYMBOL_PRECEDING = 331,                /* PRECEDING  */
  YYSYMBOL_PRECISION = 332,                /* PRECISION  */
  YYSYMBOL_PREPARE = 333,                  /* PREPARE  */
  YYSYMBOL_PREPARED = 334,                 /* PREPARED  */
  YYSYMBOL_PRESERVE = 335,                 /* PRESERVE  */
  YYSYMBOL_PRIMARY = 336,                  /* PRIMARY  */
  YYSYMBOL_PRIOR = 337,                    /* PRIOR  */
  YYSYMBOL_PRIVILEGES = 338,               /* PRIVILEGES  */
  YYSYMBOL_PROCEDURAL = 339,               /* PROCEDURAL  */
  YYSYMBOL_PROCEDURE = 340,                /* PROCEDURE  */
  YYSYMBOL_PROGRAM = 341,                  /* PROGRAM  */
  YYSYMBOL_PUBLICATION = 342,              /* PUBLICATION  */
  YYSYMBOL_QUALIFY = 343,                  /* QUALIFY  */
  YYSYMBOL_QUARTER_P = 344,                /* QUARTER_P  */
  YYSYMBOL_QUARTERS_P = 345,               /* QUARTERS_P  */
  YYSYMBOL_QUOTE = 346,                    /* QUOTE  */
  YYSYMBOL_RANGE = 347,                    /* RANGE  */
  YYSYMBOL_READ_P = 348,                   /* READ_P  */
  YYSYMBOL_REAL = 349,                     /* REAL  */
  YYSYMBOL_REASSIGN = 350,                 /* REASSIGN  */
  YYSYMBOL_RECHECK = 351,                  /* RECHECK  */
  YYSYMBOL_RECURSIVE = 352,                /* RECURSIVE  */
  YYSYMBOL_REF = 353,                      /* REF  */
  YYSYMBOL_REFERENCES = 354,               /* REFERENCES  */
  YYSYMBOL_REFERENCING = 355,              /* REFERENCING  */
  YYSYMBOL_REFRESH = 356,                  /* REFRESH  */
  YYSYMBOL_REINDEX = 357,                  /* REINDEX  */
  YYSYMBOL_RELATIVE_P = 358,               /* RELATIVE_P  */
  YYSYMBOL_RELEASE = 359,                  /* RELEASE  */
  YYSYMBOL_RENAME = 360,                   /* RENAME  */
  YYSYMBOL_REPEATABLE = 361,               /* REPEATABLE  */
  YYSYMBOL_REPLACE = 362,                  /* REPLACE  */
  YYSYMBOL_REPLICA = 363,                  /* REPLICA  */
  YYSYMBOL_RESET = 364,                    /* RESET  */
  YYSYMBOL_RESPECT_P = 365,                /* RESPECT_P  */
  YYSYMBOL_RESTART = 366,                  /* RESTART  */
  YYSYMBOL_RESTRICT = 367,                 /* RESTRICT  */
  YYSYMBOL_RETURNING = 368,                /* RETURNING  */
  YYSYMBOL_RETURNS = 369,                  /* RETURNS  */
  YYSYMBOL_REVOKE = 370,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 371,                    /* RIGHT  */
  YYSYMBOL_ROLE = 372,                     /* ROLE  */
  YYSYMBOL_ROLLBACK = 373,                 /* ROLLBACK  */
  YYSYMBOL_ROLLUP = 374,                   /* ROLLUP  */
  YYSYMBOL_ROW = 375,                      /* ROW  */
  YYSYMBOL_ROWS = 376,                     /* ROWS  */
  YYSYMBOL_RULE = 377,                     /* RULE  */
  YYSYMBOL_SAMPLE = 378,                   /* SAMPLE  */
  YYSYMBOL_SAVEPOINT = 379,                /* SAVEPOINT  */
  YYSYMBOL_SCHEMA = 380,                   /* SCHEMA  */
  YYSYMBOL_SCHEMAS = 381,                  /* SCHEMAS  */
  YYSYMBOL_SCOPE = 382,                    /* SCOPE  */
  YYSYMBOL_SCROLL = 383,                   /* SCROLL  */
  YYSYMBOL_SEARCH = 384,                   /* SEARCH  */
  YYSYMBOL_SECOND_P = 385,                 /* SECOND_P  */
  YYSYMBOL_SECONDS_P = 386,                /* SECONDS_P  */
  YYSYMBOL_SECRET = 387,                   /* SECRET  */
  YYSYMBOL_SECURITY = 388,                 /* SECURITY  */
  YYSYMBOL_SELECT = 389,                   /* SELECT  */
  YYSYMBOL_SEMI = 390,                     /* SEMI  */
  YYSYMBOL_SEQUENCE = 391,                 /* SEQUENCE  */
  YYSYMBOL_SEQUENCES = 392,                /* SEQUENCES  */
  YYSYMBOL_SERIALIZABLE = 393,             /* SERIALIZABLE  */
  YYSYMBOL_SERVER = 394,                   /* SERVER  */
  YYSYMBOL_SESSION = 395,                  /* SESSION  */
  YYSYMBOL_SET = 396,                      /* SET  */
  YYSYMBOL_SETOF = 397,                    /* SETOF  */
  YYSYMBOL_SETS = 398,                     /* SETS  */
  YYSYMBOL_SHARE = 399,                    /* SHARE  */
  YYSYMBOL_SHOW = 400,                     /* SHOW  */
  YYSYMBOL_SIMILAR = 401,                  /* SIMILAR  */
  YYSYMBOL_SIMPLE = 402,                   /* SIMPLE  */
  YYSYMBOL_SKIP = 403,                     /* SKIP  */
  YYSYMBOL_SMALLINT = 404,                 /* SMALLINT  */
  YYSYMBOL_SNAPSHOT = 405,                 /* SNAPSHOT  */
  YYSYMBOL_SOME = 406,                     /* SOME  */
  YYSYMBOL_SQL_P = 407,                    /* SQL_P  */
  YYSYMBOL_STABLE = 408,                   /* STABLE  */
  YYSYMBOL_STANDALONE_P = 409,             /* STANDALONE_P  */
  YYSYMBOL_START = 410,                    /* START  */
  YYSYMBOL_STATEMENT = 411,                /* STATEMENT  */
  YYSYMBOL_STATISTICS = 412,               /* STATISTICS  */
  YYSYMBOL_STDIN = 413,                    /* STDIN  */
  YYSYMBOL_STDOUT = 414,                   /* STDOUT  */
  YYSYMBOL_STORAGE = 415,                  /* STORAGE  */
  YYSYMBOL_STORED = 416,                   /* STORED  */
  YYSYMBOL_STRICT_P = 417,                 /* STRICT_P  */
  YYSYMBOL_STRIP_P = 418,                  /* STRIP_P  */
  YYSYMBOL_STRUCT = 419,                   /* STRUCT  */
  YYSYMBOL_SUBSCRIPTION = 420,             /* SUBSCRIPTION  */
  YYSYMBOL_SUBSTRING = 421,                /* SUBSTRING  */
  YYSYMBOL_SUMMARIZE = 422,                /* SUMMARIZE  */
  YYSYMBOL_SYMMETRIC = 423,                /* SYMMETRIC  */
  YYSYMBOL_SYSID = 424,                    /* SYSID  */
  YYSYMBOL_SYSTEM_P = 425,                 /* SYSTEM_P  */
  YYSYMBOL_TABLE = 426,                    /* TABLE  */
  YYSYMBOL_TABLES = 427,                   /* TABLES  */
  YYSYMBOL_TABLESAMPLE = 428,              /* TABLESAMPLE  */
  YYSYMBOL_TABLESPACE = 429,               /* TABLESPACE  */
  YYSYMBOL_TEMP = 430,                     /* TEMP  */
  YYSYMBOL_TEMPLATE = 431,                 /* TEMPLATE  */
  YYSYMBOL_TEMPORARY = 432,                /* TEMPORARY  */
  YYSYMBOL_TEXT_P = 433,                   /* TEXT_P  */
  YYSYMBOL_THEN = 434,                     /* THEN  */
  YYSYMBOL_TIES = 435,                     /* TIES  */
  YYSYMBOL_TIME = 436,                     /* TIME  */
  YYSYMBOL_TIMESTAMP = 437,                /* TIMESTAMP  */
  YYSYMBOL_TO = 438,                       /* TO  */
  YYSYMBOL_TRAILING = 439,                 /* TRAILING  */
  YYSYMBOL_TRANSACTION = 440,              /* TRANSACTION  */
  YYSYMBOL_TRANSFORM = 441,                /* TRANSFORM  */
  YYSYMBOL_TREAT = 442,                    /* TREAT  */
  YYSYMBOL_TRIGGER = 443,                  /* TRIGGER  */
  YYSYMBOL_TRIM = 444,                     /* TRIM  */
  YYSYMBOL_TRUE_P = 445,                   /* TRUE_P  */
  YYSYMBOL_TRUNCATE = 446,                 /* TRUNCATE  */
  YYSYMBOL_TRUSTED = 447,                  /* TRUSTED  */
  YYSYMBOL_TRY_CAST = 448,                 /* TRY_CAST  */
  YYSYMBOL_TYPE_P = 449,                   /* TYPE_P  */
  YYSYMBOL_TYPES_P = 450,                  /* TYPES_P  */
  YYSYMBOL_UNBOUNDED = 451,                /* UNBOUNDED  */
  YYSYMBOL_UNCOMMITTED = 452,              /* UNCOMMITTED  */
  YYSYMBOL_UNENCRYPTED = 453,              /* UNENCRYPTED  */
  YYSYMBOL_UNION = 454,                    /* UNION  */
  YYSYMBOL_UNIQUE = 455,                   /* UNIQUE  */
  YYSYMBOL_UNKNOWN = 456,                  /* UNKNOWN  */
  YYSYMBOL_UNLISTEN = 457,                 /* UNLISTEN  */
  YYSYMBOL_UNLOGGED = 458,                 /* UNLOGGED  */
  YYSYMBOL_UNPIVOT = 459,                  /* UNPIVOT  */
  YYSYMBOL_UNTIL = 460,                    /* UNTIL  */
  YYSYMBOL_UPDATE = 461,                   /* UPDATE  */
  YYSYMBOL_USE_P = 462,                    /* USE_P  */
  YYSYMBOL_USER = 463,                     /* USER  */
  YYSYMBOL_USING = 464,                    /* USING  */
  YYSYMBOL_VACUUM = 465,                   /* VACUUM  */
  YYSYMBOL_VALID = 466,                    /* VALID  */
  YYSYMBOL_VALIDATE = 467,                 /* VALIDATE  */
  YYSYMBOL_VALIDATOR = 468,                /* VALIDATOR  */
  YYSYMBOL_VALUE_P = 469,                  /* VALUE_P  */
  YYSYMBOL_VALUES = 470,                   /* VALUES  */
  YYSYMBOL_VARCHAR = 471,                  /* VARCHAR  */
  YYSYMBOL_VARIABLE_P = 472,               /* VARIABLE_P  */
  YYSYMBOL_VARIADIC = 473,                 /* VARIADIC  */
  YYSYMBOL_VARYING = 474,                  /* VARYING  */
  YYSYMBOL_VERBOSE = 475,                  /* VERBOSE  */
  YYSYMBOL_VERSION_P = 476,                /* VERSION_P  */
  YYSYMBOL_VIEW = 477,                     /* VIEW  */
  YYSYMBOL_VIEWS = 478,                    /* VIEWS  */
  YYSYMBOL_VIRTUAL = 479,                  /* VIRTUAL  */
  YYSYMBOL_VOLATILE = 480,                 /* VOLATILE  */
  YYSYMBOL_WEEK_P = 481,                   /* WEEK_P  */
  YYSYMBOL_WEEKS_P = 482,                  /* WEEKS_P  */
  YYSYMBOL_WHEN = 483,                     /* WHEN  */
  YYSYMBOL_WHERE = 484,                    /* WHERE  */
  YYSYMBOL_WHITESPACE_P = 485,             /* WHITESPACE_P  */
  YYSYMBOL_WINDOW = 486,                   /* WINDOW  */
  YYSYMBOL_WITH = 487,                     /* WITH  */
  YYSYMBOL_WITHIN = 488,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 489,                  /* WITHOUT  */
  YYSYMBOL_WORK = 490,                     /* WORK  */
  YYSYMBOL_WRAPPER = 491,                  /* WRAPPER  */
  YYSYMBOL_WRITE_P = 492,                  /* WRITE_P  */
  YYSYMBOL_XML_P = 493,                    /* XML_P  */
  YYSYMBOL_XMLATTRIBUTES = 494,            /* XMLATTRIBUTES  */
  YYSYMBOL_XMLCONCAT = 495,                /* XMLCONCAT  */
  YYSYMBOL_XMLELEMENT = 496,               /* XMLELEMENT  */
  YYSYMBOL_XMLEXISTS = 497,                /* XMLEXISTS  */
  YYSYMBOL_XMLFOREST = 498,                /* XMLFOREST  */
  YYSYMBOL_XMLNAMESPACES = 499,            /* XMLNAMESPACES  */
  YYSYMBOL_XMLPARSE = 500,                 /* XMLPARSE  */
  YYSYMBOL_XMLPI = 501,                    /* XMLPI  */
  YYSYMBOL_XMLROOT = 502,                  /* XMLROOT  */
  YYSYMBOL_XMLSERIALIZE = 503,             /* XMLSERIALIZE  */
  YYSYMBOL_XMLTABLE = 504,                 /* XMLTABLE  */
  YYSYMBOL_YEAR_P = 505,                   /* YEAR_P  */
  YYSYMBOL_YEARS_P = 506,                  /* YEARS_P  */
  YYSYMBOL_YES_P = 507,                    /* YES_P  */
  YYSYMBOL_ZONE = 508,                     /* ZONE  */
  YYSYMBOL_NOT_LA = 509,                   /* NOT_LA  */
  YYSYMBOL_NULLS_LA = 510,                 /* NULLS_LA  */
  YYSYMBOL_WITH_LA = 511,                  /* WITH_LA  */
  YYSYMBOL_512_ = 512,                     /* '<'  */
  YYSYMBOL_513_ = 513,                     /* '>'  */
  YYSYMBOL_514_ = 514,                     /* '='  */
  YYSYMBOL_POSTFIXOP = 515,                /* POSTFIXOP  */
  YYSYMBOL_516_ = 516,                     /* '+'  */
  YYSYMBOL_517_ = 517,                     /* '-'  */
  YYSYMBOL_518_ = 518,                     /* '*'  */
  YYSYMBOL_519_ = 519,                     /* '/'  */
  YYSYMBOL_520_ = 520,                     /* '%'  */
  YYSYMBOL_521_ = 521,                     /* '^'  */
  YYSYMBOL_UMINUS = 522,                   /* UMINUS  */
  YYSYMBOL_523_ = 523,                     /* '['  */
  YYSYMBOL_524_ = 524,                     /* ']'  */
  YYSYMBOL_525_ = 525,                     /* '('  */
  YYSYMBOL_526_ = 526,                     /* ')'  */
  YYSYMBOL_527_ = 527,                     /* '.'  */
  YYSYMBOL_528_ = 528,                     /* ';'  */
  YYSYMBOL_YYACCEPT = 529,                 /* $accept  */
  YYSYMBOL_AlterObjectSchemaStmt = 530,    /* AlterObjectSchemaStmt  */
  YYSYMBOL_AlterSeqStmt = 531,             /* AlterSeqStmt  */
  YYSYMBOL_SeqOptList = 532,               /* SeqOptList  */
  YYSYMBOL_opt_with = 533,                 /* opt_with  */
  YYSYMBOL_NumericOnly = 534,              /* NumericOnly  */
  YYSYMBOL_SeqOptElem = 535,               /* SeqOptElem  */
  YYSYMBOL_opt_by = 536,                   /* opt_by  */
  YYSYMBOL_SignedIconst = 537,             /* SignedIconst  */
  YYSYMBOL_unreserved_keyword = 538,       /* unreserved_keyword  */
  YYSYMBOL_col_name_keyword = 539,         /* col_name_keyword  */
  YYSYMBOL_func_name_keyword = 540,        /* func_name_keyword  */
  YYSYMBOL_type_name_keyword = 541,        /* type_name_keyword  */
  YYSYMBOL_other_keyword = 542,            /* other_keyword  */
  YYSYMBOL_type_func_name_keyword = 543,   /* type_func_name_keyword  */
  YYSYMBOL_reserved_keyword = 544,         /* reserved_keyword  */
  YYSYMBOL_AlterTableStmt = 545,           /* AlterTableStmt  */
  YYSYMBOL_alter_identity_column_option_list = 546, /* alter_identity_column_option_list  */
  YYSYMBOL_alter_column_default = 547,     /* alter_column_default  */
  YYSYMBOL_alter_identity_column_option = 548, /* alter_identity_column_option  */
  YYSYMBOL_alter_generic_option_list = 549, /* alter_generic_option_list  */
  YYSYMBOL_alter_table_cmd = 550,          /* alter_table_cmd  */
  YYSYMBOL_alter_using = 551,              /* alter_using  */
  YYSYMBOL_alter_generic_option_elem = 552, /* alter_generic_option_elem  */
  YYSYMBOL_alter_table_cmds = 553,         /* alter_table_cmds  */
  YYSYMBOL_alter_generic_options = 554,    /* alter_generic_options  */
  YYSYMBOL_opt_set_data = 555,             /* opt_set_data  */
  YYSYMBOL_AnalyzeStmt = 556,              /* AnalyzeStmt  */
  YYSYMBOL_AttachStmt = 557,               /* AttachStmt  */
  YYSYMBOL_DetachStmt = 558,               /* DetachStmt  */
  YYSYMBOL_opt_database = 559,             /* opt_database  */
  YYSYMBOL_opt_database_alias = 560,       /* opt_database_alias  */
  YYSYMBOL_CallStmt = 561,                 /* CallStmt  */
  YYSYMBOL_CheckPointStmt = 562,           /* CheckPointStmt  */
  YYSYMBOL_opt_col_id = 563,               /* opt_col_id  */
  YYSYMBOL_CommentOnStmt = 564,            /* CommentOnStmt  */
  YYSYMBOL_comment_value = 565,            /* comment_value  */
  YYSYMBOL_comment_on_type_any_name = 566, /* comment_on_type_any_name  */
  YYSYMBOL_qualified_name = 567,           /* qualified_name  */
  YYSYMBOL_ColId = 568,                    /* ColId  */
  YYSYMBOL_ColIdOrString = 569,            /* ColIdOrString  */
  YYSYMBOL_Sconst = 570,                   /* Sconst  */
  YYSYMBOL_indirection = 571,              /* indirection  */
  YYSYMBOL_indirection_el = 572,           /* indirection_el  */
  YYSYMBOL_attr_name = 573,                /* attr_name  */
  YYSYMBOL_ColLabel = 574,                 /* ColLabel  */
  YYSYMBOL_CopyStmt = 575,                 /* CopyStmt  */
  YYSYMBOL_copy_database_flag = 576,       /* copy_database_flag  */
  YYSYMBOL_copy_from = 577,                /* copy_from  */
  YYSYMBOL_copy_delimiter = 578,           /* copy_delimiter  */
  YYSYMBOL_copy_generic_opt_arg_list = 579, /* copy_generic_opt_arg_list  */
  YYSYMBOL_opt_using = 580,                /* opt_using  */
  YYSYMBOL_opt_as = 581,                   /* opt_as  */
  YYSYMBOL_opt_program = 582,              /* opt_program  */
  YYSYMBOL_copy_options = 583,             /* copy_options  */
  YYSYMBOL_copy_generic_opt_arg = 584,     /* copy_generic_opt_arg  */
  YYSYMBOL_copy_generic_opt_elem = 585,    /* copy_generic_opt_elem  */
  YYSYMBOL_opt_oids = 586,                 /* opt_oids  */
  YYSYMBOL_copy_opt_list = 587,            /* copy_opt_list  */
  YYSYMBOL_opt_binary = 588,               /* opt_binary  */
  YYSYMBOL_copy_opt_item = 589,            /* copy_opt_item  */
  YYSYMBOL_copy_generic_opt_arg_list_item = 590, /* copy_generic_opt_arg_list_item  */
  YYSYMBOL_copy_file_name = 591,           /* copy_file_name  */
  YYSYMBOL_copy_generic_opt_list = 592,    /* copy_generic_opt_list  */
  YYSYMBOL_CreateStmt = 593,               /* CreateStmt  */
  YYSYMBOL_ConstraintAttributeSpec = 594,  /* ConstraintAttributeSpec  */
  YYSYMBOL_def_arg = 595,                  /* def_arg  */
  YYSYMBOL_OptParenthesizedSeqOptList = 596, /* OptParenthesizedSeqOptList  */
  YYSYMBOL_generic_option_arg = 597,       /* generic_option_arg  */
  YYSYMBOL_key_action = 598,               /* key_action  */
  YYSYMBOL_ColConstraint = 599,            /* ColConstraint  */
  YYSYMBOL_ColConstraintElem = 600,        /* ColConstraintElem  */
  YYSYMBOL_GeneratedColumnType = 601,      /* GeneratedColumnType  */
  YYSYMBOL_opt_GeneratedColumnType = 602,  /* opt_GeneratedColumnType  */
  YYSYMBOL_GeneratedConstraintElem = 603,  /* GeneratedConstraintElem  */
  YYSYMBOL_generic_option_elem = 604,      /* generic_option_elem  */
  YYSYMBOL_key_update = 605,               /* key_update  */
  YYSYMBOL_key_actions = 606,              /* key_actions  */
  YYSYMBOL_OnCommitOption = 607,           /* OnCommitOption  */
  YYSYMBOL_reloptions = 608,               /* reloptions  */
  YYSYMBOL_opt_no_inherit = 609,           /* opt_no_inherit  */
  YYSYMBOL_TableConstraint = 610,          /* TableConstraint  */
  YYSYMBOL_TableLikeOption = 611,          /* TableLikeOption  */
  YYSYMBOL_reloption_list = 612,           /* reloption_list  */
  YYSYMBOL_ExistingIndex = 613,            /* ExistingIndex  */
  YYSYMBOL_ConstraintAttr = 614,           /* ConstraintAttr  */
  YYSYMBOL_OptWith = 615,                  /* OptWith  */
  YYSYMBOL_definition = 616,               /* definition  */
  YYSYMBOL_TableLikeOptionList = 617,      /* TableLikeOptionList  */
  YYSYMBOL_generic_option_name = 618,      /* generic_option_name  */
  YYSYMBOL_ConstraintAttributeElem = 619,  /* ConstraintAttributeElem  */
  YYSYMBOL_columnDef = 620,                /* columnDef  */
  YYSYMBOL_def_list = 621,                 /* def_list  */
  YYSYMBOL_index_name = 622,               /* index_name  */
  YYSYMBOL_TableElement = 623,             /* TableElement  */
  YYSYMBOL_def_elem = 624,                 /* def_elem  */
  YYSYMBOL_opt_definition = 625,           /* opt_definition  */
  YYSYMBOL_OptTableElementList = 626,      /* OptTableElementList  */
  YYSYMBOL_columnElem = 627,               /* columnElem  */
  YYSYMBOL_opt_column_list = 628,          /* opt_column_list  */
  YYSYMBOL_ColQualList = 629,              /* ColQualList  */
  YYSYMBOL_key_delete = 630,               /* key_delete  */
  YYSYMBOL_reloption_elem = 631,           /* reloption_elem  */
  YYSYMBOL_columnList = 632,               /* columnList  */
  YYSYMBOL_columnList_opt_comma = 633,     /* columnList_opt_comma  */
  YYSYMBOL_func_type = 634,                /* func_type  */
  YYSYMBOL_ConstraintElem = 635,           /* ConstraintElem  */
  YYSYMBOL_TableElementList = 636,         /* TableElementList  */
  YYSYMBOL_key_match = 637,                /* key_match  */
  YYSYMBOL_TableLikeClause = 638,          /* TableLikeClause  */
  YYSYMBOL_OptTemp = 639,                  /* OptTemp  */
  YYSYMBOL_generated_when = 640,           /* generated_when  */
  YYSYMBOL_CreateAsStmt = 641,             /* CreateAsStmt  */
  YYSYMBOL_opt_with_data = 642,            /* opt_with_data  */
  YYSYMBOL_create_as_target = 643,         /* create_as_target  */
  YYSYMBOL_CreateFunctionStmt = 644,       /* CreateFunctionStmt  */
  YYSYMBOL_table_macro_definition = 645,   /* table_macro_definition  */
  YYSYMBOL_table_macro_definition_parens = 646, /* table_macro_definition_parens  */
  YYSYMBOL_table_macro_list_internal = 647, /* table_macro_list_internal  */
  YYSYMBOL_table_macro_list = 648,         /* table_macro_list  */
  YYSYMBOL_macro_definition = 649,         /* macro_definition  */
  YYSYMBOL_macro_definition_list = 650,    /* macro_definition_list  */
  YYSYMBOL_macro_alias = 651,              /* macro_alias  */
  YYSYMBOL_param_list = 652,               /* param_list  */
  YYSYMBOL_CreateSchemaStmt = 653,         /* CreateSchemaStmt  */
  YYSYMBOL_OptSchemaEltList = 654,         /* OptSchemaEltList  */
  YYSYMBOL_schema_stmt = 655,              /* schema_stmt  */
  YYSYMBOL_CreateSecretStmt = 656,         /* CreateSecretStmt  */
  YYSYMBOL_opt_secret_name = 657,          /* opt_secret_name  */
  YYSYMBOL_opt_persist = 658,              /* opt_persist  */
  YYSYMBOL_opt_storage_specifier = 659,    /* opt_storage_specifier  */
  YYSYMBOL_CreateSeqStmt = 660,            /* CreateSeqStmt  */
  YYSYMBOL_OptSeqOptList = 661,            /* OptSeqOptList  */
  YYSYMBOL_CreateTypeStmt = 662,           /* CreateTypeStmt  */
  YYSYMBOL_opt_enum_val_list = 663,        /* opt_enum_val_list  */
  YYSYMBOL_enum_val_list = 664,            /* enum_val_list  */
  YYSYMBOL_DeallocateStmt = 665,           /* DeallocateStmt  */
  YYSYMBOL_DeleteStmt = 666,               /* DeleteStmt  */
  YYSYMBOL_relation_expr_opt_alias = 667,  /* relation_expr_opt_alias  */
  YYSYMBOL_where_or_current_clause = 668,  /* where_or_current_clause  */
  YYSYMBOL_using_clause = 669,             /* using_clause  */
  YYSYMBOL_DropStmt = 670,                 /* DropStmt  */
  YYSYMBOL_drop_type_any_name = 671,       /* drop_type_any_name  */
  YYSYMBOL_drop_type_name = 672,           /* drop_type_name  */
  YYSYMBOL_any_name_list = 673,            /* any_name_list  */
  YYSYMBOL_opt_drop_behavior = 674,        /* opt_drop_behavior  */
  YYSYMBOL_drop_type_name_on_any_name = 675, /* drop_type_name_on_any_name  */
  YYSYMBOL_DropSecretStmt = 676,           /* DropSecretStmt  */
  YYSYMBOL_opt_storage_drop_specifier = 677, /* opt_storage_drop_specifier  */
  YYSYMBOL_ExecuteStmt = 678,              /* ExecuteStmt  */
  YYSYMBOL_execute_param_expr = 679,       /* execute_param_expr  */
  YYSYMBOL_execute_param_list = 680,       /* execute_param_list  */
  YYSYMBOL_execute_param_clause = 681,     /* execute_param_clause  */
  YYSYMBOL_ExplainStmt = 682,              /* ExplainStmt  */
  YYSYMBOL_opt_verbose = 683,              /* opt_verbose  */
  YYSYMBOL_explain_option_arg = 684,       /* explain_option_arg  */
  YYSYMBOL_ExplainableStmt = 685,          /* ExplainableStmt  */
  YYSYMBOL_NonReservedWord = 686,          /* NonReservedWord  */
  YYSYMBOL_NonReservedWord_or_Sconst = 687, /* NonReservedWord_or_Sconst  */
  YYSYMBOL_explain_option_list = 688,      /* explain_option_list  */
  YYSYMBOL_analyze_keyword = 689,          /* analyze_keyword  */
  YYSYMBOL_opt_boolean_or_string = 690,    /* opt_boolean_or_string  */
  YYSYMBOL_explain_option_elem = 691,      /* explain_option_elem  */
  YYSYMBOL_explain_option_name = 692,      /* explain_option_name  */
  YYSYMBOL_ExportStmt = 693,               /* ExportStmt  */
  YYSYMBOL_ImportStmt = 694,               /* ImportStmt  */
  YYSYMBOL_IndexStmt = 695,                /* IndexStmt  */
  YYSYMBOL_access_method = 696,            /* access_method  */
  YYSYMBOL_access_method_clause = 697,     /* access_method_clause  */
  YYSYMBOL_opt_concurrently = 698,         /* opt_concurrently  */
  YYSYMBOL_opt_index_name = 699,           /* opt_index_name  */
  YYSYMBOL_opt_reloptions = 700,           /* opt_reloptions  */
  YYSYMBOL_opt_unique = 701,               /* opt_unique  */
  YYSYMBOL_InsertStmt = 702,               /* InsertStmt  */
  YYSYMBOL_insert_rest = 703,              /* insert_rest  */
  YYSYMBOL_insert_target = 704,            /* insert_target  */
  YYSYMBOL_opt_by_name_or_position = 705,  /* opt_by_name_or_position  */
  YYSYMBOL_opt_conf_expr = 706,            /* opt_conf_expr  */
  YYSYMBOL_opt_with_clause = 707,          /* opt_with_clause  */
  YYSYMBOL_insert_column_item = 708,       /* insert_column_item  */
  YYSYMBOL_set_clause = 709,               /* set_clause  */
  YYSYMBOL_opt_or_action = 710,            /* opt_or_action  */
  YYSYMBOL_opt_on_conflict = 711,          /* opt_on_conflict  */
  YYSYMBOL_index_elem = 712,               /* index_elem  */
  YYSYMBOL_returning_clause = 713,         /* returning_clause  */
  YYSYMBOL_override_kind = 714,            /* override_kind  */
  YYSYMBOL_set_target_list = 715,          /* set_target_list  */
  YYSYMBOL_opt_collate = 716,              /* opt_collate  */
  YYSYMBOL_opt_class = 717,                /* opt_class  */
  YYSYMBOL_insert_column_list = 718,       /* insert_column_list  */
  YYSYMBOL_set_clause_list = 719,          /* set_clause_list  */
  YYSYMBOL_set_clause_list_opt_comma = 720, /* set_clause_list_opt_comma  */
  YYSYMBOL_index_params = 721,             /* index_params  */
  YYSYMBOL_set_target = 722,               /* set_target  */
  YYSYMBOL_LoadStmt = 723,                 /* LoadStmt  */
  YYSYMBOL_opt_force = 724,                /* opt_force  */
  YYSYMBOL_file_name = 725,                /* file_name  */
  YYSYMBOL_opt_ext_version = 726,          /* opt_ext_version  */
  YYSYMBOL_PragmaStmt = 727,               /* PragmaStmt  */
  YYSYMBOL_PrepareStmt = 728,              /* PrepareStmt  */
  YYSYMBOL_prep_type_clause = 729,         /* prep_type_clause  */
  YYSYMBOL_PreparableStmt = 730,           /* PreparableStmt  */
  YYSYMBOL_RenameStmt = 731,               /* RenameStmt  */
  YYSYMBOL_opt_column = 732,               /* opt_column  */
  YYSYMBOL_SelectStmt = 733,               /* SelectStmt  */
  YYSYMBOL_select_with_parens = 734,       /* select_with_parens  */
  YYSYMBOL_select_no_parens = 735,         /* select_no_parens  */
  YYSYMBOL_select_clause = 736,            /* select_clause  */
  YYSYMBOL_opt_select = 737,               /* opt_select  */
  YYSYMBOL_simple_select = 738,            /* simple_select  */
  YYSYMBOL_value_or_values = 739,          /* value_or_values  */
  YYSYMBOL_pivot_keyword = 740,            /* pivot_keyword  */
  YYSYMBOL_unpivot_keyword = 741,          /* unpivot_keyword  */
  YYSYMBOL_pivot_column_entry = 742,       /* pivot_column_entry  */
  YYSYMBOL_pivot_column_list_internal = 743, /* pivot_column_list_internal  */
  YYSYMBOL_pivot_column_list = 744,        /* pivot_column_list  */
  YYSYMBOL_with_clause = 745,              /* with_clause  */
  YYSYMBOL_cte_list = 746,                 /* cte_list  */
  YYSYMBOL_common_table_expr = 747,        /* common_table_expr  */
  YYSYMBOL_opt_materialized = 748,         /* opt_materialized  */
  YYSYMBOL_into_clause = 749,              /* into_clause  */
  YYSYMBOL_OptTempTableName = 750,         /* OptTempTableName  */
  YYSYMBOL_opt_table = 751,                /* opt_table  */
  YYSYMBOL_all_or_distinct = 752,          /* all_or_distinct  */
  YYSYMBOL_by_name = 753,                  /* by_name  */
  YYSYMBOL_distinct_clause = 754,          /* distinct_clause  */
  YYSYMBOL_opt_all_clause = 755,           /* opt_all_clause  */
  YYSYMBOL_opt_ignore_nulls = 756,         /* opt_ignore_nulls  */
  YYSYMBOL_opt_sort_clause = 757,          /* opt_sort_clause  */
  YYSYMBOL_sort_clause = 758,              /* sort_clause  */
  YYSYMBOL_sortby_list = 759,              /* sortby_list  */
  YYSYMBOL_sortby = 760,                   /* sortby  */
  YYSYMBOL_opt_asc_desc = 761,             /* opt_asc_desc  */
  YYSYMBOL_opt_nulls_order = 762,          /* opt_nulls_order  */
  YYSYMBOL_select_limit = 763,             /* select_limit  */
  YYSYMBOL_opt_select_limit = 764,         /* opt_select_limit  */
  YYSYMBOL_limit_clause = 765,             /* limit_clause  */
  YYSYMBOL_offset_clause = 766,            /* offset_clause  */
  YYSYMBOL_sample_value = 767,             /* sample_value  */
  YYSYMBOL_sample_count = 768,             /* sample_count  */
  YYSYMBOL_sample_clause = 769,            /* sample_clause  */
  YYSYMBOL_opt_sample_func = 770,          /* opt_sample_func  */
  YYSYMBOL_tablesample_entry = 771,        /* tablesample_entry  */
  YYSYMBOL_tablesample_clause = 772,       /* tablesample_clause  */
  YYSYMBOL_opt_tablesample_clause = 773,   /* opt_tablesample_clause  */
  YYSYMBOL_opt_repeatable_clause = 774,    /* opt_repeatable_clause  */
  YYSYMBOL_select_limit_value = 775,       /* select_limit_value  */
  YYSYMBOL_select_offset_value = 776,      /* select_offset_value  */
  YYSYMBOL_select_fetch_first_value = 777, /* select_fetch_first_value  */
  YYSYMBOL_I_or_F_const = 778,             /* I_or_F_const  */
  YYSYMBOL_row_or_rows = 779,              /* row_or_rows  */
  YYSYMBOL_first_or_next = 780,            /* first_or_next  */
  YYSYMBOL_group_clause = 781,             /* group_clause  */
  YYSYMBOL_group_by_list = 782,            /* group_by_list  */
  YYSYMBOL_group_by_list_opt_comma = 783,  /* group_by_list_opt_comma  */
  YYSYMBOL_group_by_item = 784,            /* group_by_item  */
  YYSYMBOL_empty_grouping_set = 785,       /* empty_grouping_set  */
  YYSYMBOL_rollup_clause = 786,            /* rollup_clause  */
  YYSYMBOL_cube_clause = 787,              /* cube_clause  */
  YYSYMBOL_grouping_sets_clause = 788,     /* grouping_sets_clause  */
  YYSYMBOL_grouping_or_grouping_id = 789,  /* grouping_or_grouping_id  */
  YYSYMBOL_having_clause = 790,            /* having_clause  */
  YYSYMBOL_qualify_clause = 791,           /* qualify_clause  */
  YYSYMBOL_for_locking_clause = 792,       /* for_locking_clause  */
  YYSYMBOL_opt_for_locking_clause = 793,   /* opt_for_locking_clause  */
  YYSYMBOL_for_locking_items = 794,        /* for_locking_items  */
  YYSYMBOL_for_locking_item = 795,         /* for_locking_item  */
  YYSYMBOL_for_locking_strength = 796,     /* for_locking_strength  */
  YYSYMBOL_locked_rels_list = 797,         /* locked_rels_list  */
  YYSYMBOL_opt_nowait_or_skip = 798,       /* opt_nowait_or_skip  */
  YYSYMBOL_values_clause = 799,            /* values_clause  */
  YYSYMBOL_values_clause_opt_comma = 800,  /* values_clause_opt_comma  */
  YYSYMBOL_from_clause = 801,              /* from_clause  */
  YYSYMBOL_from_list = 802,                /* from_list  */
  YYSYMBOL_from_list_opt_comma = 803,      /* from_list_opt_comma  */
  YYSYMBOL_alias_prefix_colon_clause = 804, /* alias_prefix_colon_clause  */
  YYSYMBOL_table_ref = 805,                /* table_ref  */
  YYSYMBOL_opt_pivot_group_by = 806,       /* opt_pivot_group_by  */
  YYSYMBOL_opt_include_nulls = 807,        /* opt_include_nulls  */
  YYSYMBOL_single_pivot_value = 808,       /* single_pivot_value  */
  YYSYMBOL_pivot_header = 809,             /* pivot_header  */
  YYSYMBOL_pivot_value = 810,              /* pivot_value  */
  YYSYMBOL_pivot_value_list = 811,         /* pivot_value_list  */
  YYSYMBOL_unpivot_header = 812,           /* unpivot_header  */
  YYSYMBOL_unpivot_value = 813,            /* unpivot_value  */
  YYSYMBOL_unpivot_value_list = 814,       /* unpivot_value_list  */
  YYSYMBOL_joined_table = 815,             /* joined_table  */
  YYSYMBOL_alias_clause = 816,             /* alias_clause  */
  YYSYMBOL_opt_alias_clause = 817,         /* opt_alias_clause  */
  YYSYMBOL_func_alias_clause = 818,        /* func_alias_clause  */
  YYSYMBOL_join_type = 819,                /* join_type  */
  YYSYMBOL_join_outer = 820,               /* join_outer  */
  YYSYMBOL_join_qual = 821,                /* join_qual  */
  YYSYMBOL_relation_expr = 822,            /* relation_expr  */
  YYSYMBOL_func_table = 823,               /* func_table  */
  YYSYMBOL_rowsfrom_item = 824,            /* rowsfrom_item  */
  YYSYMBOL_rowsfrom_list = 825,            /* rowsfrom_list  */
  YYSYMBOL_opt_col_def_list = 826,         /* opt_col_def_list  */
  YYSYMBOL_opt_ordinality = 827,           /* opt_ordinality  */
  YYSYMBOL_where_clause = 828,             /* where_clause  */
  YYSYMBOL_TableFuncElementList = 829,     /* TableFuncElementList  */
  YYSYMBOL_TableFuncElement = 830,         /* TableFuncElement  */
  YYSYMBOL_opt_collate_clause = 831,       /* opt_collate_clause  */
  YYSYMBOL_colid_type_list = 832,          /* colid_type_list  */
  YYSYMBOL_RowOrStruct = 833,              /* RowOrStruct  */
  YYSYMBOL_opt_Typename = 834,             /* opt_Typename  */
  YYSYMBOL_Typename = 835,                 /* Typename  */
  YYSYMBOL_qualified_typename = 836,       /* qualified_typename  */
  YYSYMBOL_opt_array_bounds = 837,         /* opt_array_bounds  */
  YYSYMBOL_SimpleTypename = 838,           /* SimpleTypename  */
  YYSYMBOL_ConstTypename = 839,            /* ConstTypename  */
  YYSYMBOL_GenericType = 840,              /* GenericType  */
  YYSYMBOL_opt_type_modifiers = 841,       /* opt_type_modifiers  */
  YYSYMBOL_Numeric = 842,                  /* Numeric  */
  YYSYMBOL_opt_float = 843,                /* opt_float  */
  YYSYMBOL_Bit = 844,                      /* Bit  */
  YYSYMBOL_ConstBit = 845,                 /* ConstBit  */
  YYSYMBOL_BitWithLength = 846,            /* BitWithLength  */
  YYSYMBOL_BitWithoutLength = 847,         /* BitWithoutLength  */
  YYSYMBOL_Character = 848,                /* Character  */
  YYSYMBOL_ConstCharacter = 849,           /* ConstCharacter  */
  YYSYMBOL_CharacterWithLength = 850,      /* CharacterWithLength  */
  YYSYMBOL_CharacterWithoutLength = 851,   /* CharacterWithoutLength  */
  YYSYMBOL_character = 852,                /* character  */
  YYSYMBOL_opt_varying = 853,              /* opt_varying  */
  YYSYMBOL_ConstDatetime = 854,            /* ConstDatetime  */
  YYSYMBOL_ConstInterval = 855,            /* ConstInterval  */
  YYSYMBOL_opt_timezone = 856,             /* opt_timezone  */
  YYSYMBOL_year_keyword = 857,             /* year_keyword  */
  YYSYMBOL_month_keyword = 858,            /* month_keyword  */
  YYSYMBOL_day_keyword = 859,              /* day_keyword  */
  YYSYMBOL_hour_keyword = 860,             /* hour_keyword  */
  YYSYMBOL_minute_keyword = 861,           /* minute_keyword  */
  YYSYMBOL_second_keyword = 862,           /* second_keyword  */
  YYSYMBOL_millisecond_keyword = 863,      /* millisecond_keyword  */
  YYSYMBOL_microsecond_keyword = 864,      /* microsecond_keyword  */
  YYSYMBOL_week_keyword = 865,             /* week_keyword  */
  YYSYMBOL_quarter_keyword = 866,          /* quarter_keyword  */
  YYSYMBOL_decade_keyword = 867,           /* decade_keyword  */
  YYSYMBOL_century_keyword = 868,          /* century_keyword  */
  YYSYMBOL_millennium_keyword = 869,       /* millennium_keyword  */
  YYSYMBOL_opt_interval = 870,             /* opt_interval  */
  YYSYMBOL_a_expr = 871,                   /* a_expr  */
  YYSYMBOL_b_expr = 872,                   /* b_expr  */
  YYSYMBOL_c_expr = 873,                   /* c_expr  */
  YYSYMBOL_d_expr = 874,                   /* d_expr  */
  YYSYMBOL_indirection_expr_or_a_expr = 875, /* indirection_expr_or_a_expr  */
  YYSYMBOL_param_expr = 876,               /* param_expr  */
  YYSYMBOL_indirection_expr = 877,         /* indirection_expr  */
  YYSYMBOL_list_expr = 878,                /* list_expr  */
  YYSYMBOL_struct_expr = 879,              /* struct_expr  */
  YYSYMBOL_map_expr = 880,                 /* map_expr  */
  YYSYMBOL_func_application = 881,         /* func_application  */
  YYSYMBOL_func_expr = 882,                /* func_expr  */
  YYSYMBOL_func_expr_windowless = 883,     /* func_expr_windowless  */
  YYSYMBOL_func_expr_common_subexpr = 884, /* func_expr_common_subexpr  */
  YYSYMBOL_list_comprehension_lhs = 885,   /* list_comprehension_lhs  */
  YYSYMBOL_list_comprehension = 886,       /* list_comprehension  */
  YYSYMBOL_within_group_clause = 887,      /* within_group_clause  */
  YYSYMBOL_filter_clause = 888,            /* filter_clause  */
  YYSYMBOL_export_clause = 889,            /* export_clause  */
  YYSYMBOL_window_clause = 890,            /* window_clause  */
  YYSYMBOL_window_definition_list = 891,   /* window_definition_list  */
  YYSYMBOL_window_definition = 892,        /* window_definition  */
  YYSYMBOL_over_clause = 893,              /* over_clause  */
  YYSYMBOL_window_specification = 894,     /* window_specification  */
  YYSYMBOL_opt_existing_window_name = 895, /* opt_existing_window_name  */
  YYSYMBOL_opt_partition_clause = 896,     /* opt_partition_clause  */
  YYSYMBOL_opt_frame_clause = 897,         /* opt_frame_clause  */
  YYSYMBOL_frame_extent = 898,             /* frame_extent  */
  YYSYMBOL_frame_bound = 899,              /* frame_bound  */
  YYSYMBOL_opt_window_exclusion_clause = 900, /* opt_window_exclusion_clause  */
  YYSYMBOL_qualified_row = 901,            /* qualified_row  */
  YYSYMBOL_row = 902,                      /* row  */
  YYSYMBOL_dict_arg = 903,                 /* dict_arg  */
  YYSYMBOL_dict_arguments = 904,           /* dict_arguments  */
  YYSYMBOL_dict_arguments_opt_comma = 905, /* dict_arguments_opt_comma  */
  YYSYMBOL_map_arg = 906,                  /* map_arg  */
  YYSYMBOL_map_arguments = 907,            /* map_arguments  */
  YYSYMBOL_map_arguments_opt_comma = 908,  /* map_arguments_opt_comma  */
  YYSYMBOL_opt_map_arguments_opt_comma = 909, /* opt_map_arguments_opt_comma  */
  YYSYMBOL_sub_type = 910,                 /* sub_type  */
  YYSYMBOL_all_Op = 911,                   /* all_Op  */
  YYSYMBOL_MathOp = 912,                   /* MathOp  */
  YYSYMBOL_qual_Op = 913,                  /* qual_Op  */
  YYSYMBOL_qual_all_Op = 914,              /* qual_all_Op  */
  YYSYMBOL_subquery_Op = 915,              /* subquery_Op  */
  YYSYMBOL_any_operator = 916,             /* any_operator  */
  YYSYMBOL_c_expr_list = 917,              /* c_expr_list  */
  YYSYMBOL_c_expr_list_opt_comma = 918,    /* c_expr_list_opt_comma  */
  YYSYMBOL_expr_list = 919,                /* expr_list  */
  YYSYMBOL_expr_list_opt_comma = 920,      /* expr_list_opt_comma  */
  YYSYMBOL_opt_expr_list_opt_comma = 921,  /* opt_expr_list_opt_comma  */
  YYSYMBOL_func_arg_list = 922,            /* func_arg_list  */
  YYSYMBOL_func_arg_expr = 923,            /* func_arg_expr  */
  YYSYMBOL_type_list = 924,                /* type_list  */
  YYSYMBOL_extract_list = 925,             /* extract_list  */
  YYSYMBOL_extract_arg = 926,              /* extract_arg  */
  YYSYMBOL_overlay_list = 927,             /* overlay_list  */
  YYSYMBOL_overlay_placing = 928,          /* overlay_placing  */
  YYSYMBOL_position_list = 929,            /* position_list  */
  YYSYMBOL_substr_list = 930,              /* substr_list  */
  YYSYMBOL_substr_from = 931,              /* substr_from  */
  YYSYMBOL_substr_for = 932,               /* substr_for  */
  YYSYMBOL_trim_list = 933,                /* trim_list  */
  YYSYMBOL_in_expr = 934,                  /* in_expr  */
  YYSYMBOL_case_expr = 935,                /* case_expr  */
  YYSYMBOL_when_clause_list = 936,         /* when_clause_list  */
  YYSYMBOL_when_clause = 937,              /* when_clause  */
  YYSYMBOL_case_default = 938,             /* case_default  */
  YYSYMBOL_case_arg = 939,                 /* case_arg  */
  YYSYMBOL_columnrefList = 940,            /* columnrefList  */
  YYSYMBOL_columnref = 941,                /* columnref  */
  YYSYMBOL_columnref_opt_indirection = 942, /* columnref_opt_indirection  */
  YYSYMBOL_opt_slice_bound = 943,          /* opt_slice_bound  */
  YYSYMBOL_opt_indirection = 944,          /* opt_indirection  */
  YYSYMBOL_opt_func_arguments = 945,       /* opt_func_arguments  */
  YYSYMBOL_extended_indirection_el = 946,  /* extended_indirection_el  */
  YYSYMBOL_opt_extended_indirection = 947, /* opt_extended_indirection  */
  YYSYMBOL_opt_asymmetric = 948,           /* opt_asymmetric  */
  YYSYMBOL_opt_target_list_opt_comma = 949, /* opt_target_list_opt_comma  */
  YYSYMBOL_target_list = 950,              /* target_list  */
  YYSYMBOL_target_list_opt_comma = 951,    /* target_list_opt_comma  */
  YYSYMBOL_target_el = 952,                /* target_el  */
  YYSYMBOL_except_list = 953,              /* except_list  */
  YYSYMBOL_except_name = 954,              /* except_name  */
  YYSYMBOL_except_name_list = 955,         /* except_name_list  */
  YYSYMBOL_except_name_list_opt_comma = 956, /* except_name_list_opt_comma  */
  YYSYMBOL_opt_except_list = 957,          /* opt_except_list  */
  YYSYMBOL_replace_list_el = 958,          /* replace_list_el  */
  YYSYMBOL_replace_list = 959,             /* replace_list  */
  YYSYMBOL_replace_list_opt_comma = 960,   /* replace_list_opt_comma  */
  YYSYMBOL_opt_replace_list = 961,         /* opt_replace_list  */
  YYSYMBOL_rename_list_el = 962,           /* rename_list_el  */
  YYSYMBOL_rename_list = 963,              /* rename_list  */
  YYSYMBOL_rename_list_opt_comma = 964,    /* rename_list_opt_comma  */
  YYSYMBOL_opt_rename_list = 965,          /* opt_rename_list  */
  YYSYMBOL_qualified_name_list = 966,      /* qualified_name_list  */
  YYSYMBOL_name_list = 967,                /* name_list  */
  YYSYMBOL_name_list_opt_comma = 968,      /* name_list_opt_comma  */
  YYSYMBOL_name_list_opt_comma_opt_bracket = 969, /* name_list_opt_comma_opt_bracket  */
  YYSYMBOL_name = 970,                     /* name  */
  YYSYMBOL_func_name = 971,                /* func_name  */
  YYSYMBOL_AexprConst = 972,               /* AexprConst  */
  YYSYMBOL_Iconst = 973,                   /* Iconst  */
  YYSYMBOL_type_function_name = 974,       /* type_function_name  */
  YYSYMBOL_function_name_token = 975,      /* function_name_token  */
  YYSYMBOL_type_name_token = 976,          /* type_name_token  */
  YYSYMBOL_any_name = 977,                 /* any_name  */
  YYSYMBOL_attrs = 978,                    /* attrs  */
  YYSYMBOL_opt_name_list = 979,            /* opt_name_list  */
  YYSYMBOL_param_name = 980,               /* param_name  */
  YYSYMBOL_ColLabelOrString = 981,         /* ColLabelOrString  */
  YYSYMBOL_TransactionStmt = 982,          /* TransactionStmt  */
  YYSYMBOL_opt_transaction = 983,          /* opt_transaction  */
  YYSYMBOL_opt_transaction_type = 984,     /* opt_transaction_type  */
  YYSYMBOL_UpdateStmt = 985,               /* UpdateStmt  */
  YYSYMBOL_UpdateExtensionsStmt = 986,     /* UpdateExtensionsStmt  */
  YYSYMBOL_UseStmt = 987,                  /* UseStmt  */
  YYSYMBOL_VacuumStmt = 988,               /* VacuumStmt  */
  YYSYMBOL_vacuum_option_elem = 989,       /* vacuum_option_elem  */
  YYSYMBOL_opt_full = 990,                 /* opt_full  */
  YYSYMBOL_vacuum_option_list = 991,       /* vacuum_option_list  */
  YYSYMBOL_opt_freeze = 992,               /* opt_freeze  */
  YYSYMBOL_VariableResetStmt = 993,        /* VariableResetStmt  */
  YYSYMBOL_generic_reset = 994,            /* generic_reset  */
  YYSYMBOL_reset_rest = 995,               /* reset_rest  */
  YYSYMBOL_VariableSetStmt = 996,          /* VariableSetStmt  */
  YYSYMBOL_set_rest = 997,                 /* set_rest  */
  YYSYMBOL_generic_set = 998,              /* generic_set  */
  YYSYMBOL_var_value = 999,                /* var_value  */
  YYSYMBOL_zone_value = 1000,              /* zone_value  */
  YYSYMBOL_var_list = 1001,                /* var_list  */
  YYSYMBOL_VariableShowStmt = 1002,        /* VariableShowStmt  */
  YYSYMBOL_describe_or_desc = 1003,        /* describe_or_desc  */
  YYSYMBOL_show_or_describe = 1004,        /* show_or_describe  */
  YYSYMBOL_opt_tables = 1005,              /* opt_tables  */
  YYSYMBOL_var_name = 1006,                /* var_name  */
  YYSYMBOL_ViewStmt = 1007,                /* ViewStmt  */
  YYSYMBOL_opt_check_option = 1008,        /* opt_check_option  */
  YYSYMBOL_stmtblock = 1009,               /* stmtblock  */
  YYSYMBOL_stmtmulti = 1010,               /* stmtmulti  */
  YYSYMBOL_stmt = 1011                     /* stmt  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;




#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE) \
             + YYSIZEOF (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  897
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   74123

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  529
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  483
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2175
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  3608

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   761


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     7,     6,   520,     2,     2,
     525,   526,   518,   516,     3,   517,   527,   519,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     4,   528,
     512,   514,   513,     5,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   523,     2,   524,   521,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     8,     2,     9,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,    10,    11,
      12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     515,   522
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,   509,   509,   525,   537,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   588,     9,    13,    44,
      45,    46,    50,    51,    55,    59,    60,    64,    70,    75,
      76,    77,    78,     7,    16,    25,    46,    47,    50,    54,
       7,    26,    50,    73,    80,    85,    86,    87,    88,     6,
      15,    25,    35,    45,    55,    65,    75,    85,    95,   106,
     117,   127,   140,   141,     7,    14,    31,    51,    55,    65,
      69,    75,    76,     2,     9,    23,    29,    36,    42,    49,
      59,    63,    71,    72,    73,    77,    86,    95,   102,   103,
     108,   120,   125,   150,   155,   160,   166,   176,   186,   192,
     203,   214,   229,   230,   236,   237,   242,   243,   249,   250,
     254,   255,   260,   262,   268,   269,   273,   274,   277,   278,
     283,     9,    16,    26,    33,    44,    45,    50,    51,    52,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    91,    92,    93,    98,    99,   104,   108,   116,   117,
     122,   123,   124,   130,   135,   143,   144,     8,    22,    36,
      48,    56,    70,    71,    72,    73,    74,    87,    88,    93,
      94,    98,    99,     5,    12,    22,    23,     6,     8,    21,
      34,    47,    65,    87,    88,    89,    90,     9,    19,    29,
      42,    43,     1,    30,    49,    61,    62,    63,    67,    68,
      73,    77,    82,    86,    94,    95,    99,   100,   105,   106,
     110,   111,   116,   117,   118,   119,   120,   121,   122,   123,
     128,   136,   140,   145,   146,   151,   155,   160,   164,   168,
     172,   176,   180,   184,   188,   192,   196,   200,   204,   208,
     212,   216,   220,   228,   233,   234,   235,   236,   237,   243,
     247,    10,    16,    22,    28,    34,    44,    45,    53,    64,
      76,    84,    95,   101,   105,   109,   124,   131,   132,   133,
     137,   138,     7,    18,    31,    35,    42,    53,    54,    60,
      61,     7,    18,    19,    23,    24,    25,    26,    27,    28,
       7,    16,    25,    34,    43,    52,     7,    21,    36,    56,
      57,    84,    85,    86,    87,    88,    89,    93,    94,    99,
     104,   105,   106,   107,   108,   113,   120,   121,   122,   139,
     146,   153,   163,   173,   185,   193,   202,   220,   221,   225,
     226,   230,   239,   262,   276,   283,   288,   290,   292,   294,
     297,   300,   301,   302,   303,   308,   312,   313,   318,   325,
     330,   331,   332,   333,   334,   335,   336,   337,   343,   344,
     348,   353,   360,   367,   374,   386,   387,   388,   389,   393,
     398,   399,   400,   405,   410,   411,   412,   413,   414,   415,
     420,   440,   469,   470,   474,   478,   479,   480,   484,   488,
     496,   497,   502,   503,   504,   508,   516,   517,   522,   523,
     527,   532,   536,   540,   545,   553,   554,   558,   559,   563,
     564,   570,   581,   594,   608,   622,   636,   650,   673,   677,
     684,   688,   696,   701,   708,   718,   719,   720,   721,   722,
     729,   736,   737,   742,   743,    47,    48,    52,    53,    54,
      72,    73,    80,    88,    96,   104,   112,   120,   131,   132,
     159,   164,   172,   188,   205,   223,   241,   242,   261,   265,
     269,   273,   277,   287,   298,   308,   317,   328,   339,   351,
     366,   384,   384,   388,   388,   392,   392,   396,   402,   409,
     413,   414,   418,   419,   433,   440,   447,   457,   458,   461,
     474,   475,   476,   480,   491,   499,   504,   509,   514,   519,
     527,   535,   540,   545,   552,   553,   557,   558,   559,   563,
     570,   571,   575,   576,   580,   581,   582,   586,   587,   591,
     592,   608,   609,   612,   621,   632,   633,   634,   637,   638,
     639,   643,   644,   645,   646,   650,   651,   655,   657,   673,
     675,   680,   683,   688,   692,   696,   703,   707,   711,   715,
     722,   727,   734,   735,   739,   744,   748,   752,   760,   767,
     768,   773,   774,   778,   779,   784,   786,   788,   793,   813,
     814,   816,   821,   822,   826,   827,   830,   831,   856,   857,
     862,   866,   867,   871,   872,   876,   877,   878,   879,   880,
     884,   897,   904,   911,   918,   919,   923,   924,   928,   929,
     933,   934,   938,   939,   943,   944,   948,   959,   960,   961,
     962,   966,   967,   972,   973,   974,   983,   989,   998,   999,
    1012,  1013,  1017,  1018,  1022,  1023,  1027,  1038,  1044,  1050,
    1058,  1066,  1076,  1084,  1093,  1102,  1111,  1115,  1120,  1125,
    1136,  1150,  1151,  1154,  1155,  1156,  1159,  1167,  1177,  1178,
    1179,  1182,  1190,  1199,  1203,  1210,  1211,  1215,  1224,  1228,
    1253,  1257,  1270,  1284,  1299,  1311,  1324,  1338,  1352,  1365,
    1380,  1399,  1405,  1410,  1416,  1423,  1424,  1432,  1436,  1440,
    1446,  1453,  1458,  1459,  1460,  1461,  1462,  1463,  1467,  1468,
    1480,  1481,  1486,  1493,  1500,  1507,  1539,  1550,  1563,  1568,
    1569,  1572,  1573,  1576,  1577,  1582,  1583,  1588,  1592,  1598,
    1619,  1627,  1641,  1644,  1648,  1648,  1651,  1652,  1654,  1659,
    1666,  1671,  1677,  1682,  1688,  1692,  1699,  1706,  1716,  1717,
    1721,  1723,  1726,  1730,  1731,  1732,  1733,  1734,  1735,  1740,
    1760,  1761,  1762,  1763,  1774,  1788,  1789,  1795,  1800,  1805,
    1810,  1815,  1820,  1825,  1830,  1836,  1842,  1848,  1855,  1877,
    1886,  1890,  1898,  1902,  1910,  1922,  1943,  1947,  1953,  1957,
    1970,  1978,  1988,  1990,  1992,  1994,  1996,  1998,  2003,  2004,
    2011,  2020,  2028,  2037,  2048,  2056,  2057,  2058,  2062,  2062,
    2065,  2065,  2068,  2068,  2071,  2071,  2074,  2074,  2077,  2077,
    2080,  2080,  2083,  2083,  2086,  2086,  2089,  2089,  2092,  2092,
    2095,  2095,  2098,  2098,  2101,  2103,  2105,  2107,  2109,  2111,
    2113,  2115,  2117,  2119,  2121,  2123,  2125,  2127,  2132,  2137,
    2143,  2150,  2155,  2161,  2167,  2198,  2200,  2202,  2210,  2225,
    2227,  2229,  2231,  2233,  2235,  2237,  2239,  2241,  2243,  2245,
    2247,  2249,  2251,  2253,  2255,  2258,  2260,  2262,  2265,  2267,
    2269,  2271,  2273,  2278,  2283,  2290,  2295,  2302,  2307,  2314,
    2319,  2327,  2335,  2343,  2351,  2369,  2377,  2385,  2393,  2401,
    2409,  2417,  2421,  2437,  2445,  2453,  2461,  2469,  2477,  2485,
    2489,  2493,  2497,  2501,  2509,  2517,  2525,  2533,  2553,  2575,
    2586,  2593,  2607,  2616,  2624,  2633,  2654,  2656,  2658,  2660,
    2662,  2664,  2666,  2668,  2670,  2672,  2674,  2676,  2678,  2680,
    2682,  2684,  2686,  2688,  2690,  2692,  2694,  2696,  2700,  2704,
    2708,  2722,  2723,  2737,  2738,  2739,  2750,  2774,  2785,  2795,
    2799,  2803,  2810,  2814,  2821,  2828,  2829,  2830,  2831,  2832,
    2833,  2834,  2835,  2846,  2851,  2860,  2866,  2873,  2893,  2897,
    2904,  2912,  2920,  2931,  2951,  2987,  2998,  2999,  3006,  3012,
    3014,  3016,  3020,  3029,  3034,  3041,  3056,  3063,  3067,  3071,
    3075,  3079,  3089,  3097,  3106,  3128,  3129,  3133,  3134,  3135,
    3139,  3140,  3147,  3148,  3152,  3153,  3158,  3166,  3168,  3182,
    3185,  3212,  3213,  3216,  3217,  3225,  3233,  3241,  3250,  3260,
    3278,  3324,  3333,  3342,  3351,  3360,  3372,  3373,  3374,  3375,
    3376,  3390,  3391,  3394,  3395,  3399,  3409,  3410,  3414,  3415,
    3419,  3426,  3427,  3432,  3433,  3438,  3439,  3442,  3443,  3444,
    3447,  3448,  3451,  3452,  3453,  3454,  3455,  3456,  3457,  3458,
    3459,  3460,  3461,  3462,  3463,  3464,  3467,  3469,  3474,  3476,
    3481,  3483,  3485,  3487,  3489,  3491,  3493,  3495,  3509,  3511,
    3516,  3520,  3527,  3532,  3538,  3542,  3549,  3554,  3561,  3566,
    3574,  3578,  3584,  3588,  3597,  3608,  3609,  3613,  3617,  3624,
    3625,  3626,  3627,  3628,  3629,  3630,  3631,  3632,  3633,  3634,
    3635,  3636,  3637,  3638,  3648,  3652,  3659,  3666,  3667,  3683,
    3687,  3692,  3696,  3711,  3716,  3720,  3723,  3726,  3727,  3728,
    3731,  3738,  3739,  3740,  3750,  3764,  3765,  3769,  3780,  3781,
    3784,  3785,  3789,  3790,  3793,  3799,  3803,  3810,  3818,  3826,
    3834,  3844,  3845,  3850,  3851,  3855,  3856,  3857,  3861,  3870,
    3878,  3886,  3895,  3910,  3911,  3916,  3917,  3927,  3928,  3932,
    3933,  3937,  3938,  3941,  3957,  3965,  3973,  3983,  3984,  3988,
    3992,  3998,  4000,  4005,  4006,  4010,  4011,  4014,  4018,  4019,
    4023,  4024,  4027,  4028,  4029,  4032,  4036,  4037,  4041,  4042,
    4044,  4045,  4046,  4056,  4057,  4061,  4063,  4069,  4070,  4074,
    4075,  4078,  4089,  4092,  4103,  4107,  4111,  4123,  4127,  4136,
    4143,  4181,  4185,  4189,  4193,  4197,  4201,  4205,  4211,  4228,
    4229,  4230,  4233,  4234,  4235,  4238,  4239,  4240,  4243,  4244,
    4247,  4249,  4254,  4255,  4258,  4262,  4263,     7,     3,    10,
      17,    24,    31,    38,    45,    52,    61,    61,    63,    63,
      65,    65,    67,    68,     7,    17,    27,    40,    41,    45,
      46,    47,    51,    52,     7,    17,    26,    35,    46,    47,
      49,    50,    53,    54,    55,     9,    19,    29,    39,    49,
      59,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    95,
      96,    97,    98,    99,   100,   105,   106,   111,   112,   113,
     118,   119,   120,     9,    18,    27,    36,    45,    54,    63,
      72,    85,    87,    93,    94,    99,   103,   107,   118,   126,
     130,   139,   148,   157,   166,   175,   184,   192,   200,   209,
     218,   227,   236,   253,   262,   271,   280,   290,   303,   318,
     327,   335,   350,   358,   368,   378,   385,   392,   400,   407,
     418,   419,   424,   428,   433,   438,   446,   447,   452,   456,
     457,   458,     7,    15,    26,    27,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,     7,    19,    33,     2,
       7,    12,    17,    22,    31,    38,    48,    49,    56,     7,
      13,    19,    25,     8,    33,    62,    66,    67,    72,    73,
      78,    79,    83,    84,    89,    90,     7,    16,    28,    35,
      42,    51,    52,    56,    57,     8,    18,    29,    39,    49,
      59,    71,    81,    91,    95,   102,   106,   110,   119,   123,
     130,   131,   135,   139,     9,    19,     7,    14,    22,     7,
      16,    28,    29,     2,    10,    17,    24,    32,    40,    51,
      52,    53,    57,    58,    59,     7,    11,    24,    37,    54,
      55,    56,    61,     9,    17,    29,    30,    34,    35,    36,
      41,    42,    43,    48,    52,    56,    60,    64,    68,    72,
      76,    80,    84,    88,    92,    97,   101,   105,   112,   113,
     117,   118,   119,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
     123,   123,   123,   123,   123,   123,   123,   124,   124,   124,
     124,   124,   124,   124,   124,   124,   124,   124,   124,   124,
     124,   124,   124,   124,   124,   124,   124,   124,   124,   124,
     124,   124,   124,   124,   124,   124,   124,   124,   124,   124,
     124,   124,   124,   124,   124,   124,   124,   124,   124,   124,
     124,   124,   124,   124,   124,   124,   124,   124,   124,   124,
     124,   125,   125,   125,   125,   125,   125,   125,   125,   125,
     125,   125,   125,   125,   125,   125,   125,   125,   125,   125,
     125,   125,   125,   125,   125,   125,   125,   125,   125,   126,
     126,   126,   126,   126,   126,   126,   126,   126,   126,   126,
     126,   126,   126,   126,   126,   126,   126,   126,   126,   126,
     126,   126,   126,   126,   126,   126,   126,   126,   127,   127,
     127,   127,   127,   127,   127,   127,   127,   127,   127,   127,
     127,   127,   127,   127,   127,   127,   127,   127,   127,   127,
     127,   127,   127,   127,   127,   127,   127,   127,   127,   127,
     127,   127,   127,   127,   127,   127,   127,   127,   127,   127,
     127,   127,   127,   127,   127,   127,   127,   127,   127,   127,
     127,   127,   127,   127,   127,   127,   127,   127,   127,   127,
     127,   127,   127,   127,   127,   127,   127,   127,   127,   127,
     127,   127,   127,   127,   127,   127,   127,   127,   127,   128,
     128,   128,   128,   128,   128,   128,   128,   128,   128,   128,
     128,   128,   128,   128,   128,   128,   128,   128,   128,   128,
     128,   128,   128,   128,   128,   128,   128,   128,   128,   128,
     128,   129,   129,   129,   129,   129,   129,   129,   129,   129,
     129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
     129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
     129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
     129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
     129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
     129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
     129,   129,   129,   129,   129,   129
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "','", "':'", "'?'",
  "'$'", "'#'", "'{'", "'}'", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "INTEGER_DIVISION", "POWER_OF", "LAMBDA_ARROW",
  "DOUBLE_ARROW", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS", "ABORT_P",
  "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER", "AGGREGATE",
  "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE", "AND", "ANTI",
  "ANY", "ARRAY", "AS", "ASC_P", "ASOF", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
  "CAST", "CATALOG_P", "CENTURIES_P", "CENTURY_P", "CHAIN", "CHAR_P",
  "CHARACTER", "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS",
  "CLOSE", "CLUSTER", "COALESCE", "COLLATE", "COLLATION", "COLUMN",
  "COLUMNS", "COMMENT", "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION",
  "CONCURRENTLY", "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT",
  "CONSTRAINTS", "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST",
  "CREATE_P", "CROSS", "CSV", "CUBE", "CURRENT_P", "CURSOR", "CYCLE",
  "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE", "DEC", "DECADE_P",
  "DECADES_P", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXPORT_STATE", "EXTENSION",
  "EXTENSIONS", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
  "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
  "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
  "GENERATED", "GLOB", "GLOBAL", "GRANT", "GRANTED", "GROUP_P", "GROUPING",
  "GROUPING_ID", "GROUPS", "HANDLER", "HAVING", "HEADER_P", "HOLD",
  "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "IGNORE_P", "ILIKE",
  "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDE_P",
  "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT", "INHERITS",
  "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE",
  "INSERT", "INSTALL", "INSTEAD", "INT_P", "INTEGER", "INTERSECT",
  "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN",
  "JSON", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN",
  "LOAD", "LOCAL", "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO",
  "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLENNIA_P", "MILLENNIUM_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OTHERS",
  "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED",
  "OWNER", "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING",
  "PASSWORD", "PERCENT", "PERSISTENT", "PIVOT", "PIVOT_LONGER",
  "PIVOT_WIDER", "PLACING", "PLANS", "POLICY", "POSITION", "POSITIONAL",
  "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE",
  "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUALIFY", "QUARTER_P", "QUARTERS_P", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESPECT_P", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCOPE", "SCROLL", "SEARCH",
  "SECOND_P", "SECONDS_P", "SECRET", "SECURITY", "SELECT", "SEMI",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION", "SET",
  "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP",
  "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P",
  "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE",
  "STORED", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIES", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNPIVOT", "UNTIL", "UPDATE", "USE_P", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIABLE_P", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VIRTUAL", "VOLATILE", "WEEK_P", "WEEKS_P", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "$accept", "AlterObjectSchemaStmt",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "unreserved_keyword", "col_name_keyword",
  "func_name_keyword", "type_name_keyword", "other_keyword",
  "type_func_name_keyword", "reserved_keyword", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "AnalyzeStmt", "AttachStmt", "DetachStmt", "opt_database",
  "opt_database_alias", "CallStmt", "CheckPointStmt", "opt_col_id",
  "CommentOnStmt", "comment_value", "comment_on_type_any_name",
  "qualified_name", "ColId", "ColIdOrString", "Sconst", "indirection",
  "indirection_el", "attr_name", "ColLabel", "CopyStmt",
  "copy_database_flag", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "CreateStmt", "ConstraintAttributeSpec",
  "def_arg", "OptParenthesizedSeqOptList", "generic_option_arg",
  "key_action", "ColConstraint", "ColConstraintElem",
  "GeneratedColumnType", "opt_GeneratedColumnType",
  "GeneratedConstraintElem", "generic_option_elem", "key_update",
  "key_actions", "OnCommitOption", "reloptions", "opt_no_inherit",
  "TableConstraint", "TableLikeOption", "reloption_list", "ExistingIndex",
  "ConstraintAttr", "OptWith", "definition", "TableLikeOptionList",
  "generic_option_name", "ConstraintAttributeElem", "columnDef",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "columnList_opt_comma",
  "func_type", "ConstraintElem", "TableElementList", "key_match",
  "TableLikeClause", "OptTemp", "generated_when", "CreateAsStmt",
  "opt_with_data", "create_as_target", "CreateFunctionStmt",
  "table_macro_definition", "table_macro_definition_parens",
  "table_macro_list_internal", "table_macro_list", "macro_definition",
  "macro_definition_list", "macro_alias", "param_list", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "CreateSecretStmt", "opt_secret_name",
  "opt_persist", "opt_storage_specifier", "CreateSeqStmt", "OptSeqOptList",
  "CreateTypeStmt", "opt_enum_val_list", "enum_val_list", "DeallocateStmt",
  "DeleteStmt", "relation_expr_opt_alias", "where_or_current_clause",
  "using_clause", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "DropSecretStmt", "opt_storage_drop_specifier", "ExecuteStmt",
  "execute_param_expr", "execute_param_list", "execute_param_clause",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "ExportStmt", "ImportStmt", "IndexStmt",
  "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique", "InsertStmt",
  "insert_rest", "insert_target", "opt_by_name_or_position",
  "opt_conf_expr", "opt_with_clause", "insert_column_item", "set_clause",
  "opt_or_action", "opt_on_conflict", "index_elem", "returning_clause",
  "override_kind", "set_target_list", "opt_collate", "opt_class",
  "insert_column_list", "set_clause_list", "set_clause_list_opt_comma",
  "index_params", "set_target", "LoadStmt", "opt_force", "file_name",
  "opt_ext_version", "PragmaStmt", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "RenameStmt", "opt_column", "SelectStmt",
  "select_with_parens", "select_no_parens", "select_clause", "opt_select",
  "simple_select", "value_or_values", "pivot_keyword", "unpivot_keyword",
  "pivot_column_entry", "pivot_column_list_internal", "pivot_column_list",
  "with_clause", "cte_list", "common_table_expr", "opt_materialized",
  "into_clause", "OptTempTableName", "opt_table", "all_or_distinct",
  "by_name", "distinct_clause", "opt_all_clause", "opt_ignore_nulls",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_value", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_list_opt_comma", "group_by_item",
  "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "qualify_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause",
  "values_clause_opt_comma", "from_clause", "from_list",
  "from_list_opt_comma", "alias_prefix_colon_clause", "table_ref",
  "opt_pivot_group_by", "opt_include_nulls", "single_pivot_value",
  "pivot_header", "pivot_value", "pivot_value_list", "unpivot_header",
  "unpivot_value", "unpivot_value_list", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "opt_Typename", "Typename",
  "qualified_typename", "opt_array_bounds", "SimpleTypename",
  "ConstTypename", "GenericType", "opt_type_modifiers", "Numeric",
  "opt_float", "Bit", "ConstBit", "BitWithLength", "BitWithoutLength",
  "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "week_keyword",
  "quarter_keyword", "decade_keyword", "century_keyword",
  "millennium_keyword", "opt_interval", "a_expr", "b_expr", "c_expr",
  "d_expr", "indirection_expr_or_a_expr", "param_expr", "indirection_expr",
  "list_expr", "struct_expr", "map_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "list_comprehension_lhs", "list_comprehension", "within_group_clause",
  "filter_clause", "export_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "opt_window_exclusion_clause", "qualified_row", "row",
  "dict_arg", "dict_arguments", "dict_arguments_opt_comma", "map_arg",
  "map_arguments", "map_arguments_opt_comma",
  "opt_map_arguments_opt_comma", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "c_expr_list",
  "c_expr_list_opt_comma", "expr_list", "expr_list_opt_comma",
  "opt_expr_list_opt_comma", "func_arg_list", "func_arg_expr", "type_list",
  "extract_list", "extract_arg", "overlay_list", "overlay_placing",
  "position_list", "substr_list", "substr_from", "substr_for", "trim_list",
  "in_expr", "case_expr", "when_clause_list", "when_clause",
  "case_default", "case_arg", "columnrefList", "columnref",
  "columnref_opt_indirection", "opt_slice_bound", "opt_indirection",
  "opt_func_arguments", "extended_indirection_el",
  "opt_extended_indirection", "opt_asymmetric",
  "opt_target_list_opt_comma", "target_list", "target_list_opt_comma",
  "target_el", "except_list", "except_name", "except_name_list",
  "except_name_list_opt_comma", "opt_except_list", "replace_list_el",
  "replace_list", "replace_list_opt_comma", "opt_replace_list",
  "rename_list_el", "rename_list", "rename_list_opt_comma",
  "opt_rename_list", "qualified_name_list", "name_list",
  "name_list_opt_comma", "name_list_opt_comma_opt_bracket", "name",
  "func_name", "AexprConst", "Iconst", "type_function_name",
  "function_name_token", "type_name_token", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabelOrString", "TransactionStmt",
  "opt_transaction", "opt_transaction_type", "UpdateStmt",
  "UpdateExtensionsStmt", "UseStmt", "VacuumStmt", "vacuum_option_elem",
  "opt_full", "vacuum_option_list", "opt_freeze", "VariableResetStmt",
  "generic_reset", "reset_rest", "VariableSetStmt", "set_rest",
  "generic_set", "var_value", "zone_value", "var_list", "VariableShowStmt",
  "describe_or_desc", "show_or_describe", "opt_tables", "var_name",
  "ViewStmt", "opt_check_option", "stmtblock", "stmtmulti", "stmt", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-3104)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-2101)

#define yytable_value_is_error(Yyn) \
  ((Yyn) == YYTABLE_NINF)

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
    7307,   424,  1195, -3104, -3104,   301,   424, 51247, 66202,   236,
     424,   300,  4941, 53243, -3104, -3104, 47754,  7127,   424, 56237,
   73598,   330,   366, 32185,   402, 56736, -3104, -3104, -3104, 66202,
   56237, 57235,   424,   372, 66701, -3104,   424, 35181, 53742,   226,
   -3104, 56237,    49,   239, 57734, 56237,  4622, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
     333, -3104, -3104, -3104, -3104,   212, -3104,   408, -3104, -3104,
   -3104, -3104,   166, -3104,   829,   170, 32185, 32185,  2577,   652,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   34681, -3104,   938,   338, -3104, -3104, -3104, -3104, 58233, 56237,
   58732, 54241, 59231, -3104,   666,   941,   680,   150, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
     240, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104,   566, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104,   247, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104,   263, -3104, -3104,   380, -3104,   635, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104,  2150, -3104, -3104,  1056,  2569,
   56237,   696,   763,   821, -3104, 59730, -3104,   823, 56237, -3104,
   -3104,   713,   831,  1020, -3104, -3104, 54740, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, 48253, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104,   987, -3104, -3104,   816, -3104,   141, -3104, -3104,
     846,   802, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104,   909, -3104, -3104, -3104,   910, 67200, 60229, 60728, -3104,
     818,  2224,  7129,  9379, 31185, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104,   333, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, 56736, 66202,
     827,   838,  1128,   851, 33183,   857, 35681,   864,   868,  1212,
     872,   891,   894,   896,   239, 31685,   908,   380,  1443, 61227,
   61227,   199, 32684,  2077, -3104, 61227, 61726, -3104,   933, -3104,
     941, -3104, -3104, -3104, -3104,   427,   939, -3104, 62225, 62225,
   62225,   950,  1247, 62225, -3104, -3104, -3104,   966, -3104, -3104,
    1172, 20398, 20398, 67699, 67699,   941, 67699,   991, 67699, -3104,
   -3104,   104,   680, -3104,   380, -3104, -3104,  2577, -3104, -3104,
   53742, -3104, -3104,   310,  1324, 20398, 56237,  1504, -3104,   999,
    1504,  1003,  1005,  1017, -3104, 56237,  1368,  1248, 55239, 56736,
     382,   382,  1490,   382,   937,   940,  2996,  4247, -3104,  1724,
   -3104,  1034,  1153,  1085,  1365, -3104, -3104, -3104,  7307,  1439,
    1447,  1263,  1467,  4124,  1469,  1509,  1483,  1753,  1506,  1604,
      57, -3104, 20398, 48752,   380, -3104, 10493, 20398, -3104, -3104,
   -3104,  1264, -3104, -3104, -3104, -3104, -3104, 56237, 66202,  1148,
    1167, -3104, -3104, -3104, -3104,   888,  1416, -3104,  1664, -3104,
   -3104,  1260, 62724, 63223, 63722, 64221, 68198,  1629, -3104, -3104,
    1590, -3104, -3104, -3104,  1255, -3104, -3104, -3104,   246, 68697,
    1591,  1220,   237, -3104,  1593,   238, -3104,  1596,  1456, 16751,
   -3104,  1394, -3104, -3104, -3104,   239, -3104, -3104, -3104,   155,
   -3104, -3104, 44355,  9379,  1319,  1234, -3104, 20398, 20398,  1239,
    8514, 61227, 61726, 20398, 56237, -3104, 20398, 25087,  1244, 20398,
   20398, 15188, 20398, 30187, 61227,  2077,  1245, -3104,   409, -3104,
   56237,  1249, -3104,  1344,  1344, 32185,   372,  1546, 31685,  1344,
    1344,  1344, -3104,  1044,  1548,  1468, -3104, 32185,  1468,  1119,
    1257,  1551,  1468, -3104,   423,  1559,  1344, 36180,  1268, -3104,
    1344,  1491, -3104, -3104, 20398, 16751, 71192,  1751, -3104, -3104,
   -3104, -3104,  1556, -3104, 66202,  1275, -3104, 48752,  1785, 56237,
   -3104, -3104, -3104, -3104, -3104, -3104,   759,  1791,   140,  1792,
   20398,   140,   140,  1280,   264,   264, -3104,  1474,  1284, -3104,
     266,  1291,  1294,  1809,  1815,   241,   242,   889,   140, 20398,
   -3104,   264,  1303,  1818,  1307,  1827,   288,   293, -3104,   275,
   20398, 20398, 20398,   371, 20398, 13625,   174, -3104,   380,  1315,
     941, -3104, -3104, -3104, -3104, -3104, -3104, -3104,  1317, -3104,
     269,  5805, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
    1353, -3104, -3104, -3104, -3104,  1536, 20398, -3104, -3104,  1844,
    1546, -3104,   285, -3104, -3104,  1546, -3104, -3104, -3104, -3104,
   -3104,   315, -3104,  1741, 20398, 20398, -3104,   380, -3104, 69196,
   -3104, -3104, -3104, -3104, -3104, -3104,   162, -3104,   333,   529,
   46073,  1850,  1332,  1504, 56237, 56237,  1813, -3104, -3104, -3104,
     999, 53742,   194,  1634,   151,  1466,    95, -3104, -3104,  2577,
    2577, 17272,  1238,   337,   906, 17793, 20919,  1693,  1574,   278,
     256,  1696, -3104,  1582,  1814, 25087, 20398, 20398,   937,   940,
   20398, -3104, -3104, -3104,  1636, -3104, 56237, 51746,   989,  1038,
    1357,  1445,  1360,    94,  1795, -3104,  1888, -3104,  1458, 56237,
   73143,   303, -3104,  1835,   303,   303,   251,  1840,  1470,   328,
    1639,    90,   -51,  2497, -3104,  1888, 53742,   135,    97,  1888,
   56237,  1471,   755,  1888,  1800, 66202,  1234, -3104, -3104, 42197,
    1913, -3104, -3104, -3104,   268, 16751, -3104,  1122,  1302,  1316,
     493,   250,  1328,  1350, 16751,  1358,  1388,   270,  1390,  1404,
    1410,  1440,  1462,  1492,  1495,  1516,   248,  1519,  1525,  1534,
    1543,  1545,  1567, -3104,  1584,   282,  1587,   272, 16751,  1592,
   -3104,   289, -3104, 46073,   318, -3104, -3104,  1599, 46173, -3104,
    1697,  1489,  1497, 66202,  1449, 56237,   943,  1560,  1798,  1843,
   71676, 56237,  1669,  2497,  1678,  1436,  1915,  1682,  1167,  1684,
    1442,  1686, -3104,  1764, -3104, 69695, 48752, -3104, -3104, -3104,
   -3104, -3104,  1816,  1794, 66202, 48752,  1451, 66202, -3104, -3104,
   -3104, 56237, 56237, -3104, 56237, 66202, -3104,   164, 46073,  1963,
     898, 50249,  9379, -3104, -3104, -3104, -3104,  1225,  1231, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,   941, 48752,
   -3104,  2477, 44976,  1459, 20398, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104,  1460,  1811, -3104, -3104,
    5279,  1472, 45271,  1473, 25087, 25087,   380,  1588, -3104, -3104,
   25087,  1476, 50748, 44890,  1985,  1477, 45456, 18314, 20398, 18314,
   18314, 45522, -3104,  1486, 45611, 61227,  1475, 56237, 46756, -3104,
   -3104, -3104,  2077, 20398, 20398, 55738,  1508,  1494, -3104, -3104,
   -3104, -3104, 32185, -3104,  1777, 32185, -3104, -3104,  3623, -3104,
   32185,  1784, 20398, 32185, -3104,  1707,  1733,  1498, 32185, -3104,
   56237,  1501, 56237, -3104, -3104, 46073, -3104,  2025,   169,  1510,
   -3104, -3104, -3104, -3104, -3104,  1564, -3104,  1564,  1564, -3104,
   -3104, -3104, -3104,  1520,  1520,  1524, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,  1526,
     889, -3104,  1564, -3104,  1520, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, 73143, -3104, -3104, -3104, -3104,   537,   619, -3104,
    1530, -3104, -3104, -3104, -3104,  1531, -3104,  1514,  1998, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,  9455,   176,
    1520,  4092, -3104, -3104, 20398, -3104, -3104,  2054, -3104,  2057,
    2053, 20398, -3104, -3104,  1538, 46073,  1581, -3104, -3104, 20398,
   20398, -3104, -3104, -3104, -3104,  2049, -3104, 20398,  1564,  1564,
   -3104,  6279, -3104, 41172, 12059,  1630,  1638,  2049, -3104,  2049,
   -3104,  6279,  2058,  2058,  1547, 36679, -3104,  1713, 45820, -3104,
    1553,  1384,  6173,  2075, 20398, 42858,   123,   380,   380, 20398,
   -3104,  2049, 20398, 42172, 42172, -3104,   370, 71192, 20398, 20398,
   20398, 20398, 20398, 20398, 20398, 20398, 47255,  1643,   167, 66202,
   20398, 20398, 29187,  1594, -3104, 20398,  1793, -3104,  1558, 20398,
    1646,   258, 20398, 20398, 20398, 20398, 20398, 20398, 20398, 20398,
   20398, -3104, -3104, 28683,   386,   705,  1893,  1916,    -1,  1198,
   20398,  1906, 10493, -3104,  1906, -3104, -3104, -3104, -3104, -3104,
     292, -3104, -3104,  2025,  2025, 66202, -3104,   310, 56237, 52744,
   20398, -3104, -3104,  2084,  1563,   591, -3104,  1627, -3104, -3104,
   56237, -3104, 39174, 56736, 56736, -3104,  1868, -3104,   364,  2092,
   -3104, 44851,  1824,  1868,  2577, -3104, -3104, 26129,  1699,  1876,
    1817, -3104, -3104,  1796,  1819, -3104,  2108, 46262, 21440, 21440,
   -3104,  1265, 46073,  1271, -3104, -3104, -3104, -3104, -3104, -3104,
     871, -3104, 56237,   109, 37178, -3104,  2109,   146, -3104,  2857,
    1926,  1891,  1693,   256,  1603, -3104,  1781,  1595, 70194, 56237,
    1902,  1855,  1908,    14, 71192, -3104, -3104, -3104, -3104, 56237,
   66202, 64720, 70693, 49251, 56237, 48752, -3104, -3104, -3104, -3104,
   56237,   204, 56237,  5374, -3104, -3104, -3104, -3104,   303, -3104,
   -3104, -3104, -3104, -3104, 66202, 56237, -3104, -3104,   303, 66202,
   56237,   303, -3104,  1833, 56237, 56237, 56237, 56237,  1885, 56237,
   56237,   941, -3104, -3104, -3104, 21961,   321,   321,  1837, 15709,
     171, -3104, 20398, 20398,  1612,   324, 66202,  1803, -3104, -3104,
     177,  1856,   134, -3104,  1679, 56237, 56237, 56237, 56237, 66202,
   56237,  1575, -3104, -3104, -3104, -3104, -3104,  1632, -3104,  1633,
    1995,  2497, -3104,  1996, 52245,   800,  3706,  2000,  1675,  2004,
   11015, -3104, -3104,  2163, -3104, -3104,  2164,  2121,  2010,  2160,
    1648,  1894, -3104, -3104,  1878, -3104, 66202,  2169, -3104,   237,
   -3104, 48752, -3104,   238, -3104,  1883,   245, 16751, -3104, 20398,
   -3104, -3104, -3104, -3104, -3104, -3104,  1234, 29688, -3104,   180,
   -3104, -3104,  2134,   941,  2134,   777, -3104, -3104,  2134, -3104,
    2116,  2134, -3104, 71192, -3104,  6692, -3104, 20398, 20398, -3104,
   20398,  2011, -3104,  2176,  2176, 71192, 25087, 25087, 25087, 25087,
   25087, 25087,   810,  1303, 25087, 25087, 25087, 25087, 25087, 25087,
   25087, 25087, 25087, 26650,  1184, -3104, -3104,   182,  2148, 20398,
   20398,  2029,  2011, 20398, -3104, 71192,  1687, -3104,  1688,  1690,
   20398, -3104, 71192, -3104, 56237,  1691, -3104, -3104, -3104,    37,
    1680,  1694, -3104, -3104,  1546, -3104,   866,   880, 56237,  3409,
    4428,  4593, -3104, -3104, 20398,  2030, -3104,  3623, 32185, -3104,
   20398,  1702, -3104, -3104, 32185,  2047, -3104, -3104, -3104, 37677,
    3623, 71192,   183, -3104, 56237, 71192,   185, 20398, 16751, -3104,
    2212, 71192,  2178, 66202, 66202,  2218,  1708,  1709,  2049,  1797,
   -3104,  1805,  1820,  1822, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, 71192, -3104, -3104, -3104, -3104, -3104,   255,
   -3104, -3104, -3104, -3104,  1704, 20398, 56237, -3104,  1710, 20398,
   20398,    99, -3104,  7633,  1712,  1725,  5405, -3104,  2230, -3104,
    2227, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,  1727, -3104,
    1735, -3104,  1736,  1755,  1756,  1742,  1743, 20398, 56237, -3104,
    1747, 22482,  1910, 66202, -3104, -3104, 20398, 46073,  2120, -3104,
    1750,  1754,  7801, -3104, -3104, -3104,   312,   420,  9368,  1198,
    6758,  6758,  6758,  6279, -3104, -3104, -3104,  1769, -3104, 25087,
   25087, -3104,  4693,  2284, 13625, -3104, -3104, -3104, -3104,  2099,
   -3104,   951, -3104,  1760, -3104, -3104,  3928, -3104, 41172, 45370,
   20398,   175, -3104, 20398, 29187, 20398,  1848,  6758,  6758,  6758,
     365,   365,   312,   312,   312,   420,  1198, -3104, -3104, -3104,
    1762, 20398, 48752, -3104,  1763,  1767,  2132,  1307, 20398, -3104,
   -3104, 32185,  1508,   318,  1508,  2049, 42172, -3104, -3104,   999,
   -3104,   999, 46073, 56237, -3104, -3104,  2038,  1771, 32185,  1821,
    2250,  2235, 66202, -3104, -3104,  2301,  1906,  1799,  1838,  1838,
   -3104, -3104, -3104, -3104,  1808, 20398,  2443,  1808, -3104,  1868,
      55,  2017,  1258,  1258,  1265,  2022, -3104, -3104,  1860, -3104,
   -3104, -3104, 20398, 16230,  1293, -3104,  1295, -3104, -3104, -3104,
   -3104, -3104,  2319, -3104,  2074, -3104, 56237, -3104, -3104, 25087,
    2260, 20398, 38176,  2262,  2059, -3104, -3104, -3104,  1892,  1888,
   20398,  2061, -3104,   130,  1830,  2180,   139,  2130, 66202, -3104,
     344,   345, -3104,   907,  2188,   245,  2198,   245, 48752, 48752,
   48752,   186, -3104, -3104, -3104,   941, -3104,   -70,   189, -3104,
   -3104, -3104, -3104,  1920,   769,  2497,  1888, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104,   385,   834,  1888,  1921, -3104,  1923,
   -3104,  1924,   849,  1888, -3104, -3104,  1604, 12582, 46073,   234,
     171,   171,   171, 16751, -3104,  2078,  2079,  1846, 46073, 46073,
     154, -3104, -3104, -3104, -3104,  1839, -3104,   477, 66202, -3104,
   -3104, -3104, -3104,  1803,  1843, 56237,  2497,  1853,  2316,  1167,
    1442,  1764, -3104,  2013,    58,   942, -3104, 66202, 56237, 56237,
   56237, 65219, -3104, -3104, -3104,  1847,  2376, -3104,    34,  2085,
    2087, 56237,  1895, 56237,  1360,  2334, 56237, -3104,   191,  1442,
    1442, 18835, 66202, -3104, 48752,  2226, 56237,  1794, -3104, -3104,
   -3104, -3104, 66202, -3104, -3104, 46073, -3104,  2378, -3104, 20398,
   49750, -3104, -3104, -3104, -3104, -3104, -3104, 48752, -3104, -3104,
     941, -3104,   941,  2100, 66202, 43357,   941, 43856,   941,  1863,
   -3104, 46073,  8181, 46073,  2029, -3104,   322,  2176,  2184,  2184,
    2184,  1222,  2215,   261,  1870,  2184,  2184,  2184,   358,   358,
     322,   322,   322,  2176,  1184, 50748,   933,  1871, -3104, 46073,
   46073, -3104, -3104,  1872, -3104, -3104, -3104, -3104,  1875,  1882,
   -3104, -3104, -3104, -3104, 66202,  1310,  1508,   226,   226,   226,
     226, -3104, 56237, 56237, 56237, 46073,  2331,  2209, -3104,  3623,
   46073, 56237, -3104, 27675, 56237, -3104,  2236, -3104,  2333, 56237,
   -3104,   192, -3104, -3104, -3104,   193,  1898,  1709, 71192,   195,
     196, -3104,  2049,   159,  1896,  1406,  1569,   730,  1297, -3104,
   53742, -3104, 46073, -3104, -3104,  1897, 45877, 20398, -3104,  2274,
   -3104, -3104, -3104, 20398, 20398, -3104, 41172, -3104, -3104, -3104,
   -3104,   454,   454,  8319,  1747,  2423,  1903, 56237, 13625, 45964,
   -3104, 39673, -3104, -3104,  2225,  2427, -3104,  8774,  1713, -3104,
   -3104, 42172, 20398,  2911,  2984, 20398,  1907, 20398,  2253, -3104,
   -3104,  1912, -3104, -3104, 71192, 20398,  1909,  4980, 25087, 25087,
    6451, -3104,  6464, 20398, 13625, -3104, 42284,  2435,  1917,  1837,
   19356, -3104,  2136,  2437, -3104,  2030,   171,  2030,  1919, -3104,
   -3104, -3104, -3104,  4092, -3104, 20398,  2081, 66202,   223,  2509,
     198, -3104,   380, 39174,  1821, 20398, -3104, -3104,   650, -3104,
   -3104,  1927, -3104,  1808, -3104, -3104, -3104,  2153, -3104, -3104,
   -3104, 56237, -3104,  1929, -3104, 37178,  2265, 14146, -3104, 37178,
   56237, 56237,  8923,  2298, -3104, 66202, 66202, 66202, -3104, 66202,
    2457,  1938,  1008,  1949,   368, -3104,  1313,  1008,  2295,   657,
    1360,   328,  4581,   486, -3104, -3104, -3104,  2031, 56237, -3104,
   66202, -3104, -3104, -3104, -3104, 49251, -3104, -3104, -3104, 40672,
   48752, 48752, -3104, 56237, 56237, 56237, 56237, 56237, 56237, 56237,
   56237, 56237, 56237,  1234, 20398, 20398, -3104,  1953,  1955,  1956,
    1837, -3104, -3104, -3104,   203, -3104,  1957, -3104, -3104, -3104,
     -51, -3104,   477,  1961, -3104, 52245,  2569,  1675, -3104,  2164,
    1964,  1843,  1076, 65703, -3104,  1962,  2489,   200,  2497,  1969,
    2448, -3104,   800, 52245, -3104, -3104, -3104,  2403, -3104,   818,
     252, -3104,  1167, -3104,  2569,  1442, -3104, -3104,  2454, -3104,
    2458,  2569, 46073,  1764,   201, 66202,  2040, -3104,   245,   202,
   -3104, -3104, -3104, -3104, -3104, 66202,  2505, -3104,  2505, -3104,
   -3104,  2505, -3104, -3104, -3104, -3104, 25087,  2332,  1987, 71192,
   -3104, -3104, 56237, -3104, -3104, -3104,   205,  1992,  2030, 56237,
   56237, 56237, 56237, -3104, -3104, -3104, 19877, 20398,  2035, -3104,
    1997, 14667,  2318, -3104, 27171, -3104, -3104,  2001, 37677, 66202,
   -3104, -3104, -3104, -3104,  2049, -3104, 66202, -3104, -3104,  2005,
   -3104,  2008, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
   -3104, 20398, 46073, -3104, 46073, -3104, -3104, -3104, -3104, -3104,
   56237, -3104, -3104,  5926, -3104,  2519,  2007, 66202, 66202,  2488,
   -3104, 20398, 66202, -3104,  1910, -3104,   378, 20398, 20398,  4693,
   -3104,  8363, 20398, 71192,   209,  4693,   431, 20398,  3370,  3549,
   20398, 20398,  6718,  9068, -3104, 23003, 11537, -3104,  2012, 20398,
    9163, 40172, -3104, 32185,  2209,  2014,  2209,   941,  2016, 46073,
   20398, -3104, -3104, -3104, -3104,  2076,    29, 34181,  2252, -3104,
   66202,  2033, -3104,  2081, 46073, -3104, -3104, 41172, -3104, -3104,
   -3104, -3104, -3104,  2485,  1677,  2026,  2027, -3104,  1215, -3104,
   -3104, 66202,  2028, -3104,  2034,  1008, -3104, 66202,  2068, -3104,
     314,  2344,   118, -3104, 20398, -3104,  2439,  2518,  1313,  2043,
   66202, 56237, 25087, -3104,   329,   357, -3104,  2336, 56237,  2068,
    2476, -3104, -3104, -3104,   368, -3104,  2375,  2288, -3104,   303,
   -3104, 20398,   368,  2290,   334, 66202, -3104, -3104,  3582, -3104,
   71192,   245,   245, -3104,  1510,  2052,  2055,  2060,  2062,  2063,
    2064,  2065,  2066,  2067,  2070, -3104,  2073,  2082,  2086,  2088,
    2090,  2103,  2104,  2105,  1526,  2114, -3104,  2126,  1927,  2133,
    2138,  2139,  2140,  2141, 72160,  2143,  2149,  2154,  2156,  1530,
    2157,  1225,  1231, -3104,  2162, -3104, -3104, -3104, -3104, -3104,
   -3104,  1220,  2071, -3104, -3104, -3104,  2142, -3104,  2146, -3104,
   -3104, -3104, -3104, -3104, -3104,  2095,  2102, -3104, -3104, -3104,
     171,  2069,  2080, 66202,  1234,   115, 66202,  2131,  1895,  2534,
   48752,   501,  2320,  2165, -3104,   941,  1675, -3104, 52245,  4049,
     582,  2087, -3104,   273,  1895, -3104,  2491,  1675,  2125, -3104,
    2164,  2261, 20398,   161, -3104,  2166, -3104,  2364, 66202,  2167,
   -3104, 49750, -3104,  2505,  3803, 25087, 71192,   210,   211,  2677,
   -3104,  2338,  2209, -3104, -3104, -3104, -3104, -3104,  2170,   -19,
    2182,  9971,  2691, -3104, -3104, -3104, -3104, -3104, -3104, 46073,
   46073, 66202,  2365, -3104, -3104,  2706,  2185, 38675,  2647,  2189,
   -3104, -3104,  2508, -3104, 30686, -3104,  1709,  2192, 71192,  1709,
    1709, -3104, -3104, 46073,  1747, 20398, -3104, -3104, -3104,  2715,
    2193, 66202, 42323,  2521, -3104, -3104,  4693,  4693,  8363,   213,
   -3104,  4693, 20398, 20398,  4693,  4693, 20398, -3104, 13104,   235,
   -3104,   214, -3104, 41679, -3104, 72644, -3104, -3104,  2035,   941,
    2035, -3104, -3104,  2718, -3104, -3104, -3104,  2254, -3104, -3104,
     215,  2624,  2081, -3104, 20398, -3104,  2202, 37178, -3104, -3104,
   -3104, -3104, 37178,  1008, -3104,  2370,  2068,  2205, -3104, -3104,
   -3104, -3104, -3104, -3104, 41718, -3104,    33, 20398, -3104,  1901,
    1222, -3104, -3104, -3104, -3104,  2068,  1167, -3104, 56237,  2684,
    2573, -3104, -3104, 46073, -3104, -3104,  2049,  2049, -3104, -3104,
    2333, -3104, -3104, -3104,  2208, -3104, -3104,  1220,   735, 40672,
   56237, 56237, -3104, -3104,  2214, -3104, -3104, -3104, -3104, -3104,
     -51,  2607,   217,   800, -3104,  2569,   218, 56237,  2582, 52245,
   -3104,  2696,  2220, 56237,  1895,  1274,  1274, -3104,  2368, -3104,
    2371, -3104, -3104,  2703,   297, -3104,  1284, 48752, 56237, -3104,
   -3104, 33682, -3104,  3803,   220, -3104, -3104,  2228,  2233, -3104,
    2035, 20398,  2238, 20398, -3104, 23524,  2705,  2750, -3104, 20398,
    2297, 28179, -3104, 20398, -3104, 56237, 61227,  2241, 61227, -3104,
   -3104, -3104, -3104, 66202, -3104, -3104, -3104, 20398, -3104,  4693,
    4693,  4693, 20398, 20398, -3104, -3104, -3104, -3104,  2450,  2365,
   -3104,  2365, 20398,  2569,   380, 66202,  4712,    40, -3104, 46073,
   -3104, -3104, -3104, 56237, -3104, 48752, -3104,  1008,    12,  2243,
   20398, 41757,  2484, -3104, -3104,  2517, -3104,  2576, -3104,  2311,
     736,  2329, -3104, -3104, -3104, -3104,  1234,   941,  1675,  2087,
    2125, -3104,  2256, 56237,  2569,   800,   818, -3104, -3104, -3104,
   -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104, -3104,
    2569,  2701,  2483,  2704, -3104,   225,  2040, 20398,   319, -3104,
     227,  2699, -3104, -3104,  2773,  2365,  2264, 23524,  2266, -3104,
    2270, 66202, 46073,  2413, -3104, -3104,  2271, -3104, -3104, 20398,
   -3104, -3104, 42362,  2272,  2275,  2732,  1837,  2297,  2297, -3104,
   -3104,    29, -3104,  2708, 33682,  2666,  1167,  1008,  2296,   229,
   -3104, -3104, -3104, -3104, -3104,  2497, -3104, 41805,  2531,   221,
    2515,  2243, 20398, -3104,  2367, -3104, -3104, -3104,  2770, -3104,
   -3104, 52245,  2293,  2125,  2087,  1895,  2125,  2522, -3104,  2526,
   -3104,  2305, 41844, 66202, 66202, 33682,  1675, 66202,  2303,  2297,
   -3104,  2309, -3104, -3104, -3104, 46756, -3104,  2310, -3104, -3104,
   -3104, 20398,   168, -3104, -3104,  2352, 56237,   230,   172,  2517,
   40672, 48752, -3104,  2360,    12,  2625, -3104, -3104, -3104, -3104,
     243,  2545, -3104,  2551, -3104, 46073, -3104,  2569, 52245, -3104,
   -3104, -3104, -3104, -3104, -3104, 33682,  2699, -3104,   364, -3104,
   -3104,  1508,   364, -3104, -3104, -3104, -3104, -3104,  1985, 24045,
   24045, 24045,  2325,  2569, -3104,  1508, -3104,  2459,  2515, -3104,
   -3104, -3104, -3104, -3104,   830,   830,  2728, -3104,  2400, -3104,
    2125,   231, 66202,  1808, -3104,  1808, 25608,  2490,   216, 44929,
    2713, -3104,  2713,  2713, -3104, -3104, -3104, 39174, -3104, -3104,
    2837, -3104,   253, -3104, -3104, -3104,  1675,   364, -3104, -3104,
    2827, -3104, -3104, -3104, -3104, -3104,   865, -3104, -3104, -3104,
    1508,  1008, -3104, -3104, -3104,  1508,  1808, 24566,  2496, -3104,
    2571, -3104, -3104, -3104, -3104, -3104, -3104, -3104
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
     119,  1511,     0,   199,   198,  1472,  1511,     0,   226,     0,
    1511,   276,   482,     0,  1297,  1296,     0,  1309,  1511,     0,
     119,     0,  1319,     0,     0,     0,   523,   526,   524,     0,
       0,     0,  1511,   563,     0,  1298,  1511,     0,     0,   555,
     525,     0,   218,     0,     0,     0,     0,     5,     6,     7,
       8,     9,    23,    10,    11,    12,    13,    19,    14,    15,
      16,    17,    18,    20,    21,    22,    25,    24,    26,    27,
     156,    28,    29,    30,    31,     0,    32,     0,    33,    34,
      35,    36,   499,   485,   568,   498,     0,     0,   118,   668,
     506,    37,    39,    38,    40,    41,    42,    43,    44,  1299,
    1295,    45,     0,     2,     4,  1510,  1509,  1503,     0,     0,
       0,     0,     0,  1471,     0,     0,  1514,    49,  1553,  1554,
    1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1931,
    1564,  1565,  1566,  1567,  1568,  1932,  1569,  1570,  1571,  1877,
    1878,  1933,  1879,  1880,  1572,  1573,  1574,  1575,  1576,  1577,
    1578,  1579,  1580,  1581,  1881,  1882,  1582,  1583,  1584,  1585,
    1586,  1883,  1934,  1884,  1587,  1588,  1589,  1590,  1591,  1935,
    1592,  1593,  1594,  1595,  1596,  1597,  1598,  1599,  1600,  1936,
    1601,  1602,  1603,  1604,  1605,  1606,  1607,  1608,  1609,  1610,
    1885,  1611,  1612,  1886,  1613,  1614,  1615,  1616,  1617,  1618,
    1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,
    1629,  1630,  1631,  1632,  1633,  1634,  1635,  1636,  1637,  1638,
    1639,  1887,  1640,  1641,  1642,  1643,  1644,  1645,  1888,  1646,
    1647,  1648,  1889,  1649,  1650,  1651,  1937,  1938,  1652,  1653,
    1890,  1940,  1654,  1655,  1891,  1892,  1656,  1657,  1658,  1659,
    1660,  1661,  1662,  1663,  1664,  1941,  1665,  1666,  1667,  1668,
    1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,  1942,  1893,
    1677,  1678,  1679,  1680,  1681,  1894,  1895,  1896,  1682,  1943,
    1944,  1683,  1945,  1684,  1685,  1686,  1687,  1688,  1689,  1690,
    1946,  1691,  1947,  1692,  1693,  1694,  1695,  1696,  1697,  1698,
    1699,  1897,  1700,  1701,  1702,  1703,  1704,  1705,  1706,  1707,
    1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,  1717,
    1718,  1719,  1898,  1949,  1899,  1720,  1721,  1722,  1900,  1723,
    1724,  1950,  1725,  1901,  1726,  1902,  1727,  1728,  1729,  1730,
    1731,  1732,  1733,  1734,  1735,  1736,  1903,  1951,  1737,  1952,
    1904,  1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,
    1747,  1748,  1749,  1750,  1905,  1953,  1751,  1752,  1906,  1753,
    1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,  1763,
    1764,  1765,  1766,  1907,  1767,  1768,  1769,  1770,  1771,  1772,
    1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,
    1783,  1784,  1785,  1954,  1786,  1787,  1788,  1908,  1789,  1790,
    1791,  1792,  1793,  1794,  1795,  1796,  1797,  1798,  1799,  1800,
    1801,  1802,  1803,  1804,  1805,  1806,  1807,  1909,  1808,  1809,
    1955,  1810,  1811,  1910,  1812,  1813,  1814,  1815,  1816,  1817,
    1818,  1819,  1820,  1821,  1822,  1823,  1824,  1911,  1825,  1912,
    1826,  1827,  1828,  1957,  1829,  1830,  1831,  1832,  1833,  1834,
    1913,  1914,  1835,  1836,  1915,  1837,  1916,  1838,  1839,  1917,
    1840,  1841,  1842,  1843,  1844,  1845,  1846,  1847,  1848,  1849,
    1850,  1851,  1852,  1853,  1854,  1855,  1856,  1918,  1919,  1857,
    1858,  1958,  1859,  1860,  1861,  1862,  1863,  1864,  1865,  1866,
    1867,  1868,  1869,  1870,  1871,  1872,  1920,  1921,  1922,  1923,
    1924,  1925,  1926,  1927,  1928,  1929,  1930,  1873,  1874,  1875,
    1876,    50,    51,  1274,     0,   227,     0,  1252,    49,  1890,
    1897,  1911,    50,   224,   225,     0,  1506,   275,     0,     0,
       0,     0,     0,     0,  1311,     0,   476,   475,     0,  1464,
     481,     0,     0,     0,    53,  1451,  1753,    52,  1251,  1449,
      59,  2101,  2102,  2103,  2104,  1988,  2105,  2106,  2107,  2108,
    1989,  2109,  1990,  1991,  1992,  1993,  1994,  1995,  2110,  2111,
    2112,  1997,  1996,  2113,  1998,  2114,  1999,  2115,  2000,  2001,
    2116,  2117,  2002,  1607,  2003,  2004,  2118,  2119,  2120,  2121,
    2122,  2123,  2124,  2125,  2126,  2005,  2006,  2127,  2128,  2007,
    2129,  2130,  2008,  2131,  2009,  2010,  2011,  2132,  2133,  2012,
    2013,  2134,  2014,  2135,  2136,  2015,  2016,  2019,  2017,  2137,
    2018,  2138,  2020,  2021,  2022,  2139,  2140,  2023,  2024,  2141,
    2025,  2026,  2027,  2028,  2029,  2142,  2030,  2143,  2031,  2032,
    2144,  2145,  2146,  2147,  2148,  2034,  2033,  2035,  2036,  2149,
    2150,  2151,  2152,  2037,  2038,  2039,  2153,  2154,  2040,  2155,
    2156,  2041,  2042,  2157,  2043,  2044,  2158,  2045,  2046,  2159,
    2047,  2048,  2160,  2161,  2162,  2049,  2163,  2050,  2051,  2164,
    2165,  2052,  2053,  2166,  2054,  2167,  2168,  2169,  2170,  2055,
    2056,  2171,  2057,  2172,  2173,  2174,  2175,  2058,  2059,  2060,
    2061,  2062,  2063,  2064,  2065,  2066,  2067,  2068,    61,    60,
      62,  1468,     0,  1340,  1341,     0,  1351,     0,  1333,  1338,
    1334,     0,  1360,  1353,  1361,  1342,  1332,  1354,  1343,  1331,
    1310,     0,  1362,  1348,  1336,     0,     0,     0,     0,  1507,
     102,   482,     0,   119,     0,   160,   161,   162,   163,   164,
     165,   170,   166,   167,   168,   169,   171,   172,   173,   174,
     175,   151,   156,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,     0,   226,
       0,  1883,  1934,  1888,     0,  1901,     0,  1904,  1905,  1789,
    1912,  1915,  1916,  1917,  1918,     0,   742,    52,    47,   726,
       0,   501,     0,   672,   686,   726,   731,  1016,   754,  1017,
       0,    54,  1321,  1320,  1314,  1496,   333,  1445,  1654,  1694,
    1806,  1913,  1835,  1857,  1302,  1446,  1439,  1444,  1508,   562,
     560,     0,  1208,  1654,  1694,  1793,  1806,  1913,  1857,   301,
     306,     0,  1514,  1290,    52,    47,  1289,     0,   507,   554,
       0,   103,   217,     0,   222,     0,  1769,   534,   537,  1283,
     535,   499,     0,     0,   155,  1494,     0,   125,     0,     0,
     558,   558,     0,   558,     0,   491,     0,     0,   499,   494,
     498,   669,  1301,  1913,  1835,  1291,  1288,     1,   119,  1663,
       0,     0,  1663,     0,  1663,     0,  1663,     0,     0,  1474,
       0,  1504,  1192,     0,  1253,    55,     0,     0,  1432,  1428,
    1433,  1429,  1434,  1427,  1426,  1435,  1431,     0,     0,     0,
     447,   480,   479,   478,   477,   482,  1663,    74,     0,  1490,
    1491,     0,     0,     0,     0,     0,  1307,  1459,  1452,  1450,
    1663,  1469,  1349,  1350,     0,  1339,  1335,  1337,     0,     0,
    1663,  1278,  1359,  1355,  1663,  1359,  1245,  1663,     0,     0,
      94,     0,   475,   153,   191,  2055,   192,   193,   205,     0,
     206,   196,   159,   119,     0,   274,   223,     0,     0,     0,
    1138,   726,   731,     0,     0,   744,     0,  1158,     0,  1164,
       0,     0,     0,   726,   506,     0,   686,   743,    48,   676,
       0,   724,   725,   610,   610,     0,   563,   544,     0,   610,
     610,   610,   736,     0,     0,   739,   737,     0,   739,     0,
       0,     0,   739,   735,   695,     0,   610,     0,   724,   727,
     610,     0,   746,  1438,     0,     0,     0,     0,  1442,  1440,
    1441,  1447,     0,  1443,     0,     0,   992,     0,     0,     0,
    1255,  1257,  1258,  1106,  1268,   993,     0,  1878,  1879,  1880,
    1181,  1881,  1882,  1884,  1885,  1886,   951,  1627,  1887,  1266,
    1889,  1891,  1892,  1894,  1895,  1896,  1897,  1898,  1899,     0,
    1267,  1902,  1732,  1907,  1908,  1910,  1913,  1914,  1265,  1919,
       0,     0,     0,  1226,  1129,     0,  1185,  1193,   985,     0,
       0,   790,   791,   812,   813,   792,   818,   819,   821,   793,
       0,  1215,   885,   981,  1203,   995,   990,  1000,   996,   997,
    1036,   998,  1015,  1001,  1073,   991,     0,   999,   983,  1211,
     544,  1209,     0,   984,  1254,   544,  1207,   304,   302,   309,
     303,     0,   305,     0,     0,     0,  1505,    48,   323,   324,
     216,   214,   215,   213,   212,   219,     0,   221,   156,  1185,
    1124,  1126,     0,   536,     0,     0,     0,   488,   487,   489,
    1283,     0,     0,     0,  1644,     0,  1322,   556,   557,     0,
       0,     0,     0,     0,     0,     0,     0,   653,   583,   584,
     586,   650,   654,   662,     0,     0,     0,     0,     0,   495,
       0,  1300,  1294,  1292,     0,     3,     0,     0,    93,    93,
       0,     0,     0,     0,     0,  1416,  1365,  1409,     0,     0,
       0,     0,  1536,  1549,     0,     0,     0,     0,     0,  1546,
       0,     0,  1529,  1523,  1525,  1367,     0,    93,     0,  1363,
       0,     0,     0,  1369,  1472,     0,   274,  1512,  1513,  1191,
       0,    57,    58,    56,    49,     0,  2069,  1931,  1932,  1933,
    1934,  1884,  1935,  1936,     0,  1937,  1938,  1890,  1940,  1941,
    1942,  1943,  1944,  1945,  1946,  1947,  1897,  1949,  1950,  1951,
    1952,  1953,  1954,  2095,  1955,  1911,  1957,  1917,     0,  1958,
    1008,    50,  1271,  1132,   568,  1130,  1284,     0,     0,  1430,
       0,     0,     0,     0,   272,     0,     0,     0,     0,    70,
       0,     0,  1663,   241,  1663,   447,     0,  1663,   447,  1663,
       0,  1663,  1308,  1312,  1458,  1461,     0,  1352,  1347,  1345,
    1344,  1346,  1663,  1501,     0,     0,  1279,     0,  1357,  1358,
    1326,     0,     0,  1328,     0,     0,    99,     0,    97,     0,
     482,     0,   119,  1530,   201,   202,   200,     0,     0,   158,
    1533,   195,   204,   194,   203,   157,  1550,   152,     0,     0,
    1436,   260,     0,     0,     0,  1139,   861,   860,   842,   843,
     858,   859,   844,   845,   852,   853,   863,   862,   850,   851,
     846,   847,   840,   841,   856,   857,   848,   849,   854,   855,
     838,   839,  1153,  1140,  1141,  1142,  1143,  1144,  1145,  1146,
    1147,  1148,  1149,  1150,  1151,  1152,     0,     0,   685,   682,
       0,     0,     0,     0,     0,     0,  1185,     0,   956,   991,
       0,     0,     0,  1124,  1163,     0,     0,     0,     0,     0,
       0,  1124,  1169,     0,     0,   710,   722,     0,   603,   609,
     683,   681,   673,     0,  1208,     0,   756,   686,   684,   678,
     680,   736,     0,   735,     0,     0,   738,   732,     0,   733,
       0,     0,     0,     0,   734,     0,     0,     0,     0,   677,
       0,   722,     0,   679,   753,   312,   320,  1497,     0,  1275,
    1959,  1960,  1961,   800,  1962,   829,   807,   829,   829,  1963,
    1964,  1965,  1966,   796,   796,   809,  1967,  1968,  1969,  1970,
    1971,   797,   798,   834,  1972,  1973,  1974,  1975,  1976,     0,
       0,  1977,   829,  1978,   796,  1979,  1980,  1981,   801,  1982,
     764,  1983,     0,  1984,   799,   765,  1985,   837,   837,  1986,
       0,   824,  1987,  1276,  1277,     0,  1135,   774,   782,   783,
     784,   785,   810,   811,   786,   816,   817,   787,   884,     0,
     796,   119,  1448,  1303,     0,   994,  1004,     0,  1076,  1078,
       0,  1129,  1002,   828,   815,  1180,     0,   823,   822,     0,
    1129,   805,   804,   803,   987,     0,   802,  1086,   829,   829,
     827,   910,   806,     0,     0,     0,     0,     0,   833,     0,
     831,   911,   889,   890,     0,     0,  1225,  1234,  1124,  1128,
       0,   985,  1124,     0,     0,     0,  1186,  1256,   986,     0,
    1261,     0,     0,   884,   884,  1214,  1106,     0,  1096,  1099,
       0,     0,  1103,  1104,  1105,     0,     0,     0,  1206,     0,
    1114,  1116,     0,     0,   926,  1112,     0,   929,     0,     0,
       0,     0,  1100,  1101,  1102,  1092,  1093,  1094,  1095,  1097,
    1098,  1110,  1091,   907,     0,   982,     0,  1039,     0,   906,
    1212,   671,     0,  1259,   671,   314,   318,   319,   317,   313,
       0,   308,   307,   310,   311,     0,   325,     0,   210,   207,
    1127,   666,   538,  1247,     0,   542,  1495,   330,   124,   123,
       0,  1287,     0,     0,     0,  1315,   511,   510,   577,   569,
     571,   577,     0,   509,     0,   626,   627,     0,     0,     0,
       0,   659,   657,  1255,  1268,   614,   587,   613,     0,     0,
     591,     0,   618,   885,   652,   493,   581,   582,   585,   492,
       0,   655,     0,   665,     0,   530,   532,   515,   529,   527,
     512,   520,   653,   586,     0,  1293,     0,     0,     0,     0,
       0,  1663,     0,     0,   767,  1400,  1381,   399,    92,     0,
       0,     0,     0,     0,     0,     0,  1408,  1405,  1406,  1407,
       0,     0,     0,     0,  1275,  1534,  1535,  1548,     0,  1539,
    1540,  1537,  1541,  1542,     0,     0,  1527,  1528,     0,     0,
       0,     0,  1526,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1473,  1466,  1187,  1192,   568,   568,   568,     0,
     566,   567,     0,     0,     0,     0,     0,   259,   445,   455,
       0,     0,     0,    74,     0,     0,     0,     0,     0,  1307,
       0,   482,    75,    73,    77,    76,    78,  1633,    65,     0,
       0,   240,   237,     0,   444,   418,     0,     0,  1463,     0,
       0,  1485,  1483,  1486,  1475,  1488,  1478,     0,     0,     0,
       0,  1663,   434,  1460,     0,  1470,     0,     0,  1499,  1359,
    1280,     0,  1356,  1359,  1246,     0,  1359,     0,   101,     0,
     197,   154,  1531,  1551,  1532,  1552,   274,   269,   299,     0,
     277,   282,   257,     0,   257,     0,   279,   283,   257,   278,
       0,   257,   273,     0,  1031,     0,  1021,     0,     0,   745,
       0,     0,  1022,   958,   959,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   976,   975,  1023,   749,     0,   752,     0,
       0,  1161,  1162,     0,  1024,     0,     0,  1168,     0,     0,
       0,  1029,     0,   687,     0,     0,   593,   594,   602,   598,
     605,     0,   608,   595,   544,   500,  1654,  1694,     0,   555,
     555,   555,   553,   543,     0,   630,   688,     0,     0,   711,
       0,     0,   713,   715,     0,     0,   718,   694,   693,     0,
       0,     0,     0,   757,     0,  1251,     0,     0,     0,  1498,
       0,     0,   782,     0,     0,     0,   772,   768,     0,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   788,     0,   332,   794,   337,   338,   335,     0,
     331,   334,   336,   339,     0,     0,  1079,  1006,     0,     0,
       0,  1179,  1175,     0,     0,     0,     0,  1081,  1083,  1085,
       0,   826,   825,  1090,  1096,  1099,  1103,  1104,  1105,  1100,
    1101,  1102,  1092,  1093,  1094,  1095,  1097,  1098,     0,  1118,
       0,  1072,     0,     0,     0,     0,     0,     0,     0,  1219,
    1218,     0,  1242,     0,  1005,   989,     0,  1216,  1226,  1194,
       0,     0,     0,  1264,  1263,   886,   895,   898,   930,   931,
     902,   903,   904,   908,  1286,  1285,  1213,     0,  1205,     0,
       0,   887,   912,   917,     0,  1170,  1173,   947,  1172,     0,
     935,     0,   925,     0,   933,   937,   913,   928,     0,   909,
       0,  1206,  1115,  1117,     0,  1113,     0,   899,   900,   901,
     891,   892,   893,   894,   896,   897,   905,  1089,  1087,  1088,
       0,  1192,     0,  1204,     0,     0,  1041,     0,     0,   932,
    1210,     0,   756,   568,   756,     0,   884,   326,   220,  1283,
     209,  1283,  1125,  1248,  1282,   540,     0,     0,     0,   328,
     110,   114,     0,  1193,   144,   146,   671,     0,  1322,  1322,
    1324,  1323,   575,   576,   580,     0,     0,   580,   559,   508,
    1908,  1789,     0,     0,     0,     0,   619,   660,     0,   651,
     616,   617,     0,   615,  1255,   620,  1254,   621,   624,   625,
     592,  1243,   661,   663,     0,   656,     0,  1249,   514,   533,
       0,     0,     0,     0,     0,   497,   496,   667,     0,  1366,
       0,  1663,  1383,     0,     0,     0,     0,     0,     0,   349,
       0,   449,   349,  1421,  1663,  1359,  1663,  1359,  1557,  1628,
    1807,     0,  1379,   423,  1412,     0,    86,   452,     0,   408,
    1402,  1417,    79,     0,     0,  1524,  1368,  1538,  1543,    82,
    1547,  1544,   342,  1545,    93,     0,  1364,     0,    80,     0,
     340,     0,     0,  1370,    84,   344,  1474,     0,  1191,     0,
     566,   566,   566,     0,  1131,     0,     0,     0,  1133,  1134,
     925,  1423,  1424,  1425,  1422,   245,   258,     0,     0,   446,
     271,   248,   249,   259,    72,     0,   241,   447,     0,   447,
       0,  1312,    74,     0,     0,    67,    63,     0,     0,     0,
       0,   445,   437,   435,   468,     0,   442,   436,     0,     0,
     394,     0,  1521,     0,     0,     0,     0,  1492,     0,     0,
       0,     0,  1307,  1313,     0,     0,     0,  1501,  1502,  1325,
    1281,  1327,     0,  1329,   100,    98,  1437,  2025,   265,  1129,
       0,   263,   270,   262,   264,   267,   268,     0,   261,   256,
       0,   292,     0,     0,     0,     0,     0,     0,     0,     0,
    1018,  1137,     0,  1156,  1155,   957,   964,   967,   971,   972,
     973,  1157,     0,     0,     0,   968,   969,   970,   960,   961,
     962,   963,   965,   966,   974,     0,   754,     0,   748,  1166,
    1165,  1159,  1160,     0,  1026,  1027,  1028,  1167,     0,     0,
     723,   597,   599,   596,     0,     0,   756,   555,   555,   555,
     555,   552,     0,     0,     0,   755,     0,   647,   717,     0,
     741,     0,   714,     0,     0,   705,     0,   712,   761,     0,
     728,     0,   730,   321,   778,     0,   773,   769,     0,     0,
       0,   779,     0,     0,     0,     0,     0,     0,     0,  1136,
       0,   561,  1075,  1077,  1003,     0,     0,     0,  1176,     0,
     953,   795,   808,     0,  1084,  1007,     0,  1107,  1071,   836,
     835,   837,   837,     0,  1221,  1223,     0,     0,     0,     0,
    1233,     0,   954,  1184,     0,  1032,  1182,  1125,  1234,   988,
     820,   884,     0,     0,     0,     0,     0,     0,     0,   936,
     927,     0,   934,   938,     0,     0,     0,   921,     0,     0,
     919,   948,   915,     0,     0,   949,  1191,     0,  1195,     0,
       0,  1040,  1049,   674,   670,   630,   566,   630,     0,   315,
     211,   208,   541,   119,   329,     0,   133,     0,     0,     0,
       0,   136,   150,   147,   328,     0,  1316,  1317,     0,   570,
     572,     0,  1108,   580,   574,   623,   622,     0,   590,   658,
     588,     0,   664,     0,   531,     0,   517,     0,   697,     0,
       0,     0,     0,     0,   398,     0,     0,     0,   349,     0,
     457,     0,   464,     0,     0,   449,   430,  1401,     0,     0,
       0,  1375,  1420,  1393,  1385,  1371,  1399,     0,     0,  1404,
       0,  1397,  1414,  1415,  1413,     0,  1418,   359,   384,     0,
       0,     0,   395,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,  1192,  1192,  1188,     0,     0,     0,
     568,   564,   565,  1009,     0,   244,   298,   295,   296,   294,
    1529,   456,     0,     0,   239,   444,     0,  1463,  1477,  1480,
       0,    71,   482,     0,    68,     0,    66,     0,   241,   447,
       0,   422,   418,   443,   416,   415,   417,     0,  1522,   102,
       0,  1516,   447,  1462,     0,     0,  1493,  1484,     0,  1489,
       0,     0,  1487,  1312,     0,     0,  1457,  1500,  1359,     0,
     252,   293,   300,   280,   285,     0,   291,   287,   286,   281,
     289,   288,   284,  1019,  1030,  1154,     0,     0,     0,     0,
     750,   747,     0,  1025,  1020,   721,     0,     0,   630,     0,
       0,     0,     0,   546,   545,   551,     0,     0,  1043,   716,
       0,     0,     0,   703,   692,   698,   699,     0,     0,     0,
     759,   758,   729,   782,     0,   762,     0,   782,   782,     0,
     780,     0,   789,   877,   878,   879,   880,   881,   882,   883,
     814,     0,  1178,  1174,  1080,  1082,  1119,   832,   830,   952,
    1224,  1217,  1220,  1124,  1228,  1230,     0,     0,     0,     0,
    1241,     0,     0,  1074,  1242,  1262,   888,     0,     0,   918,
    1171,   939,     0,     0,     0,   914,  1107,     0,     0,     0,
       0,     0,   923,     0,  1199,  1192,     0,  1198,     0,     0,
       0,     0,  1014,   675,   647,     0,   647,     0,     0,   327,
       0,   322,   111,   112,   113,     0,     0,     0,   128,   105,
       0,     0,   145,   133,   121,   578,   579,     0,   573,   589,
    1244,  1250,   516,     0,   985,     0,     0,   513,     0,    87,
     349,     0,     0,  1382,     0,   466,   410,   458,   441,   425,
       0,     0,     0,   350,     0,   483,     0,     0,   431,     0,
       0,     0,     0,   411,     0,     0,   370,     0,     0,   441,
       0,   448,   366,   367,     0,  1374,  1394,     0,  1390,     0,
    1419,     0,     0,     0,     0,     0,  1377,  1389,     0,  1372,
     767,  1359,  1359,  1380,  1275,  1959,  1960,  1961,  1962,  1963,
    1964,  1965,  1966,  1967,  1968,  2079,  1969,  1970,  1971,  1972,
    1973,  1974,  1975,  1976,  2088,  1977,   356,  1978,  1732,  1979,
    1980,  1981,  1982,  1983,     0,  1984,   765,  1985,  1986,  2167,
    1987,  1092,  1093,   354,  1276,   352,   355,   451,   351,   459,
     353,     0,   454,   409,    83,   343,     0,    81,     0,   341,
      90,    88,    85,   345,  1467,     0,     0,  1012,  1013,  1010,
     566,     0,     0,     0,   274,   251,     0,     0,  1521,     0,
       0,     0,  1663,     0,    64,     0,  1463,   238,   444,     0,
     474,   394,   469,     0,  1521,  1519,     0,  1463,   236,  1476,
    1479,     0,     0,   499,  1481,     0,  1304,     0,     0,     0,
    1330,     0,   266,   290,   977,     0,     0,     0,     0,     0,
     606,   612,   647,   550,   549,   548,   547,   629,  1602,  1891,
    1788,     0,   633,   628,   631,   636,   638,   637,   639,   635,
     646,     0,   649,   740,  1120,  1122,     0,     0,     0,     0,
     704,   706,     0,   708,     0,   760,   776,     0,     0,   777,
     775,   770,   781,  1177,  1222,  1231,  1232,  1227,  1236,  1238,
       0,     0,     0,   885,  1183,   955,   945,   943,   940,     0,
     941,   922,     0,     0,   920,   916,     0,   950,     0,     0,
    1196,     0,  1035,     0,  1038,  1052,  1048,  1047,  1043,  1009,
    1043,   316,   539,   132,   109,   135,   134,     0,  1193,   142,
       0,     0,   133,   137,     0,  1515,     0,     0,   528,   696,
     521,   522,     0,   462,  1384,     0,   441,     0,   349,   427,
     426,   429,   424,   428,     0,   484,     0,     0,   368,     0,
     375,   413,   414,   412,   369,   441,   447,   371,     0,     0,
       0,  1386,  1376,  1373,  1378,  1387,     0,     0,  1388,  1391,
     761,   766,  1403,  1396,  1275,  2088,  2097,     0,     0,     0,
       0,     0,  1190,  1189,     0,   247,   246,   297,   243,   254,
    1529,     0,     0,   418,  1518,     0,     0,     0,     0,   444,
      69,     0,     0,     0,  1521,     0,     0,   346,     0,   391,
       0,    95,  1520,     0,     0,   228,     0,     0,     0,  1455,
    1456,     0,   253,   978,     0,   979,   751,     0,     0,   604,
    1043,     0,     0,     0,   640,   634,     0,  1042,  1044,     0,
     601,  1123,   700,     0,   702,     0,   726,     0,   726,   709,
     771,   763,  1229,  1239,  1240,  1235,  1033,     0,   942,   946,
     944,   924,  1192,  1192,  1200,  1197,  1037,  1051,  1054,   649,
    1260,   649,     0,     0,   120,     0,     0,   117,   104,   122,
    1109,   518,   519,     0,   349,     0,   440,   463,   380,   358,
       0,     0,     0,   365,   372,   473,   374,     0,  1395,  1411,
       0,     0,   453,    91,    89,  1011,   274,     0,  1463,   394,
     236,  1306,     0,     0,     0,   418,   102,  1517,   407,   400,
     401,   402,   403,   404,   405,   406,   421,   420,   392,   393,
       0,     0,     0,     0,  1482,     0,  1457,     0,   139,   148,
       0,   139,   980,   607,     0,   649,     0,     0,     0,   632,
       0,     0,   648,     0,   504,  1121,     0,   691,   689,     0,
     690,  1237,     0,     0,     0,     0,   568,   601,   601,   106,
     143,     0,   107,     0,     0,     0,   447,   465,   439,     0,
     432,   378,   377,   379,   383,     0,   381,     0,   397,     0,
     390,   358,     0,  1398,     0,   460,   242,   250,     0,   348,
     230,   444,     0,   236,   394,  1521,   236,     0,   233,     0,
    1305,     0,     0,     0,   141,     0,  1463,   141,     0,   601,
     642,     0,   641,  1046,  1045,   603,   701,     0,  1034,  1202,
    1201,     0,  1058,   503,   502,     0,     0,     0,     0,   473,
       0,     0,   419,     0,   380,     0,   373,   470,   471,   472,
       0,   386,   376,   387,  1392,  1410,   461,     0,   444,   231,
     347,    96,   229,   234,   235,     0,   139,   138,   577,   140,
     149,   756,   577,   611,   505,   643,   600,   707,  1053,     0,
       0,     0,     0,     0,   116,   756,   127,     0,   390,   438,
     433,   357,   382,   396,     0,     0,     0,   388,     0,   389,
     236,     0,   141,   580,  1453,   580,  1877,  1603,  1842,     0,
    1070,  1059,  1070,  1070,  1050,   108,   115,     0,   349,   362,
       0,   361,     0,   450,   385,   232,  1463,   577,   129,   130,
       0,  1063,  1062,  1061,  1065,  1064,     0,  1057,  1055,  1056,
     756,   467,   360,   364,   363,   756,   580,     0,     0,  1067,
       0,  1068,   126,  1454,   131,  1060,  1066,  1069
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3104,    75,    76,  -898, -1205,  -936, -1214, -3104,   -80,    -7,
   -3104, -3104, -3104,  -720, -3104, -2559,    81, -3104, -3104,   228,
   -3104,  1086, -3104,   222,  -794,   605, -3104,  1183, -3104, -3104,
    1635,   579,    84,    93,  2107, -3104,  1062, -3104,  3816,  2304,
    4367,  1308,  -521,  -878, -1257,     4,    10, -3104, -3104, -3104,
   -3104, -3104,  -760,   559, -1221, -3104,   497, -3104, -3104, -3104,
   -3104,  -166,   206, -2298,     6, -2203, -2891,  -532, -3104,  -635,
   -3104,  -288, -3104,  -582, -3104,  -961,  -590,  -624, -2861, -1149,
   -3104,  1701,  -340, -3104,   653, -3104, -2585, -3104, -3104,   641,
   -3104, -1166, -3104, -2225,   207,  -570, -2083, -2590, -2192,  -917,
     277,  -578,   257, -2166, -1282, -3104,   661, -3104,  -562, -3104,
    -888, -1811,   105, -2828, -1599,   106, -3104,   552, -3104, -2144,
     560, -2143,  1616,  -673,   114, -1674, -3104, -3104, -1708,    53,
   -2167,    22, -2124,   117, -3104, -3104,   119,    21,  -538,   341,
   -3104,   131, -3104, -3104,  1597,  -891, -3104, -3104,   561,   132,
    1049, -3104, -2603, -3104,  -598, -3104,  -629,  -616, -3104, -3104,
      24,  -893,  1589, -3104, -3104, -3104,    25, -3104,  -437, -3104,
   -3104, -2606, -3104,    28, -3104, -3104, -3104, -3104, -1508,  -374,
     349, -3104, -3104,  -500, -2597,  -454, -3104, -2998, -3030, -3104,
   -3104,  -597, -3020, -2084,   133, -3104,  2093,  -499,   136,   142,
   -3104,   376,   143, -1152,    23,  3155,   -31,   -33, -3104,     2,
   -3104, -3104, -3104,   725, -3104, -3104,    18,    46,  1801, -3104,
   -1033, -3104, -1509,   479, -3104,  1960,  1965, -2200,  -882,   -73,
   -3104,   762, -1689, -2151,  -573,  1221,  1779,  1787, -3104,   518,
   -2519, -3104,  -487, -3104,   835, -3104, -3104,   757,  1266, -1557,
   -1564, -3104, -2212, -3104,  -407,  -294, -3104, -3104, -3104, -3104,
   -3104, -2513, -2892,  -572,  1232, -3104,  1804, -3104, -3104, -3104,
   -3104,    -9, -1513,  2974,   803, -3104,   -85, -3104, -3104, -3104,
   -3104,   219, -3104,   995,  -114, -3104,  -458,  -676,  -798,  2023,
    -158,   249, -1810,   -11,   305,   563, -3104, -3104,   570, -2099,
   -1433,   520,  -203,   994, -3104,    59, -1281, -3104, -1906, -1182,
   -3104, -3104,  -645,  -810, -3104, -3104, -3104,  -517,   482, -3104,
   -3104,   804,   971, -3104,  -912,  1429,  -988, -1044,  2036,  -934,
    2039,  -933,  -929,  -938,  2041,  2042,  2045,  2048,  2051,  2072,
    2083, -1535,  5432,  1737,  -772, -2217, -3104, -1416, -1590,  1116,
    1117,  1118,    17, -3104, -1423,    69, -3104, -3104, -3104, -3104,
   -3104, -2755, -3104,  -371, -3104,  -363, -3104, -3104, -3104, -1808,
   -3103, -1835, -3104,   698,   986, -3104, -3104,   519, -3104, -3104,
   -3104, -3104, -1516, -3104,  6493,   832, -3104, -2040, -3104, -3104,
    -966,  -820,  -668, -1002, -1216, -1957, -3104, -3104, -3104, -3104,
   -3104, -3104, -1432, -1752,  -141,   895, -3104, -3104,   992, -3104,
   -3104, -3104,   232, -1455, -1728, -2132, -3104, -3104, -3104,   903,
    1601,   178,  -837, -1626, -3104, -2004, -3104, -3104,   949, -2411,
   -3104, -3104,   511, -2665, -3104, -3104,   233, -3104,  -622, -1134,
   -2472,  2794,    42, -3104,  -970, -2573, -3104, -3104,  -738, -2626,
   -1112,  -897, -3104,   144,  1752,  2219,    31,   145, -3104,   147,
    1364, -3104, -3104, -3104,   148, -3104,   690,   149,   606, -3104,
    1050, -3104,   575,    30, -3104, -3104, -3104,   224,    26, -2910,
   -3104, -3104,  2172
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,   755,   756,  1861,  1808,  3003,  1244,  1798,  1370,   532,
     522,   523,  1554,   719,  1302,   720,   757,  2653,  2654,  2655,
    2281,  1225,  3443,  2282,  1226,  1227,  2657,    50,    51,    52,
     115,  1256,   758,   759,   533,    55,  2331,   927,   806,  1169,
     855,  1107,  1626,   915,  1261,  1262,   760,  2695,  2343,  3240,
    2749,  3241,  2410,  2337,  1380,  2402,  1908,  1842,  1381,   540,
    1922,  2750,  2700,  1909,   761,  2642,  3007,  3436,  2668,  3573,
    2941,  2942,  3433,  3434,  2645,  2284,  3501,  3502,  2728,  1789,
    3496,  2362,  3376,  2288,  2269,  2943,  2370,  3336,  3050,  2285,
    2923,  2363,  3429,  1883,  2364,  3430,  3188,  2365,  1839,  1865,
    2646,  3503,  2289,  1840,  2641,  3008,  1777,  2366,  3440,  2367,
     551,  2927,   762,  2731,  1326,   763,  1871,  1872,  1873,  1874,
    1875,  1876,   945,  1877,   764,  1319,  1853,    61,  1333,   552,
    1880,   765,  1862,   766,  2715,  2716,   767,   768,  1185,  2596,
    2199,   769,   746,   747,   962,  1350,   748,    67,  1888,   770,
    1356,  1357,   970,    69,   875,  1372,   771,  1373,  1374,   979,
      70,  2751,   981,   982,    71,    72,   773,  3270,  3069,  1335,
    1884,  2375,   553,   774,  2888,  2201,  2599,  3425,    75,  3169,
    2204,  1183,  3172,  3389,  2881,  3167,  2600,  3464,  3518,  3170,
    2205,  2206,  3390,  2207,   775,    77,   824,  1715,   776,   777,
    1047,  2050,   778,  1780,   779,  1108,    83,    84,  1017,    85,
    3182,    86,    87,  1755,  1756,  1757,   857,   867,   868,  2197,
    1466,  1993,   860,  1189,  1724,   841,   842,  2327,   884,  1831,
    1719,  1720,  2214,  2609,  1748,  1749,  1198,  1199,  1979,  1980,
    3404,  1981,  1982,  1459,  1460,  3279,  1736,  1740,  1741,  2235,
    2225,  1727,  2477,  3092,  3093,  3094,  3095,  3096,  3097,  3098,
    1109,  2788,  3290,  1744,  1745,  1201,  1202,  1203,  1753,  2245,
      89,    90,  2182,  2583,  2584,   812,   813,  3109,  1487,  1758,
    2792,  2793,  2794,  3112,  3113,  3114,   814,  1012,  1013,  1040,
    1035,  1477,  2002,   815,   816,  1956,  1957,  2448,  1042,  1995,
    2012,  2013,  2800,  2499,  1555,  2270,  1556,  1557,  2027,  1558,
    1110,  1559,  1591,  1111,  1596,  1561,  1112,  1113,  1114,  1564,
    1115,  1116,  1117,  1118,  1584,  1119,  1120,  1608,  2029,  2030,
    2031,  2032,  2033,  2034,  2035,  2036,  2037,  2038,  2039,  2040,
    2041,  2042,  1170,  1759,  1122,  1123,  1124,  1125,  1126,  1127,
    1128,  1129,  1130,  1131,   818,  1132,  2544,  1133,  1677,  2176,
    2582,  3102,  3287,  3288,  2872,  3157,  3318,  3416,  3532,  3560,
    3561,  3587,  1134,  1135,  1578,  1579,  1580,  2067,  2068,  2069,
    2070,  2170,  1671,  1672,  1136,  3010,  1674,  2090,  3105,  3106,
    1171,  1452,  1620,  1304,  1305,  1569,  1426,  1427,  1433,  1931,
    1441,  1445,  1961,  1962,  1453,  2137,  1137,  2061,  2062,  2519,
    1586,  2545,  2546,  1138,  1260,  1627,  2867,  2173,  1675,  2130,
    1145,  1139,  1146,  1141,  1616,  2100,  2535,  2536,  1617,  2540,
    2835,  2836,  2102,  2840,  3129,  3130,  2542,  2242,  1703,  2247,
    2248,   966,  1142,  1143,  1144,  1306,   527,  1570,  3519,  1346,
    1176,  1307,  2126,   780,   107,   911,   781,   782,    94,   783,
    1165,   864,  1166,  1168,   784,   835,   836,   785,   849,   850,
    1496,  1691,  1497,   873,    99,   100,  1212,   837,   787,  3265,
     102,   103,   104
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     521,   886,   887,   914,  1140,  1243,    57,  1208,   963,   718,
      56,   885,  1376,  1314,   810,   872,   521,  1036,    88,  1958,
     721,    65,    62,    81,   525,    73,   101,   858,    74,  1812,
      98,    92,  2217,  1444,   977,  1823,  1263,  1811,    88,  1858,
     817,  1704,  1983,  1498,   772,  1172,  1369,  1316,  1795,   526,
     786,  1776,  1418,  1610,  2180,   889,  1414,  1416,  1568,  2016,
     856,  1417,  2136,  2049,  2495,   526,  2614,  1782,  1706,  2647,
     745,  2602,  1359,  1786,  1353,    47,    48,   810,   810,   521,
     521,    49,  1828,  2585,    53,  2587,  2744,  2089,  1890,  1375,
     890,   870,   819,    54,  2534,  1816,  3011,  2319,  2113,  2114,
     905,  3039,  2640,   817,   817,    58,    59,  1681,  2566,  1245,
    3005,  1249,  1684,  1253,    60,  3037,  2497,    63,  2601,    64,
    2687,  2688,  2689,   896,   973,   965,  3054,  2834,   526,   526,
    1263,    66,    68,    76,  1014, -1253,    78,  3051,   978,  1623,
    1039,  2351,    79,    80,    91,    93,  2701,    95,    96,    97,
    1634,  -447,  -829,  2902, -1425,   819,   819,  2907,  1361,  1587,
    1588, -1482, -1272,  1690, -1482,  1697,  -486,  1897,  1383,  2344,
    -490,  2184,  2018,  3128,   983,  1064,  1600,  2240,  1624,  2043,
    2338,  1376,  2237,  2407,  2710,  2445,  2489,  2478,  2489,  2665,
    3257,  2717,  2671,  1428,  2018,  2489,  2043,  2138,  2806,  2806,
    2487,  2890,  1015,  2338,  2407,  3071,  2708,  2709,  3079,  2451,
    3244,  1767,  2043,  2043,  2489,  1688,  2043,  2018,  3325,  2128,
    2338,  2407,  2704,  2043,  1778,  1438,  3261,  2128,  2407,   862,
    3465,  3339,  3491,  3465,  3465,  1814,  1560,  1217,  2685,  3313,
    1347,  1352,  1568,  1218,  3192,  2517,  -255,  2348,  2756,  2758,
    1597,  2761, -1939,  -834, -1948,   954,  1597,  -834,   851, -1956,
   -1948,  1376,   977,  1826,  1376,  1376,  2795,  1711, -2088, -2088,
   -2074, -2074,  1827,  -486,  1713, -1273,  -796,  -490,  -809,  1263,
   -1272,   821, -1939,  1153,  1619,  1064,  1008,  -824, -1269, -1269,
   -2079, -2079, -2099, -2099, -1956,  1796,  3175,   821,  1799,  1800,
    -837, -1273, -2097, -2097,   821,  -837,  1770,  1348,  1348, -1270,
   -1270,  1197,  1200,  2341,  1363,  1348,  1039,  3031,  2151,  1064,
    1160,  1829,  1158,  1975,  2018,  1685,  1363,   821,  1014,  2724,
    1637,  1064,  1568,  1157,  2250,  1639,   821,  3423,  3352, -1529,
    1935,   876,  1787,  1338, -1529,  1937,  1787,  1006,  1219,  1787,
    1064,     3,     4,  -624,  1377,  1257,  2115,  2461,  1975,  3529,
    2022,  3158,   537,  3160,  1801,  1647,  3055,  2778,  3381,  1760,
    1761,  2325,  3544,  2874,  2177,  2876,  1935,  3593,  3382,  3282,
    1936,  1937,  1339,  1637,   876,  3228,  2875,  1638,  1639,  3582,
    1764,  2643,  -766,  3467,  1708,  2243,  1637,  1903,  1905,  1649,
    2767,  3497,  3258,  3319,  3487,  3321,  3463, -1090,  2925,   839,
     941,  1868,  2212,  2462,  2916, -1090,   113,  3259,  1647,  1187,
    1560,  3227,  1830,  2167,  1743,  1193,  3367,  3417,  3431,  3418,
    1592,  2168,   877,  1438,  2926,  2915,  1806,  3522,  1637,  1686,
    3251,  3189,  2152,  2577,  2669,   788,  1602,  1193,   789,   942,
    3450,  3263,  1649,  3580,  3165,  3536,  3201,  2670,  3252,  2153,
    1807,  1614,  2898,  -486,  2154,  1649,  1772,  -490, -1111,  2640,
    1810,  2640,  1316,  1647,  1778,   877, -1111,  1817,  2267,   538,
    2472,  2473,  2474,  3203,  2713,  2675,  2826,  2696,  1161,   821,
    1162,  3432,  3166,  2271,  3605,  3551,  2883,  2213,  3449,  2424,
     114,  1195,  2155,  3469,  1610,  1220,  -644,  1649,  1725,  1802,
    1560,   840,  2244, -2073, -2073,  3530,  3190,   820,  3552,  1803,
    3067,  1188,  3577,  1195,  2178,  3395,  1615,  2644,  -766,  1562,
    2452,  3202,  3056,   535,  -486,   944,  2326,  3498,  -490,  2268,
    3594,  1523,  1154,  3509,  3531,  3383,  3512,  3583,  1788,  1258,
    1196,  2884,  1788,  2768,  1568,  1788,  1709,  2463,  3340,  1785,
    1467,  1340,   929,  1687,  2136,  3424,  3082,   955,  1222,  3280,
    1699,  1714,  2342,  1815,   863,  3328,  3065,  2795,  1485,  3239,
    1604,  2491,  2060,  3032,  3193,  1773,   718,  1628,  1016,  3073,
    2129,  3059,  3060,  3510,  3047,  1587,  1588,   951,  2568,  3539,
    1223,  3350,  2262,  2267,  1349,  1349,   963,  2854,  3260,  1892,
    2251,  2333,  1349,  2324,  1583,  1785,  1726,  1896,  1155,  1785,
    1600,   882,  1785,  3499,   882,  2065,  1984,  3511,  1967,   879,
    1486,  1054,  2089,  3537,  2390,  1762,  1763,  2095,  3411,  2096,
    3575,   977,  2419,  1707,  3204,  2005,   912,  1812, -1253,  1568,
     913,  2589,   859,  -486,  2425,   891,  3011,  -490,  3359,  2156,
    2617,  2111,  1438,  1438,  2637,  -829,  2237,   989,  1438,  2789,
    3005,  1224,  2765,   878,  2743, -1272,  1313,  1341,  2711,  -447,
    2183,  1362, -1425,  2810,  2453,  2396,  2071,  2072,  1698, -1482,
    1898,  2458,  -486,  2604,  -486,  2019,  -490,   912,  -490,  2138,
    2612,  1625,  2044,  2339,  3545,  3331,  2408,  3183,  2446,  2490,
    3332,  2492,  2666,  1562,  3302,  2672,  2510,  2736,  2802,  2803,
    1005,  2807,  2808,   872,  2891,  2701,  3046,  3066,  3072,  1893,
    2488,  3080,  1560,  1901,  2488,  3140,  3275,  3276,  3255,  3308,
    3315,  3326,  3246,  3358,  3361,   978,  3392,   976,  1263,  2109,
    1263,  3460,  3448,  3466,  2054,  3492,  3535,  3576,  2686,  3314,
    2720,  1619,  2509,  3455,   865, -1939,  -834, -1948,  2236,  2236,
    1619,    88, -1956, -1948,   872,  1589, -1090,  1605,   980,  1973,
    3454,  2945,  1605,   786,  2092,  1163,  1568,   521, -1273,  1590,
    3256,  1595,  2169, -1272,  1632, -1939,  1004,  1002,   521,  1606,
    -824,  1020,  2324,  1562,  1606,   521,  3173, -1956,   874,  2110,
    1682,   817,  3077,  1607, -1273,  1806,  1209,  2185,  1609,  1367,
    1368,  2895,   817,  2676,   889,   539,  3124,  1560,  1376,   817,
    3234,  1367,  1368,  1670,   521,   521,   526, -1111,  1376,  1807,
    2459,  1376,   912,  1952, -1529, -1529,   913,   526,  2195,  1159,
    3216,  3217,  2651,  1844,   526,  2946,  3207,  3176,   521,   890,
    3521,  3037,  2297,   819,   105,  1474,   898,  1159,  2378,  1592,
    3242,  1481,  2300,  2196,   819,  2303,  1949,  1950,  1951,  1952,
    2459,   819,  2958,  1667,  1668,  1669,  1670,  1164,  2896,  1602,
    2697,  2698,  1845,  2796,   939,  2295,  3139,  3116,  3483,  3484,
    3569,  3119,  3120,   912,    57,   521,   718,   913,    56,  1301,
     521,  2131,  1173,  2058,   106,  2578,    88,  3011,  3252,    65,
      62,    81,  2064,    73,   101,  2045,    74,  3247,    98,    92,
    1462,  3005,   912,  1005, -1253,  1568,   913,  1376,   897,  2947,
    2648,  1044,  1478,  1605,  2320,  2321,  2322,  1568,   908,  2432,
    3524,  2466,  1045,   821,   821,  2226,  3025,  3026,  2779,  2780,
    2781,  2782,  1301,  2354,  1560,  1606,   940,  1598,  1599,  3385,
    3595,  2401,  2259,    47,    48,   976,  3598,  1568,  1847,    49,
     521,   521,    53,   880,  1568,  3337,   521,   872,  1317,   521,
     521,    54,   521,   521,   521,   521,  1400,  1401,  2389,  2296,
    1359,    88,  2391,    58,    59,  2393,   810,  1787,   521,  1004,
    2089,   521,    60,   786,  2403,    63,  2845,    64,   810,  2306,
     521,  1787,  1958,  1568,  2313,  1562,  1605,  1568,   910,    66,
      68,    76,   817,  1568,    78,   817,  3324,   521,  1301,  1553,
      79,    80,    91,    93,   817,    95,    96,    97,  1606,  1983,
     718,  2649,   912,  3599,   881,  1568,  1625,   526,  2504,  2413,
     526,  1575,  1607,   521,  2414,   941,  2298,   851,   851,   526,
     851,  2301,   851,   541,   872,    14,    15,  2590,  1778,  2591,
    2271,  1812,   521,   541,   819,  2049,  1787,   819,  1471,  1779,
    2558, -1948,  2433,   521,   521,   521,   819,   521,   521,   992,
    1628,  1787,  2434,  3334,   942,  1728,  1193,  2690,  1605,  -567,
    3570,  1194,  2623,  1560,  -567,  1406,  1407,  1021,  2559,  3274,
    1562,    23,  3344,  2415,   939,  1560,   931,  1778,   932,   521,
    1606,  3427,   882,  3209,  2919,  1820,   542,  3149,  1781,   943,
    1728,  3214, -2070, -2070,  1609,  3600,   542,   521,   521,  2674,
    2457,  1729,  2677,  2612,  2412,  1560,  1716,  1717,  2416,  1723,
     916,  2418,  1560,  1471,  1438,  1438,  1438,  1438,  1438,  1438,
    1159,   928,  1438,  1438,  1438,  1438,  1438,  1438,  1438,  1438,
    1438,  1438,  1195,   935,   521,  -567,  1729,   977,   521,   521,
     944,   890,   890,   933,   890,   934,   940,  3571,   521,   521,
     521,  1560,  1935,   521,  2796,  1560,  1936,  1937,  1220,   544,
   -1310,  1560,  1623,  1788,  2678,  2588,  1637,  2805,   946,  2725,
    1638,  1639,  2920,  1553,  1025,  2733,  3572,  1788,  2171,  2682,
     947,  1196,  2172,  1560,  -567,  1813,  1902,  1063,  2560,  2515,
    1935,  1064,  1904,  2561,  1936,  1937,   952,  1064,  1938,  1939,
    1940,  1647,  2616,  2616,  1730,  3351,  3444,  1562,  1301,   953,
    1026,   541,  1891,  1891,    26,    27,    28,  1301,  1315,  2615,
    1731,  2650,   956,  2651,  1064, -1309,  1472,  1479,  1315,   957,
    1785,  1484,  1581,   883,    46,  1649,  1028,  2368,  2921,  2369,
    2922,  1301,  1788,   958,  1785,  1844,  2467,   959,  2468,  1025,
    3601,  2586,   989,  2652,  1722,  1731,  1966,  1788,  1968,  1969,
    2469,  3368,  2470,  1553,  2556,  1056,  1057,  2662,   546,  2664,
     547,  1976, -2071, -2071,   542,  1852,  1977,  1065,   546,   718,
     972,    33,  1732,   823,  1845,  1026, -2072, -2072,   718,  3078,
    1885,  1854,    35,   969,  1855,  1856,   550,  2790, -2075, -2075,
    2797,  1480,   987,  2912,   976,  2914,   550,  1438,  1438,  1785,
    1190,  1028,  1192,   988,    37,  3591,  3369,  1732,    38,  1846,
   -2076, -2076,   718,  1568,  1785,  3370,   990,   521, -2077, -2077,
      88,  2089,   993,  1907,  2659,   980,  2661,  1997,  3009,   996,
    1999,   998,   786,   997,  2929,  2003,  2562,   999,  2006,  3371,
    2930,    40,  3578,  2010,  3579,   108,  1562,  2563, -2078, -2078,
   -2080, -2080,    43,  2931,  2626,  1032,  1000,    23,  1562,  1001,
    1847,  1002,  3554,   909, -2081, -2081,  1007,   521,   521,    44,
   -2082, -2082,  2707,   521,  1473,   521,  3566,  2932,  2956,  2933,
     521,   521,   521,   521,  1041,  3604,  2949,  1009,  1562,  1147,
    1148,  1942,  1150,    45,  1152,  1562,   521,   521,  1051,   817,
   -2083, -2083,  3024,   810,  1046,   521,   810,    46,   521,  1055,
    2913,   810,  3372,   521,   810,   521,   521,  1438,  1052,   810,
    1217,   521, -2084, -2084,   526,  3373,  1218,  2827,  2828,   817,
    1032,  3602,   817,  1054,  1562,  3034,  3603,   817,  1562,  1151,
     817,  2948,  1167,  2957,  1562,   817,   546,  1174,   972,  1473,
    1568,   819, -2085, -2085,   526, -2086, -2086,   526,  1048,  1049,
    1050,  1943,   526,  1053,  1175,   526,  1562,  2934,  1563,  1177,
     526,  1178,  2809,  2811,   550,  1553, -2087, -2087,  -499, -2089,
   -2089,   819,  1217,  1179,   819, -2090, -2090,  1181,  1218,   819,
    1182,  1560,   819,  -499, -2091, -2091,  1191,   819,  -499,  1210,
      26,    27,    28, -2092, -2092, -2093, -2093,   521,  2816,  2818,
    2819,  2813,  1623,  2814,   521,   109,  1568,  2815,  2817,  1619,
    1211,  2046,   521,   521,  3413,  3414,   110, -2094, -2094,    88,
     521,  1219,  2047,  1213,  2051,  2935,  1214,   521,  1216,  2048,
    2936,  2053,  2052,  1063, -2096, -2096,  1935, -2098, -2098,  -499,
    1936,  1937, -2100, -2100,  1938,  1939,  1940,   521,   718,  1832,
    1833,   111,   521,  1228,   821,   521,  1229,    33,  1246,  -499,
    1553,   521,   521,   521,   521,   521,   521,   521,   521,   718,
    2238,  2239,  1250,   521,   521,   521,  -619,  -619,   521,  2937,
    2125,  1255,   521,  1219,  2748,   521,   521,   521,   521,   521,
     521,   521,   521,   521,    38,  1254,   521,  2938,  -623,  -623,
    -622,  -622,   112,   521,  1312,  1301,  1402,  1403,  -499,  3221,
     977,  1568,  1406,  1407,  3180,  3181,  3374,  -499,  1560,  3375,
    1309,  2219,  1313,   521,   526,  1439,  2180,    40,  1318,  1376,
    1947,  1948,  1949,  1950,  1951,  1952,  2738,  2740,    43,  2606,
    2607,  1320,  1563,  2612,  1665,  1666,  1667,  1668,  1669,  1670,
     521,  1164,  3562,  3563,  2109,  1334,   890,  3588,  3589,  1693,
    1694,   521,   521,  2139,  1944,  1945,  1946,  1321,  1947,  1948,
    1949,  1950,  1951,  1952,  2956,  3184,  1337,  1345,  1220,  1336,
    1344,  2139,  1351,  1355,  1560,  1354,  1360,  1378,   116,  1379,
     541,  2140,   536,    46,  1384,  1392,  1393,  1553,  2939,  1442,
     749,  1455,  1458,  1465,  1457,  1476,   718,  2940,   718,  2140,
    1475,  1568,  1482,  1483,   838, -1465,  1217,  2283,   852,  2287,
    2906,  1488,  1218,  1492,  1941,  1494,  1438,  1438,  1571,  1572,
    1574,  1576,  1563,  -800,  -807,  1589,  1593,  1221,  3030,    46,
    1220,  1222,  2022,  3238,  1217,  3057,  -644,  1942,   521,  -645,
    1218,  -797,  1301,   542,  3041,   521,   521,  -798,  1603,  3553,
    -801,  -499,  1604,  3555,  3117,  1400,  1401,  3301,  -499,  -799,
    1629,  1676,  1631,  1223,  1562,  1678,  -499,  1680,  3391,  1461,
    1565,  -499,  1692,  1700,  1468,  1469,  1470,  3070,  1701,  1560,
    1705,  1710,  1712,  1301,  3151,  1568,  1217,  1194,  1196,  1247,
    1750,  1489,  1218,  1222,  1752,  1493,  2141,  2353,   880,  1765,
    1754,  2142,  1783,  1784,   718,  1785,  2143,  1943,  3596,  2372,
    1301,  1791,   521,  -568,  2141,  1790,  1792,  1219,  -568,  2330,
     976,  1797,  -499,  1439,  2143,  1248,  1804,   912,  1805,  1819,
    1177,   913,  1809,  2479,  1224,   113,  1553,  1825,  1217,  2482,
     521,   521,  -499,   521,  1218,  1219,  1835,  1836,  1553,   521,
     521,   521,   521,   521,   521,  1837,  1841,   521,   521,   521,
     521,   521,   521,   521,   521,   521,   521,  1849,  3009,   881,
    1851,  1860,   521,   521,  1406,  1407,   521,  1850,  1553,  1560,
    1863,  1864,  1866,   521,  1867,  1553,  1869,  1870,  1878,  -568,
    1879,  -499,  1568,  1887,  2612,  1886,  1224,  1219,  1891,  1376,
    -499,  1562,  2929,  1899,  1376,  1924,  1926,   521,  1963,   810,
    1927,   521,  1994,   521,  1438,   810,  2007,   521,  1929,  1932,
    1974,  3391,  1955,  1964,  1553,   546,  1568,   972,  1553,  1998,
     521,  1301,  1971,  3212,  1553,   817,  2004,  1566,  -568,  3104,
    1996,   817,  2008,  2009,  1563,  2932,  2014,   882,  2017,  1219,
     549,  1903,  1905,   550,  1565,  3356,  1553,  2020,  1583,  2144,
     526,  2025,  3391,  1560,  2026,  1590,   526,  1562,   521,  1595,
    2145,  2021,   521,   521,  1220,  2023,  2024,  2144,  2055,  1983,
    2056,  3115,  2057,  2059,  2060,  1064,  2093,   819,  2145,  3133,
    3222,  3223,  2097,   819,  2094,  2101,  1637,  2104,  2106,  2127,
    2147,  2174,  1220,  2148,  2150,  2181,  2175,  2193,  1568,  2194,
     521,  2198,  3391,   881,   521,  2215,   985,  2218,  2227,   521,
    1944,  1945,  1946,   872,  1947,  1948,  1949,  1950,  1951,  1952,
    2228,  2232,  2249,  1251,  2253,  2229,  2230,  1222,  2254,  1563,
    2260,  1022,   521,   521,  1565,  1623,  1023,   521,  1043,  2257,
    1568,  -499,  1439,  1439,  1220,  3446,  2264,  2265,  1439,  2231,
     882,  2258,  2266,   521,  2336,  1222,   521,   521,   521,  1252,
    1560,  2340,  1562,  1149,  2358,  2359,  2345,  2355,  2357,  2373,
    1438,  3407,  2374,  2376,   521,   718,  2379,  2380,  2381,  2382,
    2383,   521,   810,  2384,   521,  2386,  2385,  1223,   883,  2388,
    2392,  2409,  2417,  3342,  1560,  1024,  1220,   823,  2936,   810,
    1960,   521,  3198,  2304,  1935,  2447,   526,  1222,   817,  1063,
     912,  1566,  1935,  1959,   913,  2464,  1936,  1937,   521,  3009,
   -2101, -2101, -2101,  2454,  2455,   817,  2456,  2460,  2476,  2465,
    1224,  2483,  2494,   526,  2496,   521,   521,  2481,  2501,  2305,
    2511,  2502,  2503,  2524,  2514,  2505,  2525,  2937,  2521,   917,
     526,  1568,   521,  2506,   521,  2311,  1903,  1905,  1224,  1222,
     819,  2522,  1562,   521,  2526,  2938,  1563,  1025,  2507,  1376,
    2508,  2527,  2528,  2529,  2530,   918,  1560,   819,  2531,  2532,
    2541,   718,   718,   718,  2537,  1615,  2549,  2552,  2557,  1812,
    2550,  2312,  2283,  2283,  2283,  2564,  2573,  2574,  2579,  3345,
    1371,  1566,  2580,  1026,  2581,  2592,  2593,  2597,  1412,  1636,
    1224,  2598,  1637,  1438,  2603,  2595,  1638,  1639,  1560,  1027,
     521,   524,   534,  2605,  1714,  -625,  1301,   557,  2608,  1028,
    2618,  2619,  2621,   557,   872,  2622,  2625,   807,  2629,   822,
    2631,   919,  2630,   825,   557,   834,  1562,  1647,   834,  2636,
    2639,   854,   854,  2633, -2101,   854,  1565,  2658,   557,   557,
    1852,   977,  1224,  1029,  1553,  2635,  2939,  2660,  2673,  2679,
     920,  2680,  2681,  2706,  2694,  2940,  1854,  2691,  2692,  1855,
    1856,  1649,  2693,  2722,   521,  2712,  2179,   718,  2705,  2723,
    2726,  2734,  2730,  1628,  2727,  2745,  1597,  2755,  1907,  2763,
     807,   807,   521,   976,  2766,  2769,  2772,  2786,  2773,  1030,
     718,  2774,  2787,   921,   854,  1563,  1031,  1230,  2775,   541,
    2798,  1907,   854,   557,   854,   854,   854,  1563,  1630,  1560,
    2799,  2804,  2812,  2820,  2823,  1439,  2830,  1231,  1633,  2831,
    2842,  2841,  2852,  2850, -1465,  2856,  2555,  2853,   521,  2865,
    2873,  1565,  2866,  1562,  2871,  2877,  2109,  1563,  1032,  2880,
    1683,  2899,  2897,  2903,  1563,  2901,  3406,  2911,  2073,  1689,
    2917,  3396,   817,  3398,  2918,  2074,  2075,  1033, -2101,  2076,
    2077,  2078,   542,  1232,  2924,  1567,   521,  1562,  2944,  3027,
    2960,  3028,  3029,  1943,  3033, -2101,  3036,   526,  3044,  3040,
   -2101,  1553,  3045,  1563,  3048,  3049,  3053,  1563,  3408,  1159,
    3410,  3061,  1568,  1563,  3068,  3062,  2868,   872,  2338,  3489,
     521,  3075,  3076,  1566,   819,  3528,   521,   521,  3081,  3405,
    1376,  3101,  3125,  3103,  3107,  1563,   971,  3111, -2101,  3121,
     922,   521,  3122,  3126,  3482,  3131,  1034,  3493,  3152,  1910,
    3159,   923,  3162,   872,  1230,   521,  3164,  3174,   521,  3171,
     521,  3177,  3178,  3179,  3185,  3187,  3191,  1553,   521,  1562,
    3186,   521,   521,  3195,  1231,  3196,   521,   521,  3197,  1233,
    3205,  3208,  3477,   521,  3210,  3211,   924,  3215,  1565, -2069,
    3230,  3245, -2070,  1658,  3231,  3229,  1911, -2071,   521, -2072,
   -2073, -2074, -2075, -2076, -2077,  3235,  2905, -2078,   521,   925,
   -2080,  1562,  3248,  2046,   545,  3262,  3236,  1912,  1566, -2081,
    1232,    88,  3264, -2082,  2047, -2083,  2051, -2084,  1234,  3232,
     521,  2048,  2889,  2053,  2052,  1913,  3233,   926,  1235,  1914,
   -2085, -2086, -2087,  2885,  1439,  1439,  1439,  1439,  1439,  1439,
    1236, -2089,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1915, -2090,   546,  1916,   972,  3243,   718,  1567,
   -2091,  3268,  3004,   718,   718, -2092, -2093, -2094, -2095,  2283,
   -2096,  1917,  1237,   548,  3012,  2287, -2097,   521,   521,   549,
    1560, -2098,   550, -2099, -2100, -2101,  1906,  3266,    23, -1270,
    3249,  3267,  3271,  3277,  3285,  3281, -2101, -2101, -2101,  3278,
    1947,  1948,  1949,  1950,  1951,  1952,  1233,  3283,  3289,  3291,
    3064,  3292,  1562,  3295,  3297,  3296,  3300,  1852,  3303,  3304,
    3307,  3322,  3327,  3323,  3333,  3517,  1239,  1565,  3330,  3038,
    3335,  3347,  3348,  1854,  1437, -1269,  1855,  1856,  3357,  1565,
    3355,  3363,  2611,  3364,  3378,  1566,  3365,  3379,    23,  1567,
    3380,  1240,  3400,  3401,  3393,  1234,    23,  3058,  3394,   521,
     872,  3403,  1553,  3397,  1918,  1235,  3409,  3415,  3435,  1565,
    1242,  3204,  1919,  3439,  3441,  3442,  1565,  1236,  3445,   521,
     521,  3451,  3457,  3458,   521,  3459,  3463,   521,  1462,  3468,
    3470,  3475,  3472, -2101,  1920,  3155,  3479,  3476,  3481,  3480,
    1665,  1666,  1667,  1668,  1669,  1670,  3488,   559,  3486,  1237,
    3490,  3495,  3500,   750,   521,  1565,  3506,  3507,  3508,  1565,
    2886,  3533,  3513,  1921,   826,  1565,  3514,  1439,  1439,  3523,
    3515,    26,    27,    28,   521,  3525,  3527,  3543,   869,   869,
     521,   521,  3546,  1563,   854,   521,  1553,  1565,  3548,   854,
     521,  3564,   854,   521,   521,  3567,   872,  3544,   521,  1301,
     557,  3545,   521,  1239,   810,  3581,   521,   914,  3586,  3592,
    3597,  3606,  1063,   521,  3218,  1935,  3607,  2291,  2656,  1936,
    1937,  2959,  2190,  1938,  1939,  1940,  3541,  2963,  1240,  1821,
     817,    26,    27,    28,  1566,  2683,   986,  2334,    33,    26,
      27,    28,  2702,   901,  2752,  3272,  1566,  1242,  3035,  3504,
    3574,  3343,  3542,  3549,  3568,   526,  3377,   521,  1775,  2638,
    2663,  3540,  2928,  3547,  2634,   521,  1063,  3538,  3013,  1935,
    3052,  2737,  1848,  1936,  1937,    38,  1566,  1938,  1939,  1940,
    2739,  1889,   819,  1566,   521,  2893,  2394,  1439,  2747,  3461,
    1900,  3420,  2892,  1553,  2847,  2079,  2080,  2081,    33,  2082,
    2083,  2084,  2085,  2086,  2087,  3520,    33,  3485,    40,  2878,
    3590,  1567,  1186,  1562,  2624,  1702,  1463,  2610,  1747,    43,
    1563,  1464,  1566,  2777,  2256,  1746,  1566,  3004,  3526,  2620,
    3471,  3399,  1566,  2224,  2255,    38,    44,   811,  2186,  1063,
    3299,  2594,  1935,    38,  2486,  1751,  1936,  1937,  2770,  2801,
    1938,  1939,  1940,  3110,  1566,  1429,  2771,  3349,  2500,  3220,
      45,  2209,  2211,  2404,  2405,  2406,  1413,  2848,    40,  1415,
    3474,  1419,  1420,   718,  2887,  1421,    40,  3473,  1422,    43,
    1022,  1423,  2513,  2825,  1907,  1023,  1563,    43,  2613,  2571,
     961,   557,   557,  2518,  2569,   521,    44,  2548,  3163,  2844,
     872,  2188,  1424,  2252,   976,  1985,  1567,  2493,   521,  1553,
    1215,  1156,  3254,  1425,  3134,     0,     0,  3135,     0,     0,
      45,     0,     0,     0,   521,     0,  1942,     0,     0,     0,
       0,     0,   984,   534,    46,     0,     0,     0,   524,     0,
     854,     0,    46,     0,  1024,     0,     0,     0,     0,   807,
       0,  1553,     0,  1011,  1011,     0,   807,     0,   521,  1011,
    1038,     0,     0,     0,     0,     0,     0,     0,     0,  2316,
       0,     0,   834,   834,   834,   521,   521,   834,     0,   521,
    1942,   521,  2332,  2332,     0,  1106,  1106,   834,   834,     0,
     834,  1563,   834,     0,     0,    82,  1943,     0,     0,     0,
       0,     0,     0,     0,   854,  1565,     0,   521,     0,     0,
     557,  1933,  1934,     0,     0,    82,  1025,  1954,   809,   854,
       0,     0,   854,   822,  1204,     0,     0,     0,     0,     0,
     521,     0,    82,     0,     0,     0,     0,     0,     0,     0,
       0,   871,     0,  1567,     0,     0,     0,     0,     0,     0,
    1943,     0,  1026,  1942,     0,  1371,     0,     0,     0,     0,
       0,  2411,  3004,     0,     0,     0,     0,     0,  1027,     0,
       0,   854,  1311,     0,     0,     0,     0,     0,  1028,     0,
       0,   809,   809,   888,     0,     0,   854,   854,   854,   854,
    1332,  1563,     0,     0,     0,    82,     0,     0,     0,     0,
     718,     0,     0,  1343,   521,     0,  1439,  1439,  3360,     0,
       0,  1907,  1029,     0,   521,     0,   521,     0,   521,     0,
       0,     0,   521,  1943,   521,     0,   521,     0,   817,     0,
       0,     0,     0,  1205,     0,  1011,  1038,     0,   854,     0,
     521,  1436,  1565,     0,     0,   521,   521,  1011,  1011,     0,
       0,     0,     0,   526,   557,   521,     0,     0,  1030,   807,
       0,     0,   807,     0,     0,  1031,     0,     0,   718,     0,
       0,   807,  1566,   521,     0,  1563,     0,     0,     0,  3428,
     819,   557,     0,     0,     0,     0,  3419,     0,     0,  3422,
     949,     0,  1567,     0,     0,     0,     0,     0,  1573,     0,
       0,     0,     0,   557,  1567,     0,     0,  1032,  1565,  1944,
    1945,  1946,     0,  1947,  1948,  1949,  1950,  1951,  1952,     0,
     521,     0,     0,     0,     0,  1063,  1033,  3453,  1935,     0,
     521,     0,  1936,  1937,  1567,     0,  1938,  1939,  1940,     0,
       0,  1567,   521,  3456,     0,     0,     0,     0,     0, -1830,
       0,     0,     0,  3142,     0,     0,     0,   521,     0,     0,
       0,     0,     0,  1944,  1945,  1946,     0,  1947,  1948,  1949,
    1950,  1951,  1952,     0,     0,   521,     0,     0,     0,     0,
    1567,   817,  1563,     0,  1567,     0,     0,     0,     0,     0,
    1567,     0,     0,     0,     0,  1034,     0,     0,   521,     0,
    1206,     0,     0,  1696,  1439,     0,   526,     0,     0,  1566,
       0,     0,  1567,  1565,   521,     0,  1563,     0,   557,   557,
       0,     0,   817,  3004,   718,   854,     0,     0,     0,  1439,
       0,     0,     0,   819,     0,  3428,  1944,  1945,  1946,     0,
    1947,  1948,  1949,  1950,  1951,  1952,     0,   526,   521,  1436,
    1106,  1106,     0,     0,     0,     0, -1830,     0,     0,     0,
     854,  1774,   521,   521,   521,     0,     0,     0,     0,     0,
    3550,     0,   817,   854,   819,  1566,     0,     0,     0,     0,
       0,     0,   968,     0,     0,     0,     0,     0,     0,   521,
     854,     0,     0,     0,   854,     0,  3565,   526,  1563,  1822,
       0,     0,     0, -1830,  1063,     0,     0,  1935,     0,     0,
       0,  1936,  1937,  1565,     0,  1938,  1939,  1940, -1830,     0,
       0,     0,     0, -1830,   819,     0,     0,     0, -1830,     0,
     521,     0,  3143,  2667,     0,     0,     0, -1830,     0,  1942,
    1563,     0, -1830,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1838,     0,   854,
       0,     0,     0,     0,     0,   854,     0,     0,     0,  1230,
    1439,     0,     0,     0, -1830,     0,     0,     0,     0,  1882,
    1566,     0,     0,     0,     0,  2699,     0,     0,   961,  1231,
       0,   961,     0,     0, -1830,   557,   557,  1565,   557,   961,
     869,     0,     0,  2714,     0,     0,     0,  1022,     0,  1943,
       0,     0,  1023,  2426,  2427,  2428,  2429,  2430,  2431,     0,
       0,  2435,  2436,  2437,  2438,  2439,  2440,  2441,  2442,  2443,
    2444,     0,     0,     0,    82,  1232,     0,     0,     0,     0,
       0,     0,     0, -1830,     0,     0, -1830,     0,  1371,     0,
       0,  1563, -1830,     0,     0,     0,     0,     0,  2753,     0,
    2754,     0,     0,     0,  2759,     0,  2762,     0,     0,     0,
       0,  1024,     0,     0,     0,     0,     0,     0,  1436,  1436,
    1566,     0,     0,     0,  1436,     0,   524,     0,     0,     0,
       0,     0, -1830,     0,     0,     0,     0,     0,     0,  1011,
       0,   557,  1978,     0,  1565,  2952,     0,  1106,  1106,   854,
       0,     0,     0,  1439,     0,     0,   807, -1830,  1942,   807,
       0,     0,     0,     0,   807,     0,  1106,   807,     0,     0,
    1567,  1233,   807,     0,   557,     0,   557,     0,  1565,     0,
       0,     0,     0,  1025,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1063,     0,
       0,  1935,     0,     0,  1566,  1936,  1937,     0,     0,  1938,
    1939,  1940,     0,     0,     0,   859,     0,     0,     0,  1026,
    1234,     0,     0,     0,     0,     0,     0,     0,  1943,     0,
    1235,     0,     0,   853,     0,  1027,     0,   861,     0,     0,
       0,     0,  1236, -1830,  2371,  1028,  2553,  2554,     0,     0,
       0,     0,     0, -1830,     0,     0,     0,     0,     0,     0,
    1565,     0,  1944,  1945,  1946,    23,  1947,  1948,  1949,  1950,
    1951,  1952,     0, -1830,  1237, -1830, -1830,     0,     0,  1029,
       0,     0,     0,     0,     0,     0,     0,  2088,    82,   871,
       0,     0,     0,     0,     0,     0,   895,     0,     0,   557,
    2000,     0,  1565,     0,   900,     0,   903,  1567,   907,     0,
       0,  1566, -1830,     0,     0, -1830, -1830, -1830,     0,     0,
       0,     0,     0,  1636,     0,  1030,  1637,     0,  1239,   991,
    1638,  1639,  1031,   961,     0,     0,  1436,     0,     0,     0,
    1003,     0,     0,     0,     0,  1566,     0,  1019,   869,     0,
       0,     0,  1563,  1240,     0,     0,     0,  3006,     0,     0,
       0,  1647,     0,     0,  1106,     0,     0,     0, -2101,  1439,
       0,     0,  1242,  1567,  1032,     0,     0,     0,     0,  2187,
       0,     0,   854,   854,     0,     0,     0,     0,     0,     0,
    2699,     0,   888,  1033,   854,  1649,  2203,  2208,  2210,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    26,    27,
      28,  1436, -2101,  1565,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1566,     0,     0,
       0,     0,     0,    82,     0,     0,   854,     0,   557,     0,
       0,  1944,  1945,  1946,     0,  1947,  1948,  1949,  1950,  1951,
    1952,     0,  1774,   557,     0,     0,     0,     0,     0,     0,
    2565,     0,  1034,   557,  2273,   557,  2277,  2001,   557,  1566,
       0,     0,     0,     0,   557,    33,   557,     0,  1567,     0,
       0,     0,  1943,     0,     0,     0,     0,     0,   961,   557,
       0,     0, -2101,   961,   557,     0,     0,     0,   557,   557,
     557,   557,     0,   557,   557,     0,     0,     0,     0, -2101,
       0,     0,    38,     0, -2101,     0,     0,     0,    82,     0,
    2335,     0,     0,     0,     0,     0,  1894,     0,  1895,   854,
     854,   854,   854,  1332,   854,     0,     0,  1217,     0,     0,
       0,     0,     0,  1218,     0,    40,     0,     0,  2361,     0,
     809,  1230, -2101,  1003,     0,     0,    43,     0,     0,     0,
       0,     0,   809,     0,     0,  3161,     0,     0,     0,     0,
    2387,  1231,     0,    44,     0,     0,     0,    11,  1567,     0,
    1566,     0,     0,     0,     0,     0,     0,  3253,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    45,     0,     0,
       0,  1582,     0,     0,     0,    14,    15,  1658,    23,     0,
       0,    46,     0,  1594,     0,     0,     0,  1232,     0,     0,
    1436,  1436,  1436,  1436,  1436,  1436,     0,     0,  1436,  1436,
    1436,  1436,  1436,  1436,  1436,  1436,  1436,  1436,     0,     0,
    1621,     0,     0,     0,     0,     0,     0,     0,  1219,     0,
       0,    23,     0,     0,     0,     0,     0,     0,   557,     0,
       0,     0,  1567,     0,     0,     0,     0,     0,     0,     0,
       0,  1022,   854,     0,  1565,     0,  1023,     0,     0,     0,
       0,     0,   807,     0,     0,  2858,  2859,     0,   807,     0,
       0,     0,     0,   557,     0,  1944,  1945,  1946,   557,  1947,
    1948,  1949,  1950,  1951,  1952,     0,     0,  2498,  2498, -2101,
       0,     0,     0,  1233,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   888,   888,     0,   888,     0,     0,
       0,     0,     0,  3250,     0,  1024,   930,     0,     0,     0,
     557,   937,     0,     0,   938,     0,     0,     0,     0,     0,
       0,    26,    27,    28,     0,     0,     0,     0,     0,  1371,
     558,     0,  1234,     0,     0,     0,   558,     0,     0,  1567,
     808,     0,  1235,     0,     0,     0,     0,   558,     0,     0,
       0,     0,   557,     0,  1236,     0,     0,  2543,     0,     0,
       0,   558,   558,     0,    26,    27,    28,     0,     0,     0,
       0,     0,     0,  1567,     0,  1220,     0,  1025, -1832,     0,
       0,     0,     0,  1436,  1436,     0,  1237, -2101,    33,     0,
       0,     0,     0,     0,  1665,  1666,  1667,  1668,  1669,  1670,
       0,     0,  2088,   808,   808,     0,     0,     0,  1436,     0,
       0,  1566,     0,  1026,     0,     0,     0,  3320,     0,     0,
       0,     0,     0,     0,     0,    38,   558,     0,     0,  1027,
       0,    33,     0,     0,  1238,   807,     0,     0,  1222,  1028,
    1239,     0,    35,     0,     0,     0,     0,   557,     0,     0,
       0,     0,   807,  3074,     0,  1567,  2203,     0,    40,     0,
       0,     0,     0,     0,    37,  1240,     0,    82,    38,    43,
    1241,     0,     0,  1029,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1242, -1832,    44,  3006,    39,     0,
       0,     0,     0,     0,  1207,     0,     0,  1567,     0,     0,
     557,    40,     0,  1436,     0,  1106,   557,     0,     0,     0,
      45,     0,    43,  2263,     0,     0,     0,     0,     0,  1030,
       0,     0,  1838,  2272,    46,  2275,  1031,     0,  2286,    44,
       0,     0, -1832,     0,  2290,     0,  2292,     0,     0,     0,
       0,  1224,     0, -1847,     0,     0,     0, -1832,     0,  2299,
       0,     0, -1832,    45,  2302,     0,     0, -1832,  2307,  2308,
    2309,  2310,   995,  2314,  2315,     0, -1832,    46,  1032,     0,
       0, -1832,     0,     0,     0,     0,     0,   809,  1230,     0,
     809,     0,     0,     0,     0,   809,     0,  1033,   809,     0,
       0,     0,  1838,   809,     0,     0,     0,     0,  1231,   854,
       0,     0,     0, -1832,     0,     0,     0,     0,  1567,     0,
       0,  1838,   854,   854,   854,  3447,     0,     0,     0,  3200,
       0,     0,     0, -1832,     0,   557,     0,   854,     0,     0,
     854,     0,     0,     0,     0,     0,  1332,     0,     0,     0,
     854,  1180,     0,     0,  1232,  2950,   961,     0,     0,     0,
   -1847,     0,     0,     0,     0,  2951,  1034,     0,  1636,     0,
       0,  1637,     0,     0,     0,  1638,  1639,     0,  1838,  1838,
       0,  1838, -1832,     0,     0, -1832,    82,     0,     0,     0,
       0, -1832,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1310,     0,     0,  1647, -1847,     0,   524,
       0,     0,     0, -2101,     0,    14,    15,     0,  1323,  1325,
    1328,  1330, -1847,     0,  2952,     0,     0, -1847,  2776,     0,
       0, -1832, -1847,     0,     0,     0,   854,   854,   854,     0,
    1649, -1847,     0,     0,     0,   557, -1847,  1436,   557,     0,
    1233,     0,     0,   557,     0,     0, -1832,     0,  3006,     0,
       0,    23,     0,     0,     0,     0,     0,  2135,     0,     0,
    1431,     0,  3273,     0,   854,     0,     0,     0, -1847,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2088,     0,     0,     0,     0,     0,     0,     0, -1847,  1234,
       0,   557,     0,     0,     0,  2839,     0,     0,     0,  1235,
       0,     0,     0,     0,   859,     0,     0,     0,     0,     0,
       0,  1236,     0,  2953,     0,     0,     0,     0,     0,     0,
       0,     0,  1436,  1436,     0,     0,     0, -2101,     0,   888,
       0,     0, -1832,     0,     0,     0,     0, -1847,     0,     0,
   -1847,    23, -1832,  1237, -2101,     0, -1847,     0,     0, -2101,
       0,  2882,     0,     0,     0,     0,     0,  2203,     0,     0,
       0,     0, -1832,     0, -1832, -1832,     0,     0,     0,  1567,
       0,     0,     0,   558,     0,   854,     0,     0,     0,   557,
       0,  1106,     0,   557,   557,   557, -1847, -2101,     0,  1838,
    1774,  1838,     0,  1882,    26,    27,    28,  1239,     0,     0,
       0, -1832,     0,     0, -1832, -1832, -1832,     0,     0,     0,
       0, -1847,   557,     0,  2962,     0,     0,     0,     0,     0,
       0,     0,  1240,     0,     0,     0,     0,   557,   557,   557,
     557,   557,   557,   557,   557,   557,   557,  1894,     0,     0,
       0,  1242,  1658,  2954,     0,  1636,  2955,     0,  1637,     0,
       0,     0,  1638,  1639,     0,     0,     0,     0,     0,  2361,
       0,    33,  2356,     0,     0,     0,     0,   854,     0,   859,
       0,    82,    35,  3421,     0,     0,     0,  1774,     0,     0,
       0,     0,  1766,  1647,    26,    27,    28,     0,     0,     0,
   -2101,     0,     0,     0,    37,  1793,     0, -1847,    38,  1882,
       0,     0,     0,     0,     0,     0,     0, -1847,     0,  1838,
       0,     0,     0,     0,     0,     0,  1818,  1649,     0,     0,
    1436,     0,     0,     0,     0,     0,   557, -1847,     0, -1847,
   -1847,    40,     0,   854,   854,   854,   854,     0,     0,     0,
       0,     0,    43,     0, -2101,  1436,     0,     0,  1436,     0,
       0,    33,   557,   961,     0,     0,  1785,     0,     0,    44,
    3118,     0,     0,     0,   558,   558, -1847,     0,     0, -1847,
   -1847, -1847,     0,     0,     0,     0,   541,     0,     0,     0,
       0,  1843,  2857,    45,   557,     0,     0,  1859,    38,     0,
       0,  3127,  2839,     0,     0,     0,  2543,    46,     0,     0,
       0, -1465,     0,   809,     0,     0,     0,     0,     0,   809,
       0,     0,     0,     0, -2101,  2729,     0,     0,     0,     0,
       0,    40,   808,     0,     0,  3156,     0,   807,     0,     0,
       0, -2101,    43,     0,  1106,     0, -2101,     0,     0,   542,
       0,  3168,     0,     0,  2203,     0,     0,     0,     0,    44,
       0,  2088, -2101,     0,     0,     0,     0,     0,     0,  1665,
    1666,  1667,  1668,  1669,  1670,  1774,     0,     0,     0,     0,
       0,  1838,     0,    45, -2101,     0,     0,     0,     0,     0,
       0,     0,     0,   558,   961,   557,  1436,    46,     0,     0,
       0,     0,   854,   543,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3219,
       0,     0,   544,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1658,
       0,  1992,  1928,     0,     0,     0,     0,     0,     0,  1621,
       0,     0,     0,     0,  1636,     0,     0,  1637,     0,     0,
       0,  1638,  1639,  1640,  1641,  1642,  1643,  1644,     0,  2135,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   545,  1645,     0,     0,  2575,     0,     0, -1309,     0,
       0,     0,  1647,     0,     0,     0,   809,  3237,     0,  1648,
    1838,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2361,   809,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1649,     0,     0,     0,
       0,   546,  3269,   547,     0,     0,     0,  1456,     0,  1436,
       0, -2101,   808,     0,     0,   808,     0,     0,     0,     0,
     548,     0,     0,     0,   808,     0,   549,     0,     0,   550,
       0,     0,     0,     0,  1491,  3286,     0,  1217,     0,  2523,
       0,   557,     0,  1218,     0,     0,     0,     0,   557,     0,
    1636,  1230,     0,  1637,  2908,  2909,  1577,  1638,  1639,  1640,
    1641,  1642,  1643,  1644,     0,  3305,     0,     0,     0,     0,
       0,  1231,     0,     0,     0,     0,     0,     0,  1645,     0,
       0,     0,  2961,     0,     0,     0,     0,     0,  1647,  3317,
       0,     0,     0,  1650,     0,  1648,     0,  3014,  3015,  3016,
    3017,  3018,  3019,  3020,  3021,  3022,  3023,     0,     0,     0,
    1651,   557,     0,     0,     0,  1652,   557,  1232,     0, -2101,
       0,     0,  1649,     0,     0,     0,  1665,  1666,  1667,  1668,
    1669,  1670,     0,     0,     0,     0,     0,     0,  1653,  1654,
     871,     0,   557,     0,  2189,  2191,     0,     0,  1219,     0,
       0,     0,     0,  1655,     0,     0,  2200,     0,     0,     0,
       0,     0,     0,     0,   557,   557,     0,     0,     0,     0,
       0,   558,   558,     0,     0,     0,     0,     0,     0,     0,
       0,   854,     0,  1774,     0,     0,     0,   557,     0,     0,
       0,  1656,     0,     0,  1657,     0,     0,     0,  2241,     0,
       0,     0,   854,     0,     0,  3388,     0,     0,  1658,     0,
       0,  1659,     0,  1233,     0,     0,     0,     0,     0,  1650,
       0,     0,     0,     0,     0,  1436,     0,  1106,     0,   557,
    1011,     0,  1011,     0,     0,     0,  1651,  2839,     0,     0,
       0,  1652,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1106,     0,     0,  3168,
       0,     0,  1234,     0,  1653,  1654,     0,   854,     0,     0,
       0,     0,  1235,     0,     0,     0,     0,     0,     0,  1655,
       0,     0,     0,     0,  1236,     0,     0,     0,     0,     0,
       0,  2346,  2347,  2349,  2350,     0,  2352,   854,     0,     0,
       0,     0,     0,     0,     0,  1220,     0,     0,     0,     0,
    1660,     0,     0,     0,     0,     0,  1237,  1656,     0,     0,
    1657,     0,     0,  1621,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1658,  3286,     0,  1659,     0,     0,
       0,     0,     0,  1106,     0,     0,     0,     0,   558,   558,
       0,   558,     0,     0,     0,  3199,     0,     0,  3388,  1621,
       0,     0,     0,     0,  2293,     0,     0,     0,  1222,     0,
    1239,     0,     0,     0,     0,     0,     0,     0,    82,     0,
       0,     0,     0,     0,    82,  1774,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1240,     0,   961,   961,  3388,
    2294,   961,     0,     0,     0,     0,     0,     0,     0,  1978,
       0,     0,  2904,     0,  1242,     0,     0,     0,  1661,     0,
     557,  1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,
    1670,     0,     0,     0,  2471,     0,  1660,     0,     0,     0,
       0,     0,  1774,     0,     0,  1635,     0,     0,     0,  3388,
    1636,     0,     0,  1637,   558,     0,     0,  1638,  1639,  1640,
    1641,  1642,  1643,  1644,     0,     0,     0,     0,     0,   808,
       0,  1224,   808,     0,     0,     0,     0,   808,  1645,     0,
     808,     0,  1646,     0,     0,   808,   961,  2011,  1647,  2015,
       0,    82,     0,     0,     0,  1648,     0,     0,     0,     0,
       0,  2203,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    82,
       0,     0,  1649,     0,     0,     0,  3063,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1661,     0,     0,  1662,  1663,  1664,
       0,  1665,  1666,  1667,  1668,  1669,  1670,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1636,     0,     0,  1637,     0,  1621,     0,  1638,  1639,
    1640,  1641,  1642,  1643,  1644,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1645,
       0,     0,     0,  2837,     0,     0,     0,     0,     0,  1647,
       0,     0,  2099,     0,     0,     0,  1648,     0,     0,  1650,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3346,     0,     0,     0,  1651,     0,     0,     0,
       0,  1652,     0,  1649,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3353,  3354,     0,     0,   809,     0,
       0,     0,     0,     0,  1653,  1654,     0,     0,     0,     0,
       0,     0,   871,     0,     0,     0,     0,  3366,     0,  1655,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1656,     0,     0,
    1657,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1658,     0,     0,  1659,     0,     0,
    1650,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   558,     0,     0,     0,     0,     0,  1651,     0,     0,
       0,     0,  1652,     0,     0,     0,   558,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   558,     0,   558,     0,
       0,   558,     0,     0,     0,  1653,  1654,   558,     0,   558,
       0,  2703,     0,     0,     0,     0,     0,     0,     0,     0,
    1655,     0,   558,     0,  2718,  2719,  2721,   558,     0,     0,
       0,   558,   558,   558,   558,     0,   558,   558,  1636,  2732,
       0,  1637,  2735,     0,     0,  1638,  1639,  1640,  1641,  1642,
    1643,  1644,  2746,     0,    82,     0,  1660,     0,  1656,     0,
       0,  1657,     0,     0,     0,     0,  1645,     0,     0,     0,
       0,     0,     0,     0,     0,  1658,  1647,     0,  1659,     0,
       0,     0,     0,  1648,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1621,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1649,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,  1121,     0,     0,     0,     0,     0,
    3534,     0,     0,     0,     0,     0,     0,     0,  2783,  2784,
    2785,     0,     0,     0,  1636,     0,     0,  1637,     0,     0,
       0,  1638,  1639,     0,     0,  1642,  1643,  1644,     0,     0,
       0,     0,     0,     0,  1661,     0,     0,  1662,  1663,  1664,
       0,  1665,  1666,  1667,  1668,  1669,  1670,  1660,     0,     0,
       0,     0,  1647,     0,     0,     0,     0,     0,     0,  1648,
       0,   558,     0,     0,  1259,     0,     0,     0,  1303,  1308,
       0,     0,     0,     0,     0,     0,     0,  1650,     0,     0,
       0,     0,     0,     0,     0,   808,  1649,     0,     0,     0,
       0,   808,     0,     0,  1651,     0,  2485,     0,     0,  1652,
       0,  2015,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      82,  1358,  1653,  1654,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1655,     0,  1382,
       0,  3384,     0,  1577,     0,  1430,     0,     0,  1432,     0,
       0,  1443,  1446,  1451,  1454,  1661,     0,  2900,  1662,  1663,
    1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,     0,     0,
       0,     0,  2105,     0,     0,  1656,     0,     0,  1657,     0,
       0,     0,     0,  1650,     0,  2099,  1636,     0,     0,  1637,
       0,     0,  1658,  1638,  1639,  1659,  1495,  1303,    82,  1636,
    1651,    82,  1637,     0,     0,  1652,  1638,  1639,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1585,     0,  1647,     0,     0,     0,  1653,  1654,
       0, -2101,     0,     0,     0,     0,     0,  1647,     0,    82,
       0,  1601,     0,  1655, -2101,     0,     0,     0,     0,  3043,
       0,     0,  1611,  1612,  1613,    82,  1618,  1622,  1649,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   808,     0,
       0,  1649,     0,     0,     0,     0,     0,     0,     0,     0,
     558,  1656,     0,     0,  1657,   808,     0,     0,  1679,     0,
       0,     0,     0,     0,  1660,     0,     0,     0,  1658,     0,
       0,     0,     0,     0,     0,     0,  1495,  1495,     0,     0,
       0,     0,     0,     0,     0,  3083,  3084,  3085,  3086,     0,
       0,     0,     0,  2860,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   558,     0,     0,  2861,     0,     0,  2628,
       0,     0,     0,  1721,     0,     0,     0,  1737,  1742,     0,
       0,     0,     0,     0,     0, -2101,     0,     0,  1121,  1121,
       0,     0,     0,     0,     0,     0,     0,     0, -2101,     0,
       0,     0, -2101,     0,     0,     0,     0, -2101,     0,     0,
       0,     0,    82,     0,     0, -2101,     0,     0,     0,     0,
   -2101,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1660,     0,  1661,     0,     0,  1662,  1663,  1664,    82,  1665,
    1666,  1667,  1668,  1669,  1670, -2101,     0,  1303,     0,  2105,
       0,     0,     0,     0,     0,     0,  1303,  1636, -2101,     0,
    1637,     0,     0,     0,  1638,  1639,  1640,  1641,  1642,  1643,
    1644,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1303,     0,     0,  1636,     0,  1645,  1637,     0,   558,     0,
    1638,  1639,     0,     0,     0,  1647,     0,     0,     0,     0,
    1658,     0,  1648,     0,  3206,     0,     0,     0,     0,     0,
       0,     0,     0,  1658,     0,     0,     0,     0,     0,     0,
       0,  1647,     0,  1636,     0,     0,  1637,     0, -2101,  1649,
    1638,  1639,     0,     0, -2101, -2101, -2101,     0,  1661,     0,
       0,  1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,
    1670,     0,     0,     0,     0,  1649,     0,     0,     0,     0,
       0,  1647,     0,     0,     0,     0,  1925,     0,  1648,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1649,     0,     0,   558,     0,
       0,   558, -2101,     0,     0,     0,  2011,     0,     0,     0,
       0,     0,     0,     0,     0, -2101,     0,     0,     0,     0,
    3146,     0,     0,     0,     0,     0,  1650,     0,     0,  1451,
       0,  1451,  1451,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1651,     0,  1121,  1121,     0,  1652,     0,
       0,     0, -2101,     0,  2832,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0, -2101,
       0,  1653,  1654,     0, -2101,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1655,     0,     0,     0,
       0,     0,  1650,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1651,
   -2101,     0, -2101,     0,  1652,     0,     0,  1665,  1666,  1667,
    1668,  1669,  1670, -2101,  1656,     0,     0,  1657,     0,     0,
    1665,  1666,  1667,  1668,  1669,  1670,     0,     0,     0,     0,
       0,  1658,   558,     0,  1659,     0,   558,   558,   558,     0,
       0,     0,  1655,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1658,     0,     0,
       0,  2063,     0,     0,     0,   558,     0,     0,     0,  2066,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     558,   558,   558,   558,   558,   558,   558,   558,   558,   558,
       0,     0,     0,     0,     0,     0,  2107,  1658,     0,     0,
       0,     0,     0,  3362,  2112,     0,     0,     0,     0,     0,
    2116,  2117,  2118,  2119,  2120,  2121,  2122,  2123,     0,     0,
       0,     0,  2132,  2133,  3386,     0,     0,  2146,     0,     0,
       0,  2149,     0,  1660,  2157,  2158,  2159,  2160,  2161,  2162,
    2163,  2164,  2165,     0,     0,  2166,     0,     0,     0,     0,
       0,     0,  1121,     0,  1303,     0,     0,     0,     0, -2101,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2192,     0,     0,     0,     0,     0,     0,  2011,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3426,
       0,     0,     0,     0,     0,     0,     0,     0,   722,  1660,
     722,     0,     0,     0,     0,  2485,     0,     0,     0,     0,
    1612,  1613,     0,     0,     0,     0,     0,     0,     0,  3452,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2099,     0,     0,
       0,  1661,     0,     0,  1662,  1663,  1664,     0,  1665,  1666,
    1667,  1668,  1669,  1670,     0,   723,     0,   723,  2420,     0,
       0,     0,     0,     0,     0,     0,     0, -2101,     0,     0,
       0,   724,     0,   724,  1665,  1666,  1667,  1668,  1669,  1670,
     808,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2318,     0,     0,
       0,  1303,     0,     0,  2328,  2329,     0,  1661,     0,     0,
   -2101, -2101, -2101,     0,  1665,  1666,  1667,  1668,  1669,  1670,
     725,     0,   725,     0,     0,     0,     0,     0,     0,     0,
     726,     0,   726,     0,     0,     0,     0,     0,   558,     0,
       0,     0,  1303,   727,     0,   727,     0,   -46,   728,     0,
     728,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1358,
       0,  2395,     0,     0,     0,     0,     1,   729,     0,   729,
       0,     0,     0,     0,     0,     0,     2,     0,     3,     4,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2421,
    2422,     5,  2423,     0,     0,     0,     6,     0,     0,     0,
       0,     0,     0,     0,     0,     7,     0,     0,     0,     0,
     730,     0,   730,     0,   731,     0,   731,     0,     0,     8,
       0,  2449,  2450,     0,     0,  2192,     0,     0,     9,     0,
      10,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    11,     0,    12,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,  2475,     0,     0,     0,
       0,     0,  2480,     0,     0,     0,     0,     0,     0,     0,
      14,    15,    16,     0,     0,     0,     0,     0,   544,  1495,
    1303,    17,     0,     0,   732,     0,   732,    18,     0,     0,
       0,     0,     0,     0,     0,    19,     0,    20,    21,   733,
       0,   733,     0,     0,  3294,     0,     0,     0,     0,     0,
       0,  2485,    22,     0,     0,     0,    23,  2512,     0,     0,
    1440,     0,  2516,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   734,     0,   734,   735,     0,   735,
       0,     0,    24,     0,     0,     0,     0,     0,   736,     0,
     736,   737,     0,   737,     0,     0,     0,     0, -1318,  2533,
       0,     0,     0,  2539,     0,     0,     0,     0,  2547,   738,
       0,   738,     0,     0,   558,     0,     0,     0,     0,   558,
       0,     0,     0,   739,    25,   739,     0,     0,     0,   740,
     741,     0,   741,     0,     0,     0,     0,     0,     0,     0,
     742,     0,   742,     0,     0,   558,   743,     0,   743,     0,
       0,     0,  2567,     0,     0,  2570,     0,  2572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   558,   558,     0,
       0,     0,     0,  2576,   744,     0,   744,     0,     0,     0,
       0,     0,     0,     0,  1673,     0,     0,     0,     0,     0,
     558,     0,     0,     0,     0,     0,     0,     0,     0,    26,
      27,    28,     0,     0,     0,     0,     0,    29,     0,     0,
      30,     0,     0,     0,     0,     0,     0,  1721,  1636,     0,
       0,  1637,     0,     0,     0,  1638,  1639,  1640,  1641,  1642,
    1643,  1644,   558,  1673,  1742,  2164,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,  1645,     0,     0,     0,
      32,     0,     0,  1121,     0,     0,  1647,     0,     0,     0,
       0,     0,  2632,  1648,     0,     0,    33,     0,  1440,     0,
       0,     0,     0,    34,     0,     0,     0,    35,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    36,     0,     0,
    1649,     0,     0,     0,     0,     0,     0,     0,     0,    37,
       0,     0,     0,    38,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1613,
       0,     0,  1673,    39,     0,  1303,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,    41,
       0,     0,    42,     0,     0,     0,     0,    43,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,     0,  1673,     0,     0,     0,
       0,  1673,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2742,     0,     0,  1636,  1650,    45,  1637,
       0,     0,     0,  1638,  1639,  1640,  1641,  1642,  1643,  1644,
       0,     0,    46,     0,  1651,   -46,     0,     0,     0,  1652,
       0,     0,     0,     0,  1645,     0,     0,     0,     0,     0,
       0,  1673,     0,   558,  1647,     0,     0,     0,     0,     0,
       0,  1648,  1653,  1654,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1673,     0,  1655,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1649,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1656,     0,     0,  1657,     0,
       0,     0,     0,  1673,     0,  1673,     0,  1440,  1440,     0,
    1953,     0,  1658,  1440,     0,  1659,  1673,     0,     0,  1673,
       0,     0,     0,     0,  1673,     0,     0,  1673,     0,  2822,
       0,     0,     0,     0,     0,  2824,  2066,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2833,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2846,  1650,     0,  2849,  1673,  2851,
       0,     0,     0,     0,     0,     0,     0,  2855,     0,     0,
       0,     0,  1651,     0,     0,  2862,  2863,  1652,     0,     0,
       0,     0,  2870,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2879,     0,     0,
    1653,  1654,     0,     0,  1660,     0,     0,  2894,     0,     0,
       0,     0,     0,     0,     0,  1655,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1673,     0,
       0,     0,     0,  1656,     0,     0,  1657,     0,     0,     0,
       0,     0,     0,     0,  1673,     0,     0,     0,     0,     0,
    1658,     0,     0,  1659,  1673,  1673,  1673,     0,     0,     0,
       0,  1673,     0,     0,     0,  1673,  2318,  2318,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1661,     0,     0,  1662,  1663,  1664,     0,  1665,
    1666,  1667,  1668,  1669,  1670,     0,     0,     0,     0,  2520,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1673,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1636,     0,     0,  1637,
       0,     0,  1660,  1638,  1639,  1640,  1641,  1642,  1643,  1644,
       0,     0,     0,     0,  1673,     0,     0,     0,  3099,  3100,
       0,     0,     0,     0,  1645,     0,     0,     0,     0,     0,
    1673,     0,     0,     0,  1647,  1673,     0,     0,     0,     0,
       0,  1648,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1953,  3123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1649,     0,
       0,     0,     0,  3132,     0,     0,     0,     0,     0,  3136,
    3137,     0,     0,     0,  3138,     0,     0,     0,     0,  3141,
       0,     0,  3144,  3145,     0,     0,     0,  2318,  1303,     0,
       0,  3153,     0,     0,     0,     0,     0,     0,     0,     0,
    1661,     0,  1121,  1662,  1663,  1664,     0,  1665,  1666,  1667,
    1668,  1669,  1670,     0,     0,     0,     0,  2551,     0,     0,
       0,     0,     0,     0,  1636,     0,     0,  1637,     0,     0,
       0,  1638,  1639,  1640,  1641,  1642,  1643,  1644,     0,     0,
       0,     0,     0,     0,     0,     0,  3194,     0,     0,     0,
       0,     0,  1645,     0,     0,  1650,     0,     0,     0,     0,
       0,     0,  1647,     0,     0,     0,     0,     0,  1636,  1648,
       0,  1637,  1651,  3213,     0,  1638,  1639,  1652,     0,  1642,
    1643,  1644,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1649,     0,     0,     0,
    1653,  1654,     0,     0,     0,     0,  1647,     0,  1673,     0,
       0,     0,     0,  1648,     0,  1655,  1953,  1953,     0,  1440,
    1440,  1440,  1440,  1440,  1440,     0,     0,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1953,     0,     0,
    1649,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1656,     0,     0,  1657,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1658,     0,     0,  1659,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2742,     0,     0,     0,     0,     0,
       0,     0,     0,  1650,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1651,     0,     0,  1622,  1385,  1652,   821,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1650,  1653,  1654,
       0,     0,     0,     0,     0,     0,  1673,  2539,     0,  1673,
       0,     0,     0,  1655,  1651,     0,     0,     0,     0,  1652,
       0,     0,     0,     0,  3309,  3310,     0,     0,  3311,     0,
    1613,     0,  1660,     0,     0,     0,     0,     0,     0,  1386,
    1387,     0, -2101, -2101,     0,     0,     0,     0,     0,     0,
    1673,  1656,     0,     0,  1657,  1673,  3329,  1655,     0,  1673,
    1673,  1673,  1673,  1673,  1673,  1673,  1673,     0,  1658,     0,
       0,  1659,  1440,  1440,     0,  1673,  1673,     0,     0,  3341,
    1388,  1389,     0,     0,  1390,  1391,     0,     0,     0,  1673,
       0,     0,  1673,     0,     0,     0,     0,     0, -2101,     0,
    1673,  1673,  1673,  1673,  1673,  1673,  1673,  1673,  1673,  1673,
       0,     0,  1658,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1673,     0,     0,     0,     0,
    1661,     0,     0,  1662,  1663,  1664,     0,  1665,  1666,  1667,
    1668,  1669,  1670,     0,     0,     0,     0,  2764,     0,     0,
    1392,  1393,     0,     0,     0,     0,     0,  3099,     0,     0,
    1660,  3402,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3412,
       0,     0,  1440,     0,  2318,  2318,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1660,     0,     0,     0,     0,     0,
       0,     0,  3437,     0,  1394,  1395,  1396,  1397,  1398,  1399,
    1400,  1401,     0,     0,  1402,  1403,     0,     0,     0,  1636,
       0,     0,  1637,     0,     0,     0,  1638,  1639,  1640,  1641,
    1642,  1643,  1644,     0,     0,     0,     0,     0,     0,     0,
       0,  1673,     0,     0,     0,     0,     0,  1645,     0,  3462,
       0,  1673,  1673,     0,     0,     0,     0,  1647,  1661,  3099,
       0,  1662,  1663,  1664,  1648,  1665,  1666,  1667,  1668,  1669,
    1670,  1121,     0,     0,     0,  2829,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1404,  1405,
       0,  1649,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1661,     0,  3505,  1662,  1663,  1664,     0,  1665,
    1666,  1667,  1668,  1669,  1670,     0,     0,     0,  1673,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1406,
    1407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1673,  1673,  1673,     0,     0,  1953,
    1953,  1953,  1953,  1953,  1953,     0,     0,     0,  1953,  1953,
    1953,  1953,  1953,  1953,  1953,  1953,  1953,  1953,  1636,     0,
       0,  1637,  1673,  1673,     0,  1638,  1639,  1640,  1641,  1642,
    1643,  1644,     0,     0,     0,     0,     0,     0,  1650,     0,
       0,  3559,  3559,  3559,     0,     0,  1645,     0,  1673,     0,
       0,     0,     0,  1673,     0,  1651,  1647,     0,     0,     0,
    1652,     0,     0,  1648,     0,     0,     0,     0,  3559,     0,
       0,     0,     0,     0,     0,  1408,  1409,     0,     0,     0,
       0,     0,     0,  1653,  1654,  1673,     0,     0,     0,  1673,
    1649,     0,     0,     0,     0,     0,     0,     0,  1655,  1410,
    1411,     0,     0,     0,     0,     0,  1673,     0,     0,  3559,
       0,     0,  1673,     0,     0,     0,     0,     0,     0,     0,
    1673,     0,     0,     0,     0,     0,  1953,  1953,     0,     0,
       0,     0,     0,     0,     0,     0,  1656,     0,     0,  1657,
    1673,  1440,  1440,  1673,     0,  1673,     0,     0,     0,  1673,
       0,     0,     0,  1658,     0,     0,  1659,     0,     0,     0,
       0,     0,     0,  1636,     0,     0,  1637,     0,     0,     0,
    1638,  1639,  1640,  1641,  1642,  1643,  1644,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1650,     0,     0,
       0,  1645,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1647,     0,     0,  1651,  1673,     0,     0,  1648,  1652,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1653,  1654,     0,  1649,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1655,     0,     0,
       0,     0,     0,     0,     0,  1660,     0,     0,  1636,     0,
       0,  1637,     0,     0,     0,  1638,  1639,  1640,  1641,  1642,
    1643,  1644,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1656,  1645,     0,  1657,     0,
       0,     0,     0,     0,     0,     0,  1647,     0,     0,     0,
       0,     0,  1658,  1648,     0,  1659,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1673,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1649,     0,  1650,     0,     0,     0,     0,     0,     0,  1440,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1651,
       0,     0,     0,     0,  1652,     0,     0,     0,     0,     0,
       0,     0,     0,  1661,     0,     0,  1662,  1663,  1664,     0,
    1665,  1666,  1667,  1668,  1669,  1670,     0,  1653,  1654,     0,
    2843,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1655,     0,     0,  1673,     0,  1673,     0,     0,
       0,     0,     0,     0,  1660,     0,  1673,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1673,
       0,     0,  1673,     0,  1673,     0,     0,  1650,  1673,     0,
    1656,  1953,  1953,  1657,     0,  1673,  1673,     0,     0,     0,
       0,     0,     0,  1673,  1651,     0,     0,  1658,     0,  1652,
    1659,     0,  1673,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1636,     0,     0,  1637,  1673,     0,     0,
    1638,  1639,  1653,  1654,  1642,  1643,  1644,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1655,     1,     0,
       0,  1645,     0,     0,     0,     0,     0,     0,     2,     0,
       0,  1647,     0,     0,     0,  1440,     0,     0,  1648,     0,
       0,     0,  1661,     0,     0,  1662,  1663,  1664,     6,  1665,
    1666,  1667,  1668,  1669,  1670,  1656,     0,     7,  1657,  2910,
       0,     0,     0,     0,     0,  1649,     0,     0,     0,     0,
       0,     8,  1658,     0,     0,  1659,     0,     0,     0,  1660,
       0,     0,    10,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    11,     0,   751,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    14,    15,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   752,     0,     0,     0,     0,     0,    18,
    1386,  1387,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1650,     0,    22,     0,     0,     0,    23,     0,
       0,     0,     0,     0,  1660,     0,     0,  1953,  1440,  1651,
       0,  1388,  1389,     0,  1652,  1390,  1391,  1661,     0,     0,
    1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,
       0,     0,  1673,  1673,  3147,     0,     0,  1653,  1654,     0,
   -1318,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1655,     0,     0,     0,  1673,     0,     0,     0,
       0,     0,     0,     0,     0,  1673,    25,     0,     0,  1673,
    1673,  1673,     0,     0,  1673,     0,     0,  1673,  1673,     0,
       0,     0,     0,     0,     0,     0,  1673,     0,     0,     0,
    1656,  1392,  1393,  1657,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1658,     0,     0,
    1659,     0,  1661,     0,     0,  1662,  1663,  1664,     0,  1665,
    1666,  1667,  1668,  1669,  1670,     0,     0,  1673,     0,  3154,
       0,     0,     0,  1953,     0,     0,     0,     0,     0,     0,
       0,    26,    27,    28,     0,     0,  1673,     0,     0,    29,
       0,     0,    30,     0,     0,  1394,  1395,  1396,  1397,  1398,
    1399,  1400,  1401,     0,     0,  1402,  1403,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,    32,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1953,     0,    33,  1660,
       0,     0,     0,     0,     0,    34,     0,     0,     0,    35,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    36,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1404,
    1405,    37,  1673,  1673,  1673,    38,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1673,     0,     0,    39,     0,     0,     0,     0,
       0,     0,     0,     0,  1673,     0,     0,     0,    40,     0,
    1406,  1407,     0,     0,    42,     0,     0,     0,     0,    43,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    44,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1661,     0,     0,
    1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,
      45,     0,     0,     0,     0,  1673,     0,     0,     0,     0,
       0,     0,     0,     0,    46,  1673,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1673,     0,     0,     0,     0,     0,  1408,  1409,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1673,     0,     0,     0,     0,
    1410,  1411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1056,  1057,  1058,  1059,
    2028,   117,  1060,   821,  1061,  1062,  1063,  1064,  1065,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1673,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,  1066,     0,     0,
     129,   130,   131,     0,   132,   133,   134,   135,   136,   137,
     138,   139,  1067,   141,  1068,  1069,     0,   144,   145,   146,
     147,   148,   149,  1070,   790,   150,   151,   152,   153,  1071,
    1072,   156,  1673,   157,   158,   159,   160,   791,     0,   792,
       0,  1073,   164,   165,   166,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
    1074,   191,   192,  1075,   194,  1076,   195,     0,   196,   197,
     198,   199,   200,   201,    14,    15,   202,   203,   204,   205,
       0,     0,   206,   207,  1077,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
    1078,   222,   223,   224,   225,   226,   227,   793,  1079,   229,
       0,   230,   231,  1080,   233,     0,   234,     0,   235,   236,
      23,   237,   238,   239,   240,   241,   242,     0,   243,     0,
    1081,  1082,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,   268,   269,   270,
     271,   272,   273,   274,  1083,  1084,     0,  1085,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,     0,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   297,   298,   299,   300,  1086,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,  1087,   323,  1088,   325,
     326,   327,   328,  1089,   329,   330,   331,   332,  1090,   795,
     334,  1091,   336,   337,   338,     0,   339,   340,     0,     0,
    1092,   342,   343,     0,     0,   344,   345,   346,   347,   348,
     349,   797,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    26,    27,    28,     0,   362,   363,   798,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
    1093,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,   403,   404,   405,   406,  1094,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      33,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    35,   430,   431,   432,  1095,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   800,    37,     0,   450,   451,    38,   452,   453,
     454,   455,   456,   457,   458,     0,   459,  1096,  1097,     0,
       0,   462,   463,   801,   465,   802,  1098,   467,   468,   803,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
      40,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   804,  1099,   489,     0,   490,   491,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,    44,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
    1100,     0,    45,     0,     0,     0,     0,  1101,  1102,  1103,
       0,     0,     0,     0,  1104,     0,  1105,  3284,  1056,  1057,
    1058,  1059,     0,  1264,  1060,   821,  1061,  1062,  1063,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
    1265,   126,   127,   128,     0,     0,     0,  1266,     0,  1066,
       0,     0,  1267,   130,   131,     0,   132,   133,   134,  1268,
     136,   137,   138,   139,  1067,  1269,  1068,  1069,     0,   144,
     145,   146,   147,   148,   149,  1070,   790,   150,   151,   152,
     153,  1071,  1072,   156,     0,   157,   158,   159,   160,   791,
       0,  1270,     0,  1271,   164,   165,   166,   167,   168,  1272,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,  1273,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,  1074,   191,   192,  1075,   194,  1076,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,  1274,     0,   206,   207,  1077,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,  1078,   222,   223,   224,   225,   226,   227,   793,
    1079,   229,     0,   230,   231,  1080,   233,     0,   234,     0,
     235,  1275,     0,  1276,   238,   239,  1277,  1278,   242,     0,
     243,     0,  1081,  1082,   246,   247,     0,   248,   249,   250,
     251,   252,   253,   254,  1279,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,  1280,
     269,   270,   271,   272,   273,   274,  1083,  1084,     0,  1085,
       0,   278,  1281,  1282,   281,  1283,   283,   284,   285,   286,
     287,   288,     0,     0,   289,  1284,   291,  1285,     0,   293,
     294,   295,   296,   297,   298,   299,   300,  1286,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,  1087,  1287,
    1088,   325,   326,   327,   328,  1089,   329,   330,  1288,   332,
    1090,   795,   334,  1091,   336,   337,   338,     0,   339,   340,
       0,     0,  1092,   342,   343,     0,     0,   344,   345,   346,
    1289,   348,  1290,   797,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   798,  1291,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,  1093,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,  1292,   404,   405,   406,  1094,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,  1293,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,  1294,   431,   432,  1095,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,  1295,   448,   800,     0,     0,   450,   451,     0,
     452,  1296,   454,   455,   456,   457,   458,     0,   459,  1096,
    1097,     0,     0,   462,   463,   801,   465,   802,  1098,   467,
     468,  1297,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,  1099,   489,  1298,   490,  1299,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,  1100,     0,     0,     0,     0,     0,     0,  1101,
    1102,  1103,     0,     0,     0,     0,  1104,     0,  1105,  1300,
    1056,  1057,  1058,  1059,     0,  1264,  1060,   821,  1061,  1062,
    1063,  1064,  1065,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,  1266,
       0,  1066,     0,     0,  1267,   130,   131,     0,   132,   133,
     134,  1268,   136,   137,   138,   139,  1067,  1269,  1068,  1069,
       0,   144,   145,   146,   147,   148,   149,  1070,   790,   150,
     151,   152,   153,  1071,  1072,   156,     0,   157,   158,   159,
     160,   791,     0,  1270,     0,  1271,   164,   165,   166,   167,
     168,  1272,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,  1273,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,  1074,   191,   192,  1075,   194,  1076,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,  1077,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,  1078,   222,   223,   224,   225,   226,
     227,   793,  1079,   229,     0,   230,   231,  1080,   233,     0,
     234,     0,   235,  1275,     0,  1276,   238,   239,  1277,  1278,
     242,     0,   243,     0,  1081,  1082,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,  1279,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,  1280,   269,   270,   271,   272,   273,   274,  1083,  1084,
       0,  1085,     0,   278,  1281,  1282,   281,  1283,   283,   284,
     285,   286,   287,   288,     0,     0,   289,  1284,   291,  1285,
       0,   293,   294,   295,   296,   297,   298,   299,   300,  1286,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1087,  1287,  1088,   325,   326,   327,   328,  1089,   329,   330,
    1288,   332,  1090,   795,   334,  1091,   336,   337,   338,     0,
     339,   340,     0,     0,  1092,   342,   343,     0,     0,   344,
     345,   346,  1289,   348,  1290,   797,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   798,  1291,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,  1093,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,  1292,   404,   405,   406,
    1094,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,  1293,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,  1294,   431,   432,  1095,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,  1295,   448,   800,     0,     0,   450,
     451,     0,   452,  1296,   454,   455,   456,   457,   458,     0,
     459,  1096,  1097,     0,     0,   462,   463,   801,   465,   802,
    1098,   467,   468,  1297,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,  1099,   489,     0,   490,
    1299,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,  1100,     0,     0,     0,     0,     0,
       0,  1101,  1102,  1103,     0,     0,     0,     0,  1104,     0,
    1105,  2377,  1056,  1057,  1058,  1059,     0,  1264,  1060,   821,
    1061,  1062,  1063,  1064,  1065,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,  1266,     0,  1066,     0,     0,  1267,   130,   131,     0,
     132,   133,   134,  1268,   136,   137,   138,   139,  1067,  1269,
    1068,  1069,     0,   144,   145,   146,   147,   148,   149,  1070,
     790,   150,   151,   152,   153,  1071,  1072,   156,     0,   157,
     158,   159,   160,   791,     0,  1270,     0,  1271,   164,   165,
     166,   167,   168,  1272,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,  1273,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,  1074,   191,   192,  1075,
     194,  1076,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
    1077,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,  1078,   222,   223,   224,
     225,   226,   227,   793,  1079,   229,     0,   230,   231,  1080,
     233,     0,   234,     0,   235,  1275,     0,  1276,   238,   239,
    1277,  1278,   242,     0,   243,     0,  1081,  1082,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,  1279,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,  1280,   269,   270,   271,   272,   273,   274,
    1083,  1084,     0,  1085,     0,   278,  1281,  1282,   281,  1283,
     283,   284,   285,   286,   287,   288,     0,     0,   289,  1284,
     291,  1285,     0,   293,   294,   295,   296,   297,   298,   299,
     300,  1286,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,  1087,  1287,  1088,   325,   326,   327,   328,  1089,
     329,   330,  1288,   332,  1090,   795,   334,  1091,   336,   337,
     338,     0,   339,   340,     0,     0,  1092,   342,   343,     0,
       0,   344,   345,   346,  1289,   348,  1290,   797,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   798,  1291,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,  1093,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,  1292,   404,
     405,   406,  1094,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,  1293,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,  1294,   431,
     432,  1095,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,  1295,   448,   800,     0,
       0,   450,   451,     0,   452,  1296,   454,   455,   456,   457,
     458,     0,   459,  1096,  1097,     0,     0,   462,   463,   801,
     465,   802,  1098,   467,   468,  1297,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,  1099,   489,
       0,   490,  1299,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,  1100,     0,     0,     0,
       0,     0,     0,  1101,  1102,  1103,     0,     0,     0,     0,
    1104,     0,  1105,  3150,  1056,  1057,  1058,  1059,     0,   117,
    1060,   821,  1061,  1062,  1063,  1064,  1065,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,     0,     0,  1066,     0,     0,   129,   130,
     131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
    1067,   141,  1068,  1069,     0,   144,   145,   146,   147,   148,
     149,  1070,   790,   150,   151,   152,   153,  1071,  1072,   156,
       0,   157,   158,   159,   160,   791,     0,   792,     0,  1073,
     164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,  1074,   191,
     192,  1075,   194,  1076,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,  1077,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,  1078,   222,
     223,   224,   225,   226,   227,   793,  1079,   229,     0,   230,
     231,  1080,   233,     0,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,     0,   243,     0,  1081,  1082,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
     273,   274,  1083,  1084,     0,  1085,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
     298,   299,   300,  1086,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,  1087,   323,  1088,   325,   326,   327,
     328,  1089,   329,   330,   331,   332,  1090,   795,   334,  1091,
     336,   337,   338,     0,   339,   340,     0,     0,  1092,   342,
     343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,  1093,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
     403,   404,   405,   406,  1094,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
     430,   431,   432,  1095,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
     456,   457,   458,     0,   459,  1096,  1097,     0,     0,   462,
     463,   801,   465,   802,  1098,   467,   468,   803,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
    1099,   489,     0,   490,   491,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,  1100,     0,
       0,     0,     0,     0,     0,  1101,  1102,  1103,     0,     0,
       0,     0,  1104,     0,  1105,  2091,  2684,  1056,  1057,  1058,
    1059,     0,   117,  1060,   821,  1061,  1062,  1063,  1064,  1065,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,  1066,     0,
       0,   129,   130,   131,     0,   132,   133,   134,   135,   136,
     137,   138,   139,  1067,   141,  1068,  1069,     0,   144,   145,
     146,   147,   148,   149,  1070,   790,   150,   151,   152,   153,
    1071,  1072,   156,     0,   157,   158,   159,   160,   791,     0,
     792,     0,  1073,   164,   165,   166,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,  1074,   191,   192,  1075,   194,  1076,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,  1077,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,  1078,   222,   223,   224,   225,   226,   227,   793,  1079,
     229,     0,   230,   231,  1080,   233,     0,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,     0,   243,
       0,  1081,  1082,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,   268,   269,
     270,   271,   272,   273,   274,  1083,  1084,     0,  1085,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,     0,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   297,   298,   299,   300,  1086,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,  1087,   323,  1088,
     325,   326,   327,   328,  1089,   329,   330,   331,   332,  1090,
     795,   334,  1091,   336,   337,   338,     0,   339,   340,     0,
       0,  1092,   342,   343,     0,     0,   344,   345,   346,   347,
     348,   349,   797,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     798,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,  1093,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,   403,   404,   405,   406,  1094,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,   430,   431,   432,  1095,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   800,     0,     0,   450,   451,     0,   452,
     453,   454,   455,   456,   457,   458,     0,   459,  1096,  1097,
       0,     0,   462,   463,   801,   465,   802,  1098,   467,   468,
     803,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,  1099,   489,     0,   490,   491,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,  1100,     0,     0,     0,     0,     0,     0,  1101,  1102,
    1103,     0,     0,     0,     0,  1104,     0,  1105,  3312,  1056,
    1057,  1058,  1059,     0,   117,  1060,   821,  1061,  1062,  1063,
    1064,  1065,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
    1066,     0,     0,   129,   130,   131,     0,   132,   133,   134,
     135,   136,   137,   138,   139,  1067,   141,  1068,  1069,     0,
     144,   145,   146,   147,   148,   149,  1070,   790,   150,   151,
     152,   153,  1071,  1072,   156,     0,   157,   158,   159,   160,
     791,     0,   792,     0,  1073,   164,   165,   166,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,  1074,   191,   192,  1075,   194,  1076,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,  1077,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,  1078,   222,   223,   224,   225,   226,   227,
     793,  1079,   229,     0,   230,   231,  1080,   233,     0,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
       0,   243,     0,  1081,  1082,   246,   247,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
     268,   269,   270,   271,   272,   273,   274,  1083,  1084,     0,
    1085,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,     0,   289,   290,   291,   292,     0,
     293,   294,   295,   296,   297,   298,   299,   300,  1086,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,  1087,
     323,  1088,   325,   326,   327,   328,  1089,   329,   330,   331,
     332,  1090,   795,   334,  1091,   336,   337,   338,     0,   339,
     340,     0,     0,  1092,   342,   343,     0,     0,   344,   345,
     346,   347,   348,   349,   797,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   798,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,  1093,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,   403,   404,   405,   406,  1094,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,   432,  1095,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   800,     0,     0,   450,   451,
       0,   452,   453,   454,   455,   456,   457,   458,     0,   459,
    1096,  1097,     0,     0,   462,   463,   801,   465,   802,  1098,
     467,   468,   803,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,  1099,   489,     0,   490,   491,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,  1100,     0,     0,     0,     0,     0,     0,
    1101,  1102,  1103,     0,     0,     0,     0,  1104,     0,  1105,
    1056,  1057,  1058,  1059,     0,   117,  1060,   821,  1061,  1062,
    1063,  1064,  1065,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,  1066,     0,     0,   129,   130,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,  1067,   141,  1068,  1069,
       0,   144,   145,   146,   147,   148,   149,  1070,   790,   150,
     151,   152,   153,  1071,  1072,   156,     0,   157,   158,   159,
     160,   791,     0,   792,     0,  1073,   164,   165,   166,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,  1074,   191,   192,  1075,   194,  1076,
     195,     0,   196,   197,   198,   199,   200,   201,    14,    15,
     202,   203,   204,   205,     0,     0,   206,   207,  1077,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,  1078,   222,   223,   224,   225,   226,
     227,   793,  1079,   229,     0,   230,   231,  1080,   233,     0,
     234,     0,   235,   236,    23,   237,   238,   239,   240,   241,
     242,     0,   243,     0,  1081,  1082,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,   268,   269,   270,   271,   272,   273,   274,  1083,  1084,
       0,  1085,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,     0,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   297,   298,   299,   300,  1086,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1087,   323,  1088,   325,   326,   327,   328,  1089,   329,   330,
     331,   332,  1090,   795,   334,  1091,   336,   337,   338,     0,
     339,   340,     0,     0,  1092,   342,   343,     0,     0,   344,
     345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    26,    27,    28,
       0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,  1093,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
    1094,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    33,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    35,   430,   431,   432,  1095,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   800,    37,     0,   450,
     451,    38,   452,   453,   454,   455,   456,   457,   458,     0,
     459,  1096,  1097,     0,     0,   462,   463,   801,   465,   802,
    1098,   467,   468,   803,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,    40,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   804,  1099,   489,     0,   490,
     491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,    44,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,  1100,     0,    45,     0,     0,     0,
       0,  1101,  1102,  1103,     0,     0,     0,     0,  1104,     0,
    1105,  1056,  1057,  1058,  1059,     0,   117,  1060,   821,  1061,
    1062,  1063,  1064,  1065,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,  1066,     0,     0,   129,   130,   131,     0,   132,
     133,   134,   135,   136,   137,   138,   139,  1067,   141,  1068,
    1069,     0,   144,   145,   146,   147,   148,   149,  1070,   790,
     150,   151,   152,   153,  1071,  1072,   156,     0,   157,   158,
     159,   160,   791,     0,   792,     0,  1073,   164,   165,   166,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,  1074,   191,   192,  1075,   194,
    1076,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,  1077,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,  1078,   222,   223,   224,   225,
     226,   227,   793,  1079,   229,     0,   230,   231,  1080,   233,
       0,   234,     0,   235,   236,    23,   237,   238,   239,   240,
     241,   242,     0,   243,     0,  1081,  1082,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,   268,   269,   270,   271,   272,   273,   274,  1083,
    1084,     0,  1085,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,     0,   289,   290,   291,
     292,     0,   293,   294,   295,   296,   297,   298,   299,   300,
    1086,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,  1087,   323,  1088,   325,   326,   327,   328,  1089,   329,
     330,   331,   332,  1090,   795,   334,  1091,   336,   337,   338,
       0,   339,   340,     0,     0,  1092,   342,   343,     0,     0,
     344,   345,   346,   347,   348,   349,   797,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    26,    27,
      28,     0,   362,   363,   798,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,  1093,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,   403,   404,   405,
     406,  1094,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    33,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,   430,   431,   432,
    1095,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   800,     0,     0,
     450,   451,    38,   452,   453,   454,   455,   456,   457,   458,
       0,   459,  1096,  1097,     0,     0,   462,   463,   801,   465,
     802,  1098,   467,   468,   803,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,    40,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   804,  1099,   489,     0,
     490,   491,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,    44,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,  1100,     0,    45,     0,     0,
       0,     0,  1101,  1102,  1103,     0,     0,     0,     0,  1104,
       0,  1105,  1056,  1057,  1058,  1059,     0,   117,  1060,   821,
    1061,  1062,     0,  1064,  1065,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,  1066,     0,     0,   129,   130,   131,     0,
     132,   133,   134,   135,   136,   137,   138,   139,  1067,   141,
    1068,  1069,     0,   144,   145,   146,   147,   148,   149,  1070,
     790,   150,   151,   152,   153,  1071,  1072,   156,     0,   157,
     158,   159,   160,   791,     0,   792,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,  1074,   191,   192,  1075,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
      14,    15,   202,   203,   204,   205,     0,     0,   206,   207,
    1077,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,  1078,   222,   223,   224,
     225,   226,   227,   793,  1079,   229,     0,   230,   231,  1080,
     233,     0,   234,     0,   235,   236,    23,   237,   238,   239,
     240,   241,   242,     0,   243,     0,  1081,  1082,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
    1083,  1084,     0,  1085,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
     300,  1086,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,  1087,   323,  1088,   325,   326,   327,   328,     0,
     329,   330,   331,   332,  1090,   795,   334,  1091,   336,   337,
     338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
       0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    26,
      27,    28,     0,   362,   363,   798,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,  1093,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
     405,   406,  1094,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    33,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    35,   430,   431,
     432,  1095,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   800,    37,
       0,   450,   451,    38,   452,   453,   454,   455,   456,   457,
     458,     0,   459,  1096,  1097,     0,     0,   462,   463,   801,
     465,   802,  1098,   467,   468,   803,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,    40,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   804,  1099,   489,
       0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,    44,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,     0,     0,    45,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1104,     0,  1105,  1056,  1057,  1058,  1059,     0,   117,  1060,
     821,  1061,  1062,  1063,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,     0,     0,  1066,     0,     0,   129,   130,   131,
       0,   132,   133,   134,   135,   136,   137,   138,   139,  1067,
     141,  1068,  1069,  1447,   144,   145,   146,   147,   148,   149,
    1070,   790,   150,   151,   152,   153,  1071,  1072,   156,     0,
     157,   158,   159,   160,   791,     0,   792,     0,  1073,   164,
     165,   166,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,  1074,   191,   192,
    1075,   194,  1076,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,  1077,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,  1078,   222,   223,
     224,   225,   226,   227,   793,  1079,   229,     0,   230,   231,
    1080,   233,     0,   234,     0,   235,   236,  1448,   237,   238,
     239,   240,   241,   242,     0,   243,     0,  1081,  1082,   246,
     247,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,   268,   269,   270,   271,   272,   273,
     274,  1083,  1084,     0,  1085,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,  1449,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   297,   298,
     299,   300,  1086,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,  1087,   323,  1088,   325,   326,   327,   328,
    1089,   329,   330,   331,   332,  1090,   795,   334,  1091,   336,
     337,   338,     0,   339,   340,     0,     0,  1092,   342,   343,
       0,     0,   344,   345,   346,   347,   348,   349,   797,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   798,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,  1093,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,   403,
     404,   405,   406,  1094,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,   430,
     431,   432,  1095,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   800,
       0,     0,   450,   451,     0,   452,   453,   454,   455,   456,
     457,   458,     0,   459,  1096,  1097,     0,  1450,   462,   463,
     801,   465,   802,  1098,   467,   468,   803,   470,   471,   472,
     473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   487,  1099,
     489,     0,   490,   491,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,  1100,     0,     0,
       0,     0,     0,     0,  1101,  1102,  1103,     0,     0,     0,
       0,  1104,     0,  1105,  1056,  1057,  1058,  1059,     0,  1264,
    1060,   821,  1061,  1062,  1063,  1064,  1065,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,  1266,     0,  1066,     0,     0,  1267,   130,
     131,     0,   132,   133,   134,  1268,   136,   137,   138,   139,
    1067,  1269,  1068,  1069,     0,   144,   145,   146,   147,   148,
     149,  1070,   790,   150,   151,   152,   153,  1071,  1072,   156,
       0,   157,   158,   159,   160,   791,     0,  1270,     0,  1271,
     164,   165,   166,   167,   168,  1272,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,  1273,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,  1074,   191,
     192,  1075,   194,  1076,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,  1077,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,  1078,   222,
     223,   224,   225,   226,   227,   793,  1079,   229,     0,   230,
     231,  1080,   233,     0,   234,     0,   235,  1275,     0,  1276,
     238,   239,  1277,  1278,   242,     0,   243,     0,  1081,  1082,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
    1279,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,  1280,   269,   270,   271,   272,
     273,   274,  1083,  1084,     0,  1085,     0,   278,  1281,  1282,
     281,  1283,   283,   284,   285,   286,   287,   288,     0,     0,
     289,  1284,   291,  1285,     0,   293,   294,   295,   296,   297,
     298,   299,   300,  1286,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,  1087,  1287,  1088,   325,   326,   327,
     328,  1089,   329,   330,  1288,   332,  1090,   795,   334,  1091,
     336,   337,   338,     0,   339,   340,     0,     0,  1092,   342,
     343,     0,     0,   344,   345,   346,  1289,   348,  1290,   797,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   798,  1291,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,  1093,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
    1292,   404,   405,   406,  1094,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,  1293,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
    1294,   431,   432,  1095,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,  1295,   448,
     800,     0,     0,   450,   451,     0,   452,  1296,   454,   455,
     456,   457,   458,     0,   459,  1096,  1097,     0,     0,   462,
     463,   801,   465,   802,  1098,   467,   468,  1297,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
    1099,   489,  2323,   490,  1299,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,  1100,     0,
       0,     0,     0,     0,     0,  1101,  1102,  1103,     0,     0,
       0,     0,  1104,     0,  1105,  1056,  1057,  1058,  1059,     0,
     117,  1060,   821,  1061,  1062,  1063,  1064,  1065,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125, -1097,   126,   127,
     128,     0,     0,     0,     0, -1097,  1066,     0,     0,   129,
     130,   131,     0,   132,   133,   134,   135,   136,   137,   138,
     139,  1067,   141,  1068,  1069,     0,   144,   145,   146,   147,
     148,   149,  1070,   790,   150,   151,   152,   153,  1071,  1072,
     156,     0,   157,   158,   159,   160,   791,     0,   792,     0,
    1073,   164,   165,   166,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,  1074,
     191,   192,  1075,   194,  1076,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,  1077,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,  1078,
     222,   223,   224,   225,   226,   227,   793,  1079,   229,     0,
     230,   231,  1080,   233,     0,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,     0,   243,     0,  1081,
    1082,   246,   247,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,   268,   269,   270,   271,
     272,   273,   274,  1083,  1084,     0,  1085,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
       0,   289,   290,   291,   292,     0,   293,   294,   295,   296,
     297,   298,   299,   300,  1086,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,  1087,   323,  1088,   325,   326,
     327,   328,  1089,   329,   330,   331,   332,  1090,   795,   334,
    1091,   336,   337,   338,     0,   339,   340,     0,     0,  1092,
     342,   343,     0,     0,   344,   345,   346,   347,   348,   349,
     797,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   798,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,  1093,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,   403,   404,   405,   406,  1094,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,   430,   431,   432,  1095,   434, -1097,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   800,     0,     0,   450,   451,     0,   452,   453,   454,
     455,   456,   457,   458,     0,   459,  1096,  1097,     0,     0,
     462,   463,   801,   465,   802,  1098,   467,   468,   803,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     487,  1099,   489,     0,   490,   491,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,  1100,
       0,     0,     0,     0,     0,     0,  1101,  1102,  1103,     0,
       0,     0,     0,  1104,     0,  1105,  1056,  1057,  1058,  1059,
       0,  1264,  1060,   821,  1061,  1062,  1063,  1064,  1065,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,  1266,     0,  1066,     0,     0,
    1267,   130,   131,     0,   132,   133,   134,  1268,   136,   137,
     138,   139,  1067,  1269,  1068,  1069,     0,   144,   145,   146,
     147,   148,   149,  1070,   790,   150,   151,   152,   153,  1071,
    1072,   156,     0,   157,   158,   159,   160,   791,     0,  1270,
       0,  1271,   164,   165,   166,   167,   168,  1272,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,  1273,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
    1074,   191,   192,  1075,   194,  1076,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,  1077,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
    1078,   222,   223,   224,   225,   226,   227,   793,  1079,   229,
       0,   230,   231,  1080,   233,     0,   234,     0,   235,  1275,
       0,  1276,   238,   239,  1277,  1278,   242,     0,   243,     0,
    1081,  1082,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,  1279,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,  1280,   269,   270,
     271,   272,   273,   274,  1083,  1084,     0,  1085,     0,   278,
    1281,  1282,   281,  1283,   283,   284,   285,   286,   287,   288,
       0,     0,   289,  1284,   291,  1285,     0,   293,   294,   295,
     296,   297,   298,   299,   300,  1286,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,  1087,  1287,  1088,   325,
     326,   327,   328,  1089,   329,   330,  1288,   332,  1090,   795,
     334,  1091,   336,   337,   338,     0,   339,   340,     0,     0,
    1092,   342,   343,     0,     0,   344,   345,   346,  1289,   348,
    1290,   797,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   362,   363,   798,
    1291,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
    1093,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,  1292,   404,   405,   406,  1094,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,  1293,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,  1294,   431,   432,  1095,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
    1295,   448,   800,     0,     0,   450,   451,     0,   452,  1296,
     454,   455,   456,   457,   458,     0,   459,  1096,  1097,     0,
       0,   462,   463,   801,   465,   802,  1098,   467,   468,  1297,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
       0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   487,  1099,   489,     0,   490,  1299,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
    1100,     0,     0,     0,     0,     0,     0,  1101,  1102,  1103,
       0,     0,     0,     0,  1104,     0,  1105,  1056,  1057,  1058,
    1059,     0,   117,  1060,   821,  1061,  1062,  1063,  1064,  1065,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,  1718,
     126,   127,   128,     0,     0,     0,     0,     0,  1066,     0,
       0,   129,   130,   131,     0,   132,   133,   134,   135,   136,
     137,   138,   139,  1067,   141,  1068,  1069,     0,   144,   145,
     146,   147,   148,   149,  1070,   790,   150,   151,   152,   153,
    1071,  1072,   156,     0,   157,   158,   159,   160,   791,     0,
     792,     0,  1073,   164,   165,   166,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,  1074,   191,   192,  1075,   194,  1076,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,  1077,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,  1078,   222,   223,   224,   225,   226,   227,   793,  1079,
     229,     0,   230,   231,  1080,   233,     0,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,     0,   243,
       0,  1081,  1082,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,   268,   269,
     270,   271,   272,   273,   274,  1083,  1084,     0,  1085,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,     0,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   297,   298,   299,   300,  1086,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,  1087,   323,  1088,
     325,   326,   327,   328,  1089,   329,   330,   331,   332,  1090,
     795,   334,  1091,   336,   337,   338,     0,   339,   340,     0,
       0,  1092,   342,   343,     0,     0,   344,   345,   346,   347,
     348,   349,   797,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     798,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,  1093,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,   403,   404,   405,   406,  1094,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,   430,   431,   432,  1095,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   800,     0,     0,   450,   451,     0,   452,
     453,   454,   455,   456,   457,   458,     0,   459,  1096,  1097,
       0,     0,   462,   463,   801,   465,   802,  1098,   467,   468,
     803,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,  1099,   489,     0,   490,   491,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,  1100,     0,     0,     0,     0,     0,     0,  1101,  1102,
    1103,     0,     0,     0,     0,  1104,     0,  1105,  1056,  1057,
    1058,  1059,     0,   117,  1733,   821,  1061,  1062,  1063,  1734,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
    1735,   126,   127,   128,     0,     0,     0,     0,     0,  1066,
       0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
     136,   137,   138,   139,  1067,   141,  1068,  1069,     0,   144,
     145,   146,   147,   148,   149,  1070,   790,   150,   151,   152,
     153,  1071,  1072,   156,     0,   157,   158,   159,   160,   791,
       0,   792,     0,  1073,   164,   165,   166,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,  1074,   191,   192,  1075,   194,  1076,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,  1077,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,  1078,   222,   223,   224,   225,   226,   227,   793,
    1079,   229,     0,   230,   231,  1080,   233,     0,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,     0,
     243,     0,  1081,  1082,   246,   247,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
     269,   270,   271,   272,   273,   274,  1083,  1084,     0,  1085,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,     0,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   297,   298,   299,   300,  1086,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,  1087,   323,
    1088,   325,   326,   327,   328,  1089,   329,   330,   331,   332,
    1090,   795,   334,  1091,   336,   337,   338,     0,   339,   340,
       0,     0,  1092,   342,   343,     0,     0,   344,   345,   346,
     347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,  1093,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,   403,   404,   405,   406,  1094,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,   430,   431,   432,  1095,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   800,     0,     0,   450,   451,     0,
     452,   453,   454,   455,   456,   457,   458,     0,   459,  1096,
    1097,     0,     0,   462,   463,   801,   465,   802,  1098,   467,
     468,   803,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,  1099,   489,     0,   490,   491,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,  1100,     0,     0,     0,     0,     0,     0,  1101,
    1102,  1103,     0,     0,     0,     0,  1104,     0,  1105,  1056,
    1057,  1058,  1059,     0,   117,  1060,   821,  1061,  1062,  1063,
    1064,  1065,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
    1066,     0,     0,   129,   130,   131,     0,   132,   133,   134,
     135,   136,   137,   138,   139,  1067,   141,  1068,  1069,     0,
     144,   145,   146,   147,   148,   149,  1070,   790,   150,   151,
     152,   153,  1071,  1072,   156,     0,   157,   158,   159,   160,
     791,     0,   792,     0,  1073,   164,   165,   166,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,  1074,   191,   192,  1075,   194,  1076,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,  1077,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,  1078,   222,   223,   224,   225,   226,   227,
     793,  1079,   229,     0,   230,   231,  1080,   233,     0,   234,
       0,   235,   236,  1448,   237,   238,   239,   240,   241,   242,
       0,   243,     0,  1081,  1082,   246,   247,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
     268,   269,   270,   271,   272,   273,   274,  1083,  1084,     0,
    1085,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,     0,   289,   290,   291,   292,     0,
     293,   294,   295,   296,   297,   298,   299,   300,  1086,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,  1087,
     323,  1088,   325,   326,   327,   328,  1089,   329,   330,   331,
     332,  1090,   795,   334,  1091,   336,   337,   338,     0,   339,
     340,     0,     0,  1092,   342,   343,     0,     0,   344,   345,
     346,   347,   348,   349,   797,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   798,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,  1093,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,   403,   404,   405,   406,  1094,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,   432,  1095,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   800,     0,     0,   450,   451,
       0,   452,   453,   454,   455,   456,   457,   458,     0,   459,
    1096,  1097,     0,     0,   462,   463,   801,   465,   802,  1098,
     467,   468,   803,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,  1099,   489,     0,   490,   491,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,  1100,     0,     0,     0,     0,     0,     0,
    1101,  1102,  1103,     0,     0,     0,     0,  1104,     0,  1105,
    1056,  1057,  1058,  1059,     0,   117,  1060,   821,  1061,  1062,
    1063,  1064,  1065,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,  1066,     0,     0,   129,   130,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,  1067,   141,  1068,  1069,
       0,   144,   145,   146,   147,   148,   149,  1070,   790,   150,
     151,   152,   153,  1071,  1072,   156,     0,   157,   158,   159,
     160,   791,     0,   792,     0,  1073,   164,   165,   166,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,  1074,   191,   192,  1075,   194,  1076,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,  1077,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,  1078,   222,   223,   224,   225,   226,
     227,   793,  1079,   229,     0,   230,   231,  1080,   233,     0,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,     0,   243,     0,  1081,  1082,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,   268,   269,   270,   271,   272,   273,   274,  1083,  1084,
       0,  1085,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,     0,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   297,   298,   299,   300,  1086,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1087,   323,  1088,   325,   326,   327,   328,  1089,   329,   330,
     331,   332,  1090,   795,   334,  1091,   336,   337,   338,     0,
     339,   340,     0,     0,  1092,   342,   343,     0,     0,   344,
     345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,  1093,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
    1094,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,   430,   431,   432,  1095,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
     451,  2741,   452,   453,   454,   455,   456,   457,   458,     0,
     459,  1096,  1097,     0,     0,   462,   463,   801,   465,   802,
    1098,   467,   468,   803,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,  1099,   489,     0,   490,
     491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,  1100,     0,     0,     0,     0,     0,
       0,  1101,  1102,  1103,     0,     0,     0,     0,  1104,     0,
    1105,  1056,  1057,  1058,  1059,     0,   117,  1060,   821,  1061,
    1062,  1063,  1064,  1065,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,  1066,     0,     0,   129,   130,   131,     0,   132,
     133,   134,   135,   136,   137,   138,   139,  1067,   141,  1068,
    1069,     0,   144,   145,   146,   147,   148,   149,  1070,   790,
     150,   151,   152,   153,  1071,  1072,   156,     0,   157,   158,
     159,   160,   791,     0,   792,     0,  1073,   164,   165,   166,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,  1074,   191,   192,  1075,   194,
    1076,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,  1077,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,  1078,   222,   223,   224,   225,
     226,   227,   793,  1079,   229,     0,   230,   231,  1080,   233,
       0,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,     0,   243,     0,  1081,  1082,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,   268,   269,   270,   271,   272,   273,   274,  1083,
    1084,     0,  1085,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,     0,   289,   290,   291,
     292,     0,   293,   294,   295,   296,   297,   298,   299,   300,
    1086,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,  1087,   323,  1088,   325,   326,   327,   328,  1089,   329,
     330,   331,   332,  1090,   795,   334,  1091,   336,   337,   338,
       0,   339,   340,     0,     0,  1092,   342,   343,     0,     0,
     344,   345,   346,   347,   348,   349,   797,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   798,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,  1093,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,   403,   404,   405,
     406,  1094,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,   430,   431,   432,
    1095,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   800,     0,     0,
     450,   451,     0,   452,   453,   454,   455,   456,   457,   458,
       0,   459,  1096,  1097,     0,     0,   462,   463,   801,   465,
     802,  1098,   467,   468,   803,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,  1099,   489,     0,
     490,   491,   492,   493,   494,   495,   496,   497,   498,     0,
    2869,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,  1100,     0,     0,     0,     0,
       0,     0,  1101,  1102,  1103,     0,     0,     0,     0,  1104,
       0,  1105,  1056,  1057,  1058,  1059,     0,   117,  1060,   821,
    1061,  1062,  1063,  1064,  1065,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,  3087,   126,   127,   128,     0,     0,
       0,     0,     0,  1066,     0,     0,   129,   130,   131,     0,
     132,   133,   134,   135,   136,   137,   138,   139,  1067,   141,
    1068,  1069,     0,   144,   145,   146,   147,   148,   149,  1070,
     790,   150,   151,   152,   153,  1071,  1072,   156,     0,   157,
     158,   159,   160,   791,     0,   792,     0,  1073,   164,   165,
     166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,   179,   180,  3088,   182,   183,
     184,   185,   186,   187,   188,   189,  1074,   191,   192,  1075,
     194,  1076,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
    1077,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,  1078,   222,   223,   224,
     225,   226,   227,   793,  1079,   229,     0,   230,   231,  1080,
     233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,     0,   243,     0,  3089,  1082,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
    1083,  1084,     0,  1085,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
     300,  1086,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,  1087,   323,  1088,   325,   326,   327,   328,  1089,
     329,   330,   331,   332,  1090,   795,   334,  1091,   336,   337,
     338,     0,   339,   340,     0,     0,  1092,   342,   343,     0,
       0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,  1093,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
     405,  3090,  1094,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
     432,  1095,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
       0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
     458,     0,   459,  1096,  1097,     0,     0,   462,   463,   801,
     465,   802,  1098,   467,   468,   803,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,  1099,   489,
       0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,  1100,     0,     0,     0,
       0,     0,     0,  1101,  1102,  1103,     0,     0,     0,     0,
    1104,     0,  3091,  1056,  1057,  1058,  1059,     0,   117,  1060,
     821,  1061,  1062,  1063,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,     0,     0,  1066,     0,     0,   129,   130,   131,
       0,   132,   133,   134,   135,   136,   137,   138,   139,  1067,
     141,  1068,  1069,     0,   144,   145,   146,   147,   148,   149,
    1070,   790,   150,   151,   152,   153,  1071,  1072,   156,     0,
     157,   158,   159,   160,   791,     0,   792,     0,  1073,   164,
     165,   166,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,  1074,   191,   192,
    1075,   194,  1076,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,  1077,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,  1078,   222,   223,
     224,   225,   226,   227,   793,  1079,   229,     0,   230,   231,
    1080,   233,     0,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,     0,   243,     0,  1081,  1082,   246,
     247,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,   268,   269,   270,   271,   272,   273,
     274,  1083,  1084,     0,  1085,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,     0,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   297,   298,
     299,   300,  1086,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,  1087,   323,  1088,   325,   326,   327,   328,
    1089,   329,   330,   331,   332,  1090,   795,   334,  1091,   336,
     337,   338,     0,   339,   340,     0,     0,  1092,   342,   343,
       0,     0,   344,   345,   346,   347,   348,   349,   797,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   798,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,  1093,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,   403,
     404,   405,   406,  1094,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,   430,
     431,   432,  1095,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   800,
       0,     0,   450,   451,     0,   452,   453,   454,   455,   456,
     457,   458,     0,   459,  1096,  1097,     0,     0,   462,   463,
     801,   465,   802,  1098,   467,   468,   803,   470,   471,   472,
     473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   487,  1099,
     489,     0,   490,   491,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,  1100,     0,     0,
       0,     0,     0,     0,  1101,  1102,  1103,     0,     0,     0,
       0,  1104,     0,  1105,  1056,  1057,  1058,  1059,     0,   117,
    1060,   821,  1061,  1062,  1063,  1064,  1065,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,     0,     0,  1066,     0,     0,   129,   130,
     131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
    1067,   141,  1068,  1069,     0,   144,   145,   146,   147,   148,
     149,  1070,   790,   150,   151,   152,   153,  1071,  1072,   156,
       0,   157,   158,   159,   160,   791,     0,   792,     0,  1073,
     164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,  1074,   191,
     192,  1075,   194,  1076,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,  1077,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,  1078,   222,
     223,   224,   225,   226,   227,   793,  1079,   229,     0,   230,
     231,  1080,   233,     0,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,     0,   243,     0,  1081,  1082,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
     273,   274,  1083,  1084,     0,  1085,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
     298,   299,   300,  1086,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,  1087,   323,  1088,   325,   326,   327,
     328,  1089,   329,   330,   331,   332,  1090,   795,   334,  1091,
     336,   337,   338,     0,   339,   340,     0,     0,  1092,   342,
     343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,  1093,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
     403,   404,   405,   406,  1094,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
     430,   431,   432,  1095,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
     456,   457,   458,     0,   459,  1096,  1097,     0,     0,   462,
     463,   801,   465,   802,  1098,   467,   468,   803,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
    1099,   489,     0,   490,   491,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,  1100,     0,
       0,     0,     0,     0,     0,  1738,  1739,  1103,     0,     0,
       0,     0,  1104,     0,  1105,  1056,  1057,  1058,  1059,     0,
     117,  2234,   821,  1061,  1062,  1063,  1064,  1065,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
     128,     0,     0,     0,     0,     0,  1066,     0,     0,   129,
     130,   131,     0,   132,   133,   134,   135,   136,   137,   138,
     139,  1067,   141,  1068,  1069,     0,   144,   145,   146,   147,
     148,   149,  1070,   790,   150,   151,   152,   153,  1071,  1072,
     156,     0,   157,   158,   159,   160,   791,     0,   792,     0,
    1073,   164,   165,   166,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,  1074,
     191,   192,  1075,   194,  1076,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,  1077,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,  1078,
     222,   223,   224,   225,   226,   227,   793,  1079,   229,     0,
     230,   231,  1080,   233,     0,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,     0,   243,     0,  1081,
    1082,   246,   247,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,   268,   269,   270,   271,
     272,   273,   274,  1083,  1084,     0,  1085,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
       0,   289,   290,   291,   292,     0,   293,   294,   295,   296,
     297,   298,   299,   300,  1086,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,  1087,   323,  1088,   325,   326,
     327,   328,  1089,   329,   330,   331,   332,  1090,   795,   334,
    1091,   336,   337,   338,     0,   339,   340,     0,     0,  1092,
     342,   343,     0,     0,   344,   345,   346,   347,   348,   349,
     797,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   798,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,  1093,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,   403,   404,   405,   406,  1094,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,   430,   431,   432,  1095,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   800,     0,     0,   450,   451,     0,   452,   453,   454,
     455,   456,   457,   458,     0,   459,  1096,  1097,     0,     0,
     462,   463,   801,   465,   802,  1098,   467,   468,   803,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     487,  1099,   489,     0,   490,   491,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,  1100,
       0,     0,     0,     0,     0,     0,  1101,  1102,  1103,     0,
       0,     0,     0,  1104,     0,  1105,  1056,  1057,  1058,  1059,
       0,   117,  1060,   821,  1061,  1062,  1063,  1064,  1065,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,  1066,     0,     0,
     129,   130,   131,     0,   132,   133,   134,   135,   136,   137,
     138,   139,  1067,   141,  1068,  1069,     0,   144,   145,   146,
     147,   148,   149,  1070,   790,   150,   151,   152,   153,  1071,
    1072,   156,     0,   157,   158,   159,   160,   791,     0,   792,
       0,  1073,   164,   165,   166,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
    1074,   191,   192,  1075,   194,  1076,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,  1077,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
    1078,   222,   223,   224,   225,   226,   227,   793,  1079,   229,
       0,   230,   231,  1080,   233,     0,   234,     0,   235,   236,
       0,   237,   238,   239,   240,   241,   242,     0,   243,     0,
    1081,  1082,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,   268,   269,   270,
     271,   272,   273,   274,  1083,  1084,     0,  1085,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,     0,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   297,   298,   299,   300,  1086,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,  1087,   323,  1088,   325,
     326,   327,   328,  1089,   329,   330,   331,   332,  1090,   795,
     334,  1091,   336,   337,   338,     0,   339,   340,     0,     0,
    1092,   342,   343,     0,     0,   344,   345,   346,   347,   348,
     349,   797,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   362,   363,   798,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
    1093,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,   403,   404,   405,   406,  1094,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,   430,   431,   432,  1095,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   800,     0,     0,   450,   451,     0,   452,   453,
     454,   455,   456,   457,   458,     0,   459,  1096,  1097,     0,
       0,   462,   463,   801,   465,   802,  1098,   467,   468,   803,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
       0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   487,  1099,   489,     0,   490,   491,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
    1100,     0,     0,     0,     0,     0,     0,  1101,  2317,  1103,
       0,     0,     0,     0,  1104,     0,  1105,  1056,  1057,  1058,
    1059,     0,   117,  1060,   821,  1061,  1062,  1063,  1064,  1065,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,  1066,     0,
       0,   129,   130,   131,     0,   132,   133,   134,   135,   136,
     137,   138,   139,  1067,   141,  1068,  1069,     0,   144,   145,
     146,   147,   148,   149,  1070,   790,   150,   151,   152,   153,
    1071,  1072,   156,     0,   157,   158,   159,   160,   791,     0,
     792,     0,  1073,   164,   165,   166,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,  1074,   191,   192,  1075,   194,  1076,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,  1077,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,  1078,   222,   223,   224,   225,   226,   227,   793,  1079,
     229,     0,   230,   231,  1080,   233,     0,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,     0,   243,
       0,  1081,  1082,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,   268,   269,
     270,   271,   272,   273,   274,  1083,  1084,     0,  1085,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,     0,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   297,   298,   299,   300,  1086,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,  1087,   323,  1088,
     325,   326,   327,   328,  1089,   329,   330,   331,   332,  1090,
     795,   334,  1091,   336,   337,   338,     0,   339,   340,     0,
       0,  1092,   342,   343,     0,     0,   344,   345,   346,   347,
     348,   349,   797,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     798,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,  1093,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,   403,   404,   405,   406,  1094,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,   430,   431,   432,  1095,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   800,     0,     0,   450,   451,     0,   452,
     453,   454,   455,   456,   457,   458,     0,   459,  1096,  1097,
       0,     0,   462,   463,   801,   465,   802,  1098,   467,   468,
     803,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,  1099,   489,     0,   490,   491,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,  1100,     0,     0,     0,     0,     0,     0,  1101,  1102,
    1103,     0,     0,     0,     0,  1104,     0,  2538,  1056,  1057,
    1058,  1059,     0,   117,  1060,   821,  1061,  1062,  1063,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,     0,     0,  1066,
       0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
     136,   137,   138,   139,  1067,   141,  1068,  1069,     0,   144,
     145,   146,   147,   148,   149,  1070,   790,   150,   151,   152,
     153,  1071,  1072,   156,     0,   157,   158,   159,   160,   791,
       0,   792,     0,  1073,   164,   165,   166,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,  1074,   191,   192,  1075,   194,  1076,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,  1077,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,  1078,   222,   223,   224,   225,   226,   227,   793,
    1079,   229,     0,   230,   231,  1080,   233,     0,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,     0,
     243,     0,  1081,  1082,   246,   247,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
     269,   270,   271,   272,   273,   274,  1083,  1084,     0,  1085,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,     0,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   297,   298,   299,   300,  1086,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,  1087,   323,
    1088,   325,   326,   327,   328,  1089,   329,   330,   331,   332,
    1090,   795,   334,  1091,   336,   337,   338,     0,   339,   340,
       0,     0,  1092,   342,   343,     0,     0,   344,   345,   346,
     347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,  1093,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,   403,   404,   405,   406,  1094,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,   430,   431,   432,  1095,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   800,     0,     0,   450,   451,     0,
     452,   453,   454,   455,   456,   457,   458,     0,   459,  1096,
    1097,     0,     0,   462,   463,   801,   465,   802,  1098,   467,
     468,   803,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,  1099,   489,     0,   490,   491,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,  1100,     0,     0,     0,     0,     0,     0,  1101,
    3148,  1103,     0,     0,     0,     0,  1104,     0,  1105,  1056,
    1057,  1058,  1059,     0,   117,  1060,   821,  1061,  1062,  1063,
    1064,  1065,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
    1066,     0,     0,   129,   130,   131,     0,   132,   133,   134,
     135,   136,   137,   138,   139,  1067,   141,  1068,  1069,     0,
     144,   145,   146,   147,   148,   149,  1070,   790,   150,   151,
     152,   153,  1071,  1072,   156,     0,   157,   158,   159,   160,
     791,     0,   792,     0,  1073,   164,   165,   166,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,   179,   180,  3088,   182,   183,   184,   185,   186,
     187,   188,   189,  1074,   191,   192,  1075,   194,  1076,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,  1077,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,  1078,   222,   223,   224,   225,   226,   227,
     793,  1079,   229,     0,   230,   231,  1080,   233,     0,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
       0,   243,     0,  3089,  1082,   246,   247,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
     268,   269,   270,   271,   272,   273,   274,  1083,  1084,     0,
    1085,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,     0,   289,   290,   291,   292,     0,
     293,   294,   295,   296,   297,   298,   299,   300,  1086,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,  1087,
     323,  1088,   325,   326,   327,   328,  1089,   329,   330,   331,
     332,  1090,   795,   334,  1091,   336,   337,   338,     0,   339,
     340,     0,     0,  1092,   342,   343,     0,     0,   344,   345,
     346,   347,   348,   349,   797,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   798,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,  1093,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,   403,   404,   405,  3090,  1094,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,   432,  1095,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   800,     0,     0,   450,   451,
       0,   452,   453,   454,   455,   456,   457,   458,     0,   459,
    1096,  1097,     0,     0,   462,   463,   801,   465,   802,  1098,
     467,   468,   803,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,  1099,   489,     0,   490,   491,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,  1100,     0,     0,     0,     0,     0,     0,
    1101,  1102,  1103,     0,     0,     0,     0,  1104,     0,  3091,
    1056,  1057,  1058,  1059,     0,   117,  1060,   821,  1061,  1062,
    1063,  1064,  1065,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,  1066,     0,     0,   129,   130,   131,     0,   132,   133,
     134,   135,   136,   137,   138,  3556,  1067,   141,  1068,  1069,
       0,   144,   145,   146,   147,   148,   149,  1070,   790,   150,
     151,   152,   153,  1071,  1072,   156,     0,   157,   158,   159,
     160,   791,     0,   792,     0,  1073,   164,   165,   166,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,   179,   180,   181,  3557,   183,   184,   185,
     186,   187,   188,   189,  1074,   191,   192,  1075,   194,  1076,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,  1077,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,  1078,   222,   223,   224,   225,   226,
     227,   793,  1079,   229,     0,   230,   231,  1080,   233,     0,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,     0,   243,     0,  1081,  1082,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,   268,   269,   270,   271,   272,   273,   274,  1083,  1084,
       0,  1085,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,     0,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   297,   298,   299,   300,  1086,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1087,   323,  1088,   325,   326,   327,   328,  1089,   329,   330,
     331,   332,  1090,   795,   334,  1091,   336,   337,   338,     0,
     339,   340,     0,     0,  1092,   342,   343,     0,     0,   344,
     345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,  1093,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
    1094,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,   430,   431,   432,  1095,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
     451,     0,   452,   453,   454,   455,   456,   457,   458,     0,
     459,  1096,  1097,     0,     0,   462,   463,   801,   465,   802,
    1098,   467,   468,   803,   470,   471,  3558,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,  1099,   489,     0,   490,
     491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,  1100,     0,     0,     0,     0,     0,
       0,  1101,  1102,  1103,     0,     0,     0,     0,  1104,     0,
    1105,  1056,  1057,  1058,  1059,     0,   117,  1060,   821,  1061,
    1062,  1063,  1064,  1065,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,  1066,     0,     0,   129,   130,   131,     0,   132,
     133,   134,   135,   136,   137,   138,   139,  1067,   141,  1068,
    1069,     0,   144,   145,   146,   147,   148,   149,  1070,   790,
     150,   151,   152,   153,  1071,  1072,   156,     0,   157,   158,
     159,   160,   791,     0,   792,     0,  1073,   164,   165,   166,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,   179,   180,   181,  3557,   183,   184,
     185,   186,   187,   188,   189,  1074,   191,   192,  1075,   194,
    1076,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,  1077,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,  1078,   222,   223,   224,   225,
     226,   227,   793,  1079,   229,     0,   230,   231,  1080,   233,
       0,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,     0,   243,     0,  1081,  1082,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,   268,   269,   270,   271,   272,   273,   274,  1083,
    1084,     0,  1085,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,     0,   289,   290,   291,
     292,     0,   293,   294,   295,   296,   297,   298,   299,   300,
    1086,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,  1087,   323,  1088,   325,   326,   327,   328,  1089,   329,
     330,   331,   332,  1090,   795,   334,  1091,   336,   337,   338,
       0,   339,   340,     0,     0,  1092,   342,   343,     0,     0,
     344,   345,   346,   347,   348,   349,   797,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   798,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,  1093,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,   403,   404,   405,
     406,  1094,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,   430,   431,   432,
    1095,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   800,     0,     0,
     450,   451,     0,   452,   453,   454,   455,   456,   457,   458,
       0,   459,  1096,  1097,     0,     0,   462,   463,   801,   465,
     802,  1098,   467,   468,   803,   470,   471,  3558,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,  1099,   489,     0,
     490,   491,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,  1100,     0,     0,     0,     0,
       0,     0,  1101,  1102,  1103,     0,     0,     0,     0,  1104,
       0,  1105,  1056,  1057,  1058,  1059,     0,   117,  1060,   821,
    1061,  1062,  1063,  1064,  1065,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,  1066,     0,     0,   129,   130,   131,     0,
     132,   133,   134,   135,   136,   137,   138,   139,  1067,   141,
    1068,  1069,     0,   144,   145,   146,   147,   148,   149,  1070,
     790,   150,   151,   152,   153,  1071,  1072,   156,     0,   157,
     158,   159,   160,   791,     0,   792,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,  1074,   191,   192,  1075,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
    1077,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,  1078,   222,   223,   224,
     225,   226,   227,   793,  1079,   229,     0,   230,   231,  1080,
     233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,     0,   243,     0,  1081,  1082,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
    1083,  1084,     0,  1085,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
     300,  1086,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,  1087,   323,  1088,   325,   326,   327,   328,     0,
     329,   330,   331,   332,  1090,   795,   334,  1091,   336,   337,
     338,     0,   339,   340,     0,     0,  1092,   342,   343,     0,
       0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,  1093,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
     405,   406,  1094,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
     432,  1095,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
       0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
     458,     0,   459,  1096,  1097,     0,     0,   462,   463,   801,
     465,   802,  1098,   467,   468,   803,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,  1099,   489,
       0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,     0,     0,     0,     0,
       0,     0,     0,  1434,  1435,     0,     0,     0,     0,     0,
    1104,     0,  1105,  1056,  1057,  1058,  1059,     0,   117,  1060,
     821,  1061,  1062,  1063,  1064,  1065,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,     0,     0,  1066,     0,     0,   129,   130,   131,
       0,   132,   133,   134,   135,   136,   137,   138, -2101,  1067,
     141,  1068,  1069,     0,   144,   145,   146,   147,   148,   149,
    1070,   790,   150,   151,   152,   153,  1071,  1072,   156,     0,
     157,   158,   159,   160,   791,     0,   792,     0,  1073,   164,
     165,   166,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,   179,   180,   181,  3557,
     183,   184,   185,   186,   187,   188,   189,  1074,   191,   192,
    1075,   194,  1076,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,  1077,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,  1078,   222,   223,
     224,   225,   226,   227,   793,  1079,   229,     0,   230,   231,
    1080,   233,     0,   234,     0,   235,   236,     0,   237,   238,
     239,   240, -2101,   242,     0,   243,     0,  1081,  1082,   246,
     247,     0,   248,   249,   250,   251,   252,   253,   254, -2101,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,   268,   269,   270,   271,   272,   273,
     274,  1083,  1084,     0,  1085,     0,   278,     0,     0,   281,
     282,   283,   284,   285,   286,   287,   288,     0,     0,   289,
     290,   291, -2101,     0,   293,   294,   295,   296,   297,   298,
     299,   300,  1086,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,  1087,   323,  1088,   325,   326,   327,   328,
       0,   329,   330,     0,   332,  1090,   795,   334,  1091,   336,
     337,   338,     0,   339,   340,     0,     0,  1092,   342,   343,
       0,     0,   344,   345,   346,   347,   348,   349,   797,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   798,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,  1093,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,   403,
     404,   405,   406,  1094,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0, -2101,
     431,   432,  1095,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   800,
       0,     0,   450,   451,     0,   452,   453,   454,   455,   456,
     457,   458,     0,   459,  1096,  1097,     0,     0,   462,   463,
     801,   465,   802,  1098,   467,   468,   803,   470,   471,  3558,
     473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   487,  1099,
     489,     0,   490,   491,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520, -2101,     0,     0,
       0,     0,     0,     0,  1101,  1102,  1103,     0,     0,     0,
       0,  1104,     0,  1105,  1056,  1057,  1058,  1059,     0,   117,
    1060,   821,  1061,  1062,     0,  1064,  1065,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,     0,     0,  1066,     0,     0,   129,   130,
     131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
    1067,   141,  1068,  1069,     0,   144,   145,   146,   147,   148,
     149,  1070,   790,   150,   151,   152,   153,  1071,  1072,   156,
       0,   157,   158,   159,   160,   791,     0,   792,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,  1074,   191,
     192,  1075,   194,     0,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,  1077,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,  1078,   222,
     223,   224,   225,   226,   227,   793,  1079,   229,     0,   230,
     231,  1080,   233,     0,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,     0,   243,     0,  1081,  1082,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
     273,   274,  1083,  1084,     0,  1085,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
     298,   299,   300,  1086,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,  1087,   323,  1088,   325,   326,   327,
     328,     0,   329,   330,   331,   332,  1090,   795,   334,  1091,
     336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
     343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,  1093,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
     403,   404,   405,   406,  2220,  2221,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
     430,   431,   432,  1095,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
     456,   457,   458,     0,   459,  1096,  1097,     0,     0,   462,
     463,   801,   465,   802,  1098,   467,   468,   803,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
    1099,   489,     0,   490,   491,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,     0,     0,
       0,     0,     0,     0,     0,  2222,  2223,     0,     0,     0,
       0,     0,  1104,     0,  1105,  1056,  1057,  1058,  1059,     0,
     117,  1060,   821,  1061,  1062,  1063,  1064,  1065,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
     128,     0,     0,     0,     0,     0,  1066,     0,     0,   129,
     130,   131,     0,   132,   133,   134,   135,   136,   137,   138,
     139,  1067,   141,  1068,  1069,     0,   144,   145,   146,   147,
     148,   149,  1070,   790,   150,   151,   152,   153,  1071,  1072,
     156,     0,   157,   158,   159,   160,   791,     0,   792,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,  1074,
     191,   192,  1075,   194,     0,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,  1077,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,  1078,
     222,   223,   224,   225,   226,   227,   793,  1079,   229,     0,
     230,   231,  1080,   233,     0,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,     0,   243,     0,  1081,
    1082,   246,   247,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,   268,   269,   270,   271,
     272,   273,   274,  1083,  1084,     0,  1085,     0,   278,     0,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
       0,   289,   290,   291,   292,     0,   293,   294,   295,   296,
     297,   298,   299,   300,  1086,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,  1087,   323,  1088,   325,   326,
     327,   328,     0,   329,   330,   331,   332,  1090,   795,   334,
    1091,   336,   337,   338,     0,   339,   340,     0,     0,  1092,
     342,   343,     0,     0,   344,   345,   346,   347,   348,   349,
     797,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   798,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,  1093,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,   403,   404,   405,   406,  1094,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,   430,   431,   432,  1095,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   800,     0,     0,   450,   451,     0,   452,   453,   454,
     455,   456,   457,   458,     0,   459,  1096,  1097,     0,     0,
     462,   463,   801,   465,   802,  1098,   467,   468,   803,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     487,  1099,   489,     0,   490,   491,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,     0,
       0,     0,     0,     0,     0,     0,  1434,  1435,     0,     0,
       0,     0,     0,  1104,     0,  1105,  1056,  1057,  1058,  1059,
       0,   117,  1060,   821,  1061,  1062,     0,  1064,  1065,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,  1066,     0,     0,
     129,   130,   131,     0,   132,   133,   134,   135,   136,   137,
     138,   139,  1067,   141,  1068,  1069,     0,   144,   145,   146,
     147,   148,   149,  1070,   790,   150,   151,   152,   153,  1071,
    1072,   156,     0,   157,   158,   159,   160,   791,     0,   792,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
    1074,   191,   192,  1075,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,  1077,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
    1078,   222,   223,   224,   225,   226,   227,   793,  1079,   229,
       0,   230,   231,  1080,   233,     0,   234,     0,   235,   236,
       0,   237,   238,   239,   240,   241,   242,     0,   243,  3108,
    1081,  1082,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,   268,   269,   270,
     271,   272,   273,   274,  1083,  1084,     0,  1085,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,     0,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   297,   298,   299,   300,  1086,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,  1087,   323,  1088,   325,
     326,   327,   328,     0,   329,   330,   331,   332,  1090,   795,
     334,  1091,   336,   337,   338,     0,   339,   340,     0,     0,
     341,   342,   343,     0,     0,   344,   345,   346,   347,   348,
     349,   797,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   362,   363,   798,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
    1093,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,   430,   431,   432,  1095,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   800,     0,     0,   450,   451,     0,   452,   453,
     454,   455,   456,   457,   458,     0,   459,  1096,  1097,     0,
       0,   462,   463,   801,   465,   802,  1098,   467,   468,   803,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
       0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   487,  1099,   489,     0,   490,   491,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
    1056,  1057,  1058,  1059,     0,   117,  1060,   821,  1061,  1062,
       0,  1064,  1065,     0,  1104,     0,  2791,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,  1066,     0,     0,   129,   130,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,  1067,   141,  1068,  1069,
       0,   144,   145,   146,   147,   148,   149,  1070,   790,   150,
     151,   152,   153,  1071,  1072,   156,     0,   157,   158,   159,
     160,   791,     0,   792,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,  1074,   191,   192,  1075,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,  1077,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,  1078,   222,   223,   224,   225,   226,
     227,   793,  1079,   229,     0,   230,   231,  1080,   233,     0,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,     0,   243,     0,  1081,  1082,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,   268,   269,   270,   271,   272,   273,   274,  1083,  1084,
       0,  1085,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,     0,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   297,   298,   299,   300,  1086,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
    1087,   323,  1088,   325,   326,   327,   328,     0,   329,   330,
     331,   332,  1090,   795,   334,  1091,   336,   337,   338,     0,
     339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
     345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,  1093,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,   430,   431,   432,  1095,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
     451,     0,   452,   453,   454,   455,   456,   457,   458,     0,
     459,  1096,  1097,     0,     0,   462,   463,   801,   465,   802,
    1098,   467,   468,   803,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,  1099,   489,     0,   490,
     491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,  1056,  1057,  1058,  1059,     0,   117,
    1060,   821,  1061,  1062,     0,  1064,  1065,     0,  1104,     0,
    2791,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,     0,     0,  1066,     0,     0,   129,   130,
     131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
    1067,   141,  1068,  1069,     0,   144,   145,   146,   147,   148,
     149,  1070,   790,   150,   151,   152,   153,  1071,  1072,   156,
       0,   157,   158,   159,   160,   791,     0,   792,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,  1074,   191,
     192,  1075,   194,     0,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,  1077,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,  1078,   222,
     223,   224,   225,   226,   227,   793,  1079,   229,     0,   230,
     231,  1080,   233,     0,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,     0,   243,     0,  1081,  1082,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,   268,   269,   270,   271,   272,
     273,   274,  1083,  1084,     0,  1085,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,     0,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   297,
     298,   299,   300,  1086,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,  1087,   323,  1088,   325,   326,   327,
     328,     0,   329,   330,   331,   332,  1090,   795,   334,  1091,
     336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
     343,     0,     0,   344,   345,   346,   347,   348,   349,   797,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   798,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,  1093,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
     403,   404,   405,   406,  1094,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
     430,   431,   432,  1095,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     800,     0,     0,   450,   451,     0,   452,   453,   454,   455,
     456,   457,   458,     0,   459,  1096,  1097,     0,     0,   462,
     463,   801,   465,   802,  1098,   467,   468,   803,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
    1099,   489,     0,   490,   491,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,  1056,  1057,
    1058,  1059,     0,   117,  1060,   821,  1061,  1062,  1063,  1064,
    1065,     0,  1104,     0,  1105,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,     0,     0,  1066,
       0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
     136,   137,   138,     0,  1067,   141,  1068,  1069,     0,   144,
     145,   146,   147,   148,   149,  1070,   790,   150,   151,   152,
     153,  1071,  1072,   156,     0,   157,   158,   159,   160,   791,
       0,   792,     0,  1073,   164,   165,   166,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,  1074,   191,   192,  1075,   194,  1076,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,  1077,   209,   210,     0,
     211,   212,   213,     0,   214,     0,   216,     0,   217,   218,
     219,   220,  1078,   222,   223,   224,   225,   226,   227,   793,
    1079,   229,     0,   230,   231,  1080,   233,     0,   234,     0,
     235,   236,     0,   237,   238,   239,   240,     0,   242,     0,
     243,     0,  1081,  1082,   246,   247,     0,   248,   249,   250,
     251,   252,   253,   254,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
     269,   270,   271,   272,   273,   274,  1083,  1084,     0,  1085,
       0,   278,     0,     0,   281,   282,   283,   284,   285,   286,
     287,   288,     0,     0,   289,   290,   291,     0,     0,   293,
     294,   295,   296,   297,   298,   299,   300,  1086,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,  1087,   323,
    1088,   325,   326,   327,   328,     0,   329,   330,     0,   332,
    1090,   795,   334,  1091,   336,   337,   338,     0,   339,   340,
       0,     0,  1092,   342,   343,     0,     0,   344,   345,   346,
     347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,  1093,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,   403,   404,   405,   406,  1094,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,     0,   431,   432,  1095,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   800,     0,     0,   450,   451,     0,
     452,   453,   454,   455,   456,   457,   458,     0,   459,  1096,
    1097,     0,     0,   462,   463,   801,   465,   802,  1098,   467,
     468,   803,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,  1099,   489,     0,   490,   491,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,  1056,  1057,  1058,  1059,     0,   117,     0,  1101,
    1102,  1103,     0,     0,  1065,     0,  1104,     0,  1105,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,  1066,     0,     0,   129,   130,   131,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,  1070,
     790,   150,   151,   152,   153,   154,   155,   156,     0,   157,
     158,   159,   160,   791,     0,   792,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
     208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   793,     0,   229,     0,   230,   231,   232,
     233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,     0,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
     300,  1086,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,     0,   795,   334,   335,   336,   337,
     338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
       0,   344,   345,   346,   347,   348,   349,   797,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   798,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   800,     0,
       0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
     458,     0,   459,   460,   461,     0,     0,   462,   463,   801,
     465,   802,     0,   467,   468,   803,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
       0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,  1059,     0,   974,  1363,
     821,     0,     0,     0,  1064,     0,     0,     0,     0,     0,
    1104,     0,  2134,     0,     0,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,   565,     0,     0,     0,     0,   570,   130,   131,
       0,   132,   133,   134,   572,   136,   137,   138,   573,   574,
     575,   576,   577,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   150,   151,   152,   153,   581,   582,   156,     0,
     157,   158,   159,   160,   584,     0,   586,     0,   588,   164,
     165,   166,   167,   168,   589,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,   592,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   594,   191,   192,
     595,   194,     0,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   605,   222,   223,
     224,   225,   226,   227,   606,  1364,   229,     0,   230,   231,
     609,   233,     0,   234,     0,   235,   612,     0,   614,   238,
     239,   615,   616,   242,     0,   243,     0,   619,   620,   246,
     247,     0,   248,   249,   250,   251,   252,   253,   254,   622,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,   625,   626,   270,   271,   272,   273,
     274,   627,   628,     0,   630,     0,   278,   632,   633,   281,
     634,   283,   284,   285,   286,   287,   288,     0,     0,   289,
     637,   291,   638,     0,   293,   294,   295,   296,   297,   298,
     299,   300,  2397,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   641,   642,   643,   325,   326,   327,   644,
       0,   329,   330,   646,   332,     0,   648,   334,   649,   336,
     337,   338,     0,   339,   340,  1365,     0,   341,   342,   343,
       0,     0,   344,   345,   655,   656,   348,   657,   658,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   663,   664,   366,   367,
     665,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   668,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,   671,
     404,   405,   406,   672,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,   674,   421,
     422,   423,   424,   425,   426,   675,   428,   429,     0,   677,
     431,   432,   678,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   680,   448,   681,
       0,     0,   450,   451,     0,   452,   685,   454,   455,   456,
     457,   458,     0,   459,   687,   688,     0,     0,   462,   463,
     691,   465,   692,  1366,   467,   468,   694,   470,   471,   472,
     473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   699,   700,
     489,     0,   490,   702,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   517,   518,   519,   520,   528,     0,     0,
       0,     0,     0,     0,  1367,  1368,  2398,     0,     0,     0,
       0,  2399,     0,  2400,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,     0,  1010,     0,     0,   130,   131,     0,
     132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
     158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
     166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
     208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,  -499,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,  -499,   230,   231,   232,
     233,  -499,   234,     0,   235,     0,     0,     0,   238,   239,
     529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
     275,   276,  -499,   277,     0,   278,     0,     0,   281,     0,
     283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
     291,     0,  -499,   293,   294,   295,   296,   297,   298,   299,
     300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
     329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
     338,  -499,   339,   340,     0,     0,   341,   342,   343,     0,
    -499,   344,   345,   346,     0,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
       0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
     458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
     465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
     474,  -499,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
       0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   528,     0,   554,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1177,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
     133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
     159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
     167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
       0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
     276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
     284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
       0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
     450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
       0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
     466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
     490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   974,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2484,  3298,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     3,     4,     0,   565,
       0,     0,     0,     0,   570,   130,   131,     0,   132,   133,
     134,   572,   136,   137,   138,   573,   574,   575,   576,   577,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,   153,   581,   582,   156,     0,   157,   158,   159,
     160,   584,     0,   586,     0,   588,   164,   165,   166,   167,
     168,   589,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,   592,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   594,   191,   192,   595,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,    14,    15,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   605,   222,   223,   224,   225,   226,
     227,   606,     0,   229,     0,   230,   231,   609,   233,     0,
     234,     0,   235,   612,    23,   614,   238,   239,   615,   616,
     242,     0,   243,     0,   619,   620,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   622,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,   625,   626,   270,   271,   272,   273,   274,   627,   628,
       0,   630,     0,   278,   632,   633,   281,   634,   283,   284,
     285,   286,   287,   288,     0,     0,   289,   637,   291,   638,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   640,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     641,   642,   643,   325,   326,   327,   644,     0,   329,   330,
     646,   332,     0,   648,   334,   649,   336,   337,   338,     0,
     339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
     345,   655,   656,   348,   657,   658,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    26,    27,    28,
       0,   362,   363,   663,   664,   366,   367,   665,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   668,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,   671,   404,   405,   406,
     672,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    33,   674,   421,   422,   423,   424,
     425,   426,   675,   428,   429,    35,   677,   431,   432,   678,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   680,   448,   681,    37,     0,   450,
     451,    38,   452,   685,   454,   455,   456,   457,   458,     0,
     459,   687,   688,     0,     0,   462,   463,   691,   465,   692,
       0,   467,   468,   694,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,    40,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   975,   700,   489,     0,   490,
     702,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,    44,   500,   501,   502,   503,   504,   505,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     517,   518,   519,   520,     0,   117,    45,   554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,     0,     0,     0,   129,   130,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   790,   150,
     151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
     160,   791,     0,   792,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,    14,    15,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   793,     0,   229,     0,   230,   231,   232,   233,     0,
     234,     0,   235,   236,    23,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
       0,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   794,     0,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,     0,   795,   334,   335,   336,   337,   338,     0,
     339,   340,     0,   796,   341,   342,   343,     0,     0,   344,
     345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    26,    27,    28,
       0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,   799,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    33,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    35,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   800,    37,     0,   450,
     451,    38,   452,   453,   454,   455,   456,   457,   458,     0,
     459,   460,   461,     0,     0,   462,   463,   801,   465,   802,
       0,   467,   468,   803,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,    40,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   804,   488,   489,     0,   490,
     491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,    44,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,     0,   117,    45,   554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     805,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,     0,     0,     0,   129,   130,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   790,   150,
     151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
     160,   791,     0,   792,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   793,     0,   229,     0,   230,   231,   232,   233,     0,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
       0,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   794,     0,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,     0,   795,   334,   335,   336,   337,   338,     0,
     339,   340,     0,   796,   341,   342,   343,     0,     0,   344,
     345,   346,   347,   348,   349,   797,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   798,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,   799,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   800,     0,     0,   450,
     451,     0,   452,   453,   454,   455,   456,   457,   458,     0,
     459,   460,   461,     0,     0,   462,   463,   801,   465,   802,
       0,   467,   468,   803,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   804,   488,   489,     0,   490,
     491,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   117,     0,   554,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     805,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
       0,     0,     0,   129,   130,   131,     0,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   790,   150,   151,
     152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
     791,     0,   792,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     793,     0,   229,     0,   230,   231,   232,   233,     0,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,     0,
     277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,     0,   289,   290,   291,   292,     0,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,     0,   795,   334,   335,   336,   337,   338,     0,   339,
     340,     0,   796,   341,   342,   343,     0,     0,   344,   345,
     346,   347,   348,   349,   797,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   798,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,   403,   404,   405,   406,   407,
     799,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   800,     0,     0,   450,   451,
       0,   452,   453,   454,   455,   456,   457,   458,     0,   459,
     460,   461,     0,     0,   462,   463,   801,   465,   802,     0,
     467,   468,   803,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,   488,   489,     0,   490,   491,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   117,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1018,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
       0,     0,   129,   130,   131,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   790,   150,   151,   152,
     153,   154,   155,   156,     0,   157,   158,   159,   160,   791,
       0,   792,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   793,
       0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,     0,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
       0,   795,   334,   335,   336,   337,   338,     0,   339,   340,
       0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
     347,   348,   349,   797,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   798,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,   403,   404,   405,   406,   407,   799,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   800,     0,     0,   450,   451,     0,
     452,   453,   454,   455,   456,   457,   458,     0,   459,   460,
     461,     0,     0,   462,   463,   801,   465,   802,     0,   467,
     468,   803,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,   488,   489,     0,   490,   491,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   117,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
       0,   129,   130,   131,     0,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   790,   150,   151,   152,   153,
     154,   155,   156,     0,   157,   158,   159,   160,   791,     0,
     792,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   793,     0,
     229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,     0,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,     0,
     795,   334,   335,   336,   337,   338,     0,   339,   340,     0,
       0,   341,   342,   343,     0,     0,   344,   345,   346,   347,
     348,   349,   797,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     798,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   800,     0,     0,   450,   451,     0,   452,
     453,   454,   455,   456,   457,   458,     0,   459,   460,   461,
       0,     0,   462,   463,   801,   465,   802,     0,   467,   468,
     803,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,   488,   489,     0,   490,   491,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   528,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3387,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
     138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
     155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
       0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,    14,    15,   202,   203,   204,   205,
       0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
      23,     0,   238,   239,   529,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
     271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
       0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
       0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
     296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
     341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    26,    27,    28,     0,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      33,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    35,     0,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     531,   448,   449,    37,     0,   450,   451,    38,   452,     0,
     454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
       0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
      40,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   804,   488,   489,     0,   490,     0,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,    44,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
       0,   528,    45,   554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,   892,   126,
     127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
     138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
     155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
       0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
      23,     0,   238,   239,   529,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
     271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
       0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
       0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
     296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
     341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    26,    27,    28,     0,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      33,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     531,   448,   449,     0,     0,   450,   451,    38,   452,     0,
     454,   455,   456,   457,   458,     0,   459,   893,   461,     0,
       0,   894,   463,   464,   465,   466,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
      40,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   804,   488,   489,     0,   490,     0,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,    44,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
       0,   528,    45,   554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
     138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
     155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
       0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
      23,     0,   238,   239,   529,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
     271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
       0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
       0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
     296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
     341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    26,    27,    28,     0,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      33,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     531,   448,   449,     0,     0,   450,   451,    38,   452,     0,
     454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
       0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
      40,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   804,   488,   489,     0,   490,     0,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,    44,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
       0,   528,    45,   554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    46,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
     138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
     155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
       0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
       0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
     271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
       0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
       0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
     296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
     341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
     454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
       0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
       0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     528,     0,   554,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   994,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
     128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
     139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
     156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
     163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
       0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,   249,   250,   251,   252,   253,
     254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
     272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
       0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
       0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
     297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
     327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
     342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
     448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
     455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
     462,   463,   464,   465,   466,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
       0,   554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1490,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
     131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
     140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
       0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
     164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
     238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
       0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
     273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
     281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
     289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
     298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
     328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
     336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
     343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
       0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
       0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
     449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
     456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
     463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
     488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
     554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2098,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
       0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
       0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
     157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
     165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
     239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,   249,   250,   251,   252,   253,   254,     0,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
     274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
       0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
       0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
     299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
       0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
     337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
       0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
       0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
     457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
     464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
     473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
     489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   528,     0,   554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2246,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
     132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
     158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
     166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
     208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
     529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
     275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
     283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
     291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
     300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
     329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
       0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
       0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
     458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
     465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
       0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   528,     0,   554,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2484,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
     133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
     159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
     167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
       0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
     276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
     284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
       0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
     450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
       0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
     466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
     490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   528,     0,   554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2627,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
     134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
     160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
     168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
     234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
       0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
     285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
       0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
     345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
     451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
     459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
       0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   528,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3293,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
       0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
     152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
     161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
       0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
       0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
     250,   251,   252,   253,   254,     0,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
       0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
     277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
     286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
     293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
     332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
     346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
       0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
     460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   528,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2202,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
     136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
     153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
       0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
     235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
     251,   252,   253,   254,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
     269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
       0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
     287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
     294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
       0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
       0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
     452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
     461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   528,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2838,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
     137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
     154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
       0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
       0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
     270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
     278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
     288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
     325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
       0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
       0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
       0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,     0,  2964,  1363,   821,     0,     0,  2073,  1064,     0,
       0,     0,     0,     0,  2074,  2075,     0,  3155,  2076,  2077,
    2078,   118,   119,   120,   121,   122,   123,   124,   125,   561,
     126,   127,   128,   562,   563,   564,  2965,   566,   567,   568,
     569,  2966,   130,   131,   571,   132,   133,   134,  2967,   136,
     137,   138,     0,  1503,  2968,  1505,  1506,   578,   144,   145,
     146,   147,   148,   149,   579,   580,   150,   151,   152,   153,
    1507,  1508,   156,   583,   157,   158,   159,   160,     0,   585,
    2969,   587,  2970,   164,   165,   166,   167,   168,  2971,   170,
     171,   172,   590,   173,   174,   175,   176,   177,   178,   591,
    2972,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,  1513,   191,   192,  1514,   194,   596,   195,   597,   196,
     197,   198,   199,   200,   201,   598,   599,   202,   203,   204,
     205,   600,   601,   206,   207,  1077,   209,   210,   602,   211,
     212,   213,   603,   214,   215,   216,   604,   217,   218,   219,
     220,     0,   222,   223,   224,   225,   226,   227,     0,   607,
     229,   608,   230,   231,  1515,   233,   610,   234,   611,   235,
    2973,   613,  2974,   238,   239,  2975,  2976,   242,   617,   243,
     618,     0,     0,   246,   247,   621,   248,   249,   250,   251,
     252,   253,   254,  2977,   256,   257,   258,   259,   623,   260,
     261,   262,   263,   264,   265,   266,   624,   267,  2978,     0,
     270,   271,   272,   273,   274,  1521,  1522,   629,  1523,   631,
     278,  2979,  2980,   281,  2981,   283,   284,   285,   286,   287,
     288,   635,   636,   289,  2982,   291,  2983,   639,   293,   294,
     295,   296,   297,   298,   299,   300,  2984,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,  1530,  2985,  1532,
     325,   326,   327,  2986,   645,   329,   330,  2987,   332,   647,
       0,   334,  1534,   336,   337,   338,   650,   339,   340,   651,
     652,  2988,   342,   343,   653,   654,   344,   345,     0,  2989,
     348,  2990,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   659,   660,   661,   662,   362,   363,
       0,  2991,   366,   367,     0,   369,   370,   371,   666,   372,
     373,   374,   375,   376,   377,   667,   378,   379,   380,   381,
     382,  1538,   384,   385,   386,   387,   669,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     670,   401,   402,  2992,   404,   405,   406,  1540,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   673,  2993,   421,   422,   423,   424,   425,   426,  2994,
     428,   429,   676,  2995,   431,   432,  1544,   434,   679,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,  2996,   448,     0,   682,   683,   450,   451,   684,   452,
    2997,   454,   455,   456,   457,   458,   686,   459,  1547,  1548,
     689,   690,   462,   463,     0,   465,     0,   693,   467,   468,
    2998,   470,   471,   472,   473,   474,  2999,   696,   475,   476,
     477,   697,   478,   479,   480,   481,   698,   482,   483,   484,
     485,   486,     0,  1551,   489,   701,   490,  3000,   492,   493,
     494,   495,   496,   497,   498,   703,   704,   499,   705,   706,
     500,   501,   502,   503,   504,   505,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   517,   518,   519,
     520,     0,   528,     0,  2079,  2080,  2081,  2073,  3001,  3002,
    2084,  2085,  2086,  2087,  2074,  2075,     0,     0,  2076,  2077,
    2078,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
     137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
     154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
       0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
       0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
     270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
     278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
     288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
     325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
       0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
       0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
       0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,     0,     0,     0,  2079,  2080,  2081,     0,  2082,  2083,
    2084,  2085,  2086,  2087,  1636,     0,     0,  1637,     0,     0,
       0,  1638,  1639,  1640,  1641,  1642,  1643,  1644,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1645,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1647,  1636,     0,     0,  1637,     0,     0,  1648,
    1638,  1639,  1640,  1641,  1642,  1643,  1644,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1645,     0,     0,     0,     0,  1649,     0,     0,     0,
       0,  1647,  1636,     0,     0,  1637,     0,     0,  1648,  1638,
    1639,  1640,  1641,  1642,  1643,  1644,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1645,     0,     0,     0,     0,  1649,     0,     0,     0,     0,
    1647,     0,     0,     0,     0,     0,     0,  1648,     0,     0,
    1636,     0,     0,  1637,     0,     0,     0,  1638,  1639,  1640,
    1641,  1642,  1643,  1644,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1649,     0,     0,     0,  1645,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1647,  1636,
       0,     0,  1637,  1650,     0,  1648,  1638,  1639,  1640,  1641,
    1642,  1643,  1644,     0,     0,     0,     0,     0,     0,     0,
    1651,     0,     0,     0,     0,  1652,     0,  1645,     0,     0,
       0,     0,  1649,     0,     0,     0,     0,  1647,     0,     0,
       0,     0,  1650,     0,  1648,     0,     0,     0,  1653,  1654,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1651,
       0,     0,     0,  1655,  1652,     0,     0,     0,     0,     0,
       0,  1649,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1650,     0,     0,     0,     0,     0,  1653,  1654,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1651,     0,
       0,  1656,  1655,  1652,  1657,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1658,     0,
       0,  1659,     0,     0,     0,     0,  1653,  1654,     0,  1650,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1656,  1655,     0,  1657,     0,     0,  1651,     0,     0,     0,
       0,  1652,     0,     0,     0,     0,     0,  1658,     0,     0,
    1659,     0,     0,     0,     0,     0,     0,     0,  1650,     0,
       0,     0,     0,     0,  1653,  1654,     0,     0,     0,  1656,
       0,     0,  1657,     0,     0,  1651,     0,     0,     0,  1655,
    1652,     0,     0,     0,     0,     0,  1658,     0,     0,  1659,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1653,  1654,     0,     0,     0,     0,     0,
    1660,     0,     0,     0,     0,     0,     0,  1656,  1655,     0,
    1657,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1658,     0,     0,  1659,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1660,
       0,     0,     0,     0,     0,     0,  1656,     0,     0,  1657,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1658,     0,     0,  1659,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1660,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1661,     0,
       0,  1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,
    1670,     0,     0,     0,     0,  3316,  1660,     0,     0,     0,
       0,     0,  1636,     0,     0,  1637,     0,     0,     0,  1638,
    1639,  1640,  1641,  1642,  1643,  1644,     0,  1661,     0,     0,
    1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,
    1645,     0,     0,     0,  3338,  1660,     0,  1386,  1387,     0,
    1647,     0,     0,     0,     0,     0,     0,  1648,     0,     0,
       0,     0,     0,     0,     0,     0,  1661,     0,     0,  1662,
    1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,     0,
       0,     0,     0,  3438,  1649,     0,     0,     0,  1388,  1389,
       0,     0,  1390,  1391,     0,     0,     0,     0,     0,  1636,
       0,     0,  1637,     0,     0,     0,  1638,  1639,  1640,  1641,
    1642,  1643,  1644,     0,  1661,     0,     0,  1662,  1663,  1664,
       0,  1665,  1666,  1667,  1668,  1669,  1670,  1645,     0,     0,
       0,  3494,     0,     0,     0,     0,     0,  1647,  1636,     0,
       0,  1637,     0,     0,  1648,  1638,  1639,  1640,  1641,  1642,
    1643,  1644,     0,  1661,     0,     0,  1662,  1663,  1664,     0,
    1665,  1666,  1667,  1668,  1669,  1670,  1645,     0,  1392,  1393,
    3516,  1649,     0,     0,     0,     0,  1647,  1636,     0,     0,
    1637,  1650,     0,  1648,  1638,  1639,  1640,  1641,  1642,  1643,
    1644,     0,     0,     0,     0,     0,     0,     0,  1651,     0,
       0,     0,     0,  1652,     0,  1645,     0,     0,     0,     0,
    1649,     0,     0,     0,     0,  1647,     0,     0,     0,     0,
       0,     0,  1648,     0,     0,     0,  1653,  1654,     0,     0,
       0,     0,  1394,  1395,  1396,  1397,  1398,  1399,  1400,  1401,
       0,  1655,  1402,  1403,     0,     0,     0,     0,     0,  1649,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1650,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1656,
       0,     0,  1657,     0,     0,  1651,     0,     0,     0,     0,
    1652,     0,     0,     0,     0,     0,  1658,     0,     0,  1659,
       0,     0,     0,     0,     0,     0,     0,  1650,     0,     0,
       0,     0,     0,  1653,  1654,     0,  1404,  1405,     0,     0,
       0,     0,     0,     0,  1651,     0,     0,     0,  1655,  1652,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1650,     0,     0,     0,
       0,     0,  1653,  1654,     0,     0,     0,  1406,  1407,     0,
       0,     0,     0,  1651,     0,     0,  1656,  1655,  1652,  1657,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1658,     0,     0,  1659,     0,     0,     0,
       0,  1653,  1654,     0,     0,     0,     0,     0,  1660,     0,
       0,     0,     0,     0,     0,  1656,  1655,     0,  1657,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1658,     0,     0,  1659,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1656,     0,     0,  1657,     0,     0,
       0,     0,     0,  1408,  1409,     0,     0,     0,     0,     0,
       0,  1658,     0,     0,  1659,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1410,  1411,     0,
       0,     0,     0,     0,     0,  1660,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1661,     0,     0,  1662,
    1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,     0,
       0,  1824,     0,     0,  1660,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1660,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1661,     0,     0,  1662,  1663,  1664,     0,
    1665,  1666,  1667,  1668,  1669,  1670,     0,     0,  2864,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1661,     0,     0,  1662,  1663,  1664,     0,  1665,
    1666,  1667,  1668,  1669,  1670,     0,     0,  3306,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   560,     0,
       0,  1661,     0,     0,  1662,  1663,  1664,     0,  1665,  1666,
    1667,  1668,  1669,  1670,     0,     0,  3478,   118,   119,   120,
     121,   122,   123,   124,   125,   561,   126,   127,   128,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   130,   131,
     571,   132,   133,   134,   572,   136,   137,   138,   573,   574,
     575,   576,   577,   578,   144,   145,   146,   147,   148,   149,
     579,   580,   150,   151,   152,   153,   581,   582,   156,   583,
     157,   158,   159,   160,   584,   585,   586,   587,   588,   164,
     165,   166,   167,   168,   589,   170,   171,   172,   590,   173,
     174,   175,   176,   177,   178,   591,   592,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   594,   191,   192,
     595,   194,   596,   195,   597,   196,   197,   198,   199,   200,
     201,   598,   599,   202,   203,   204,   205,   600,   601,   206,
     207,   208,   209,   210,   602,   211,   212,   213,   603,   214,
     215,   216,   604,   217,   218,   219,   220,   605,   222,   223,
     224,   225,   226,   227,   606,   607,   229,   608,   230,   231,
     609,   233,   610,   234,   611,   235,   612,   613,   614,   238,
     239,   615,   616,   242,   617,   243,   618,   619,   620,   246,
     247,   621,   248,   249,   250,   251,   252,   253,   254,   622,
     256,   257,   258,   259,   623,   260,   261,   262,   263,   264,
     265,   266,   624,   267,   625,   626,   270,   271,   272,   273,
     274,   627,   628,   629,   630,   631,   278,   632,   633,   281,
     634,   283,   284,   285,   286,   287,   288,   635,   636,   289,
     637,   291,   638,   639,   293,   294,   295,   296,   297,   298,
     299,   300,   640,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   641,   642,   643,   325,   326,   327,   644,
     645,   329,   330,   646,   332,   647,   648,   334,   649,   336,
     337,   338,   650,   339,   340,   651,   652,   341,   342,   343,
     653,   654,   344,   345,   655,   656,   348,   657,   658,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     659,   660,   661,   662,   362,   363,   663,   664,   366,   367,
     665,   369,   370,   371,   666,   372,   373,   374,   375,   376,
     377,   667,   378,   379,   380,   381,   382,   668,   384,   385,
     386,   387,   669,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   670,   401,   402,   671,
     404,   405,   406,   672,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   673,   674,   421,
     422,   423,   424,   425,   426,   675,   428,   429,   676,   677,
     431,   432,   678,   434,   679,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   680,   448,   681,
     682,   683,   450,   451,   684,   452,   685,   454,   455,   456,
     457,   458,   686,   459,   687,   688,   689,   690,   462,   463,
     691,   465,   692,   693,   467,   468,   694,   470,   471,   472,
     473,   474,   695,   696,   475,   476,   477,   697,   478,   479,
     480,   481,   698,   482,   483,   484,   485,   486,   699,   700,
     489,   701,   490,   702,   492,   493,   494,   495,   496,   497,
     498,   703,   704,   499,   705,   706,   500,   501,   502,   503,
     504,   505,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   517,   518,   519,   520,   528,     0,     0,
       0,     0,     0,     0,     0,     0,  2108,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
     132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
     158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
     166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
     208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
     529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
     275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
     283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
     291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
     300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
     329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
       0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
       0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
     458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
     465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
       0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   528,     0,     0,     0,
       0,     0,     0,     0,     0,  2757,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
     133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
     159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
     167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
       0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
     276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
     284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
       0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
     450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
       0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
     466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
     490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   974,  1363,   821,     0,     0,
       0,  1064,     0,     0,  2760,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,   565,
       0,     0,     0,     0,   570,   130,   131,     0,   132,   133,
     134,   572,   136,   137,   138,   573,   574,   575,   576,   577,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,   153,   581,   582,   156,     0,   157,   158,   159,
     160,   584,     0,   586,     0,   588,   164,   165,   166,   167,
     168,   589,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,   592,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   594,   191,   192,   595,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   605,   222,   223,   224,   225,   226,
     227,   606,  1364,   229,     0,   230,   231,   609,   233,     0,
     234,     0,   235,   612,     0,   614,   238,   239,   615,   616,
     242,     0,   243,     0,   619,   620,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   622,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,   625,   626,   270,   271,   272,   273,   274,   627,   628,
       0,   630,     0,   278,   632,   633,   281,   634,   283,   284,
     285,   286,   287,   288,     0,     0,   289,   637,   291,   638,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   640,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     641,   642,   643,   325,   326,   327,   644,     0,   329,   330,
     646,   332,     0,   648,   334,   649,   336,   337,   338,     0,
     339,   340,  1365,     0,   341,   342,   343,     0,     0,   344,
     345,   655,   656,   348,   657,   658,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   663,   664,   366,   367,   665,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   668,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,   671,   404,   405,   406,
     672,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,   674,   421,   422,   423,   424,
     425,   426,   675,   428,   429,     0,   677,   431,   432,   678,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   680,   448,   681,     0,     0,   450,
     451,     0,   452,   685,   454,   455,   456,   457,   458,     0,
     459,   687,   688,     0,     0,   462,   463,   691,   465,   692,
    1366,   467,   468,   694,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   699,   700,   489,     0,   490,
     702,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     517,   518,   519,   520,     0,     0,  1636,     0,     0,  1637,
       0,  1367,  1368,  1638,  1639,  1640,  1641,  1642,  1643,  1644,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1645,     0,     0,     0,     0,  2212,
       0,     0,     0,     0,  1647,  1636,     0,     0,  1637,     0,
       0,  1648,  1638,  1639,  1640,  1641,  1642,  1643,  1644,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1645,     0,     0,     0,     0,  1649,     0,
       0,     0,     0,  1647,  1636,     0,     0,  1637,     0,     0,
    1648,  1638,  1639,  1640,  1641,  1642,  1643,  1644,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1645,     0,     0,     0,     0,  1649,     0,     0,
       0,     0,  1647,     0,  2213,     0,     0,     0,     0,  1648,
       0,  1636,     0,     0,  1637,     0,     0,     0,  1638,  1639,
    1640,  1641,  1642,  1643,  1644,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1649,     0,     0,  1645,
       0,     0,     0,  1923,     0,     0,     0,     0,     0,  1647,
       0,     0,     0,     0,     0,  1650,  1648,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1651,     0,     0,     0,     0,  1652,     0,     0,
       0,     0,     0,  1649,  1959,     0,     0,     0,     0,  1960,
       0,     0,     0,     0,  1650,     0,     0,     0,     0,     0,
    1653,  1654,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1651,     0,     0,     0,  1655,  1652,     0,     0,     0,
       0,     0,  3584,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1650,     0,     0,     0,     0,     0,  1653,
    1654,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1651,     0,     0,  1656,  1655,  1652,  1657,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1658,     0,     0,  1659,     0,     0,     0,     0,  1653,  1654,
    1650,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1656,  1655,     0,  1657,     0,  1651,     0,     0,
       0,     0,  1652,     0,     0,     0,     0,     0,     0,  1658,
       0,     0,  1659,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1653,  1654,     0,     0,     0,
       0,  1656,     0,     0,  1657,     0,     0,     0,     0,     0,
    1655,     0,     0,     0,     0,     0,     0,     0,  1658,     0,
       0,  1659,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1660,     0,     0,     0,     0,     0,  1656,     0,
    3585,  1657,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1658,     0,     0,  1659,     0,
       0,     0,     0,     0,     0,     0,  1636,     0,     0,  1637,
       0,  1660,     0,  1638,  1639,  1640,  1641,  1642,  1643,  1644,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1645,  2216,     0,     0,     0,     0,
       0,     0,     0,     0,  1647,     0,     0,     0,     0,     0,
    1660,  1648,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1649,     0,
    1661,     0,     0,  1662,  1663,  1664,     0,  1665,  1666,  1667,
    1668,  1669,  1670,     0,     0,     0,     0,  1660,     0,     0,
       0,     0,     0,     0,     0,  1636,     0,     0,  1637,     0,
       0,     0,  1638,  1639,     0,     0,  1642,  1643,  1644,  1661,
       0,     0,  1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,
    1669,  1670,     0,  1645,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1647,     0,     0,     0,     0,     0,     0,
    1648,     0,     0,     0,     0,     0,     0,     0,  1661,     0,
       0,  1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,
    1670,     0,     0,     0,     0,  1650,     0,  1649,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1636,  1651,     0,  1637,     0,     0,  1652,  1638,  1639,
    1640,  1641,  1642,  1643,  1644,  1661,     0,     0,  1662,  1663,
    1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,     0,  1645,
    1653,  1654,     0,  1965,     0,     0,     0,     0,     0,  1647,
       0,     0,     0,     0,     0,  1655,  1648,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1636,     0,     0,
    1637,     0,     0,  1649,  1638,  1639,  1640,  1641,  1642,  1643,
    1644,     0,     0,  1656,  1650,     0,  1657,     0,     0,     0,
       0,     0,     0,     0,     0,  1645,     0,     0,     0,     0,
    1658,  1651,     0,  1659,     0,  1647,  1652,     0,     0,     0,
       0,     0,  1648,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1930,     0,     0,  1653,
    1654,     0,     0,     0,     0,     0,     0,     0,     0,  1649,
       0,     0,     0,     0,  1655,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1636,     0,     0,  1637,
       0,     0,     0,  1638,  1639,  1640,  1641,  1642,  1643,  1644,
    1650,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1656,     0,  1645,  1657,     0,  1651,  1972,     0,
       0,     0,  1652,     0,  1647,     0,     0,     0,     0,  1658,
       0,  1648,  1660,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1653,  1654,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1649,     0,
    1655,  1970,     0,     0,     0,     0,  1650,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1651,     0,     0,     0,     0,  1652,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1656,     0,
       0,  1657,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1653,  1654,     0,     0,  1658,     0,     0,  1659,     0,
       0,     0,     0,     0,     0,     0,  1655,     0,     0,     0,
       0,  1660,     0,     0,     0,     0,     0,     0,     0,     0,
    1661,     0,     0,  1662,  1663,  1664,     0,  1665,  1666,  1667,
    1668,  1669,  1670,     0,     0,  1650,     0,     0,     0,     0,
       0,     0,     0,     0,  1656,     0,     0,  1657,     0,     0,
       0,     0,  1651,     0,     0,     0,     0,  1652,     0,     0,
       0,  1658,     0,     0,  1659,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1636,     0,     0,  1637,     0,
    1653,  1654,  1638,  1639,  1640,  1641,  1642,  1643,  1644,     0,
       0,     0,     0,     0,     0,  1655,     0,  1660,     0,     0,
       0,     0,     0,  1645,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1647,     0,     0,     0,     0,     0,  1661,
    1648,     0,  1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,
    1669,  1670,  1636,  1656,     0,  1637,  1657,     0,     0,  1638,
    1639,  1640,  1641,  1642,  1643,  1644,     0,  1649,     0,     0,
    1658,     0,     0,  1659,     0,     0,     0,     0,     0,     0,
    1645,     0,     0,  1660,     0,     0,     0,     0,     0,     0,
    1647,     0,     0,     0,     0,     0,     0,  1648,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1649,  1661,     0,     0,  1662,  1663,
    1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,     0,  1636,
       0,     0,  1637,     0,     0,     0,  1638,  1639,  1640,  1641,
    1642,  1643,  1644,     0,  2103,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1650,     0,     0,  1645,     0,     0,
       0,  2837,  1660,     0,     0,     0,     0,  1647,     0,     0,
       0,  1651,     0,     0,  1648,     0,  1652,     0,     0,     0,
       0,  1661,     0,     0,  1662,  1663,  1664,     0,  1665,  1666,
    1667,  1668,  1669,  1670,     0,     0,     0,     0,     0,  1653,
    1654,  1649,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1650,     0,     0,  1655,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1651,     0,
       0,     0,     0,  1652,     0,     0,     0,     0,  1636,     0,
       0,  1637,     0,     0,     0,  1638,  1639,  1640,  1641,  1642,
    1643,  1644,  1656,     0,     0,  1657,  1653,  1654,     0,     0,
       0,     0,     0,     0,     0,     0,  1645,     0,     0,  1658,
    1661,  1655,  1659,  1662,  1663,  1664,  1647,  1665,  1666,  1667,
    1668,  1669,  1670,  1648,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1650,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1656,
    1649,     0,  1657,     0,     0,  1651,     0,     0,     0,     0,
    1652,     0,     0,     0,     0,     0,  1658,     0,     0,  1659,
       0,     0,     0,     0,     0,     0,     0,     0,  1636,     0,
       0,  1637,     0,  1653,  1654,  1638,  1639,  1640,  1641,  1642,
    1643,  1644,     0,     0,     0,     0,     0,     0,  1655,     0,
       0,     0,     0,     0,     0,     0,  1645,     0,     0,     0,
       0,  1660,     0,     0,     0,     0,  1647,     0,     0,     0,
       0,     0,     0,  1648,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1656,     0,     0,  1657,
       0,     0,     0,     0,     0,     0,     0,  1650,     0,     0,
    1649,     0,     0,  1658,     0,     0,  1659,     0,     0,     0,
       0,     0,     0,     0,  1651,     0,     0,  1636,  1660,  1652,
    1637,     0,     0,     0,  1638,  1639,  1640,  1641,  1642,  1643,
    1644,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1653,  1654,     0,  1645,     0,     0,     0,     0,
       0,  2821,     0,     0,     0,  1647,     0,  1655,     0,     0,
       0,     0,  1648,     0,     0,     0,     0,     0,     0,  1661,
       0,     0,  1662,  1663,  1664,     0,  1665,  1666,  1667,  1668,
    1669,  1670,     0,     0,     0,     0,     0,     0,     0,  1649,
       0,     0,     0,     0,     0,  1656,     0,  1650,  1657,     0,
       0,     0,     0,     0,     0,  1660,     0,     0,     0,     0,
       0,     0,  1658,     0,  1651,  1659,     0,     0,     0,  1652,
       0,     0,     0,     0,     0,     0,  1661,     0,     0,  1662,
    1663,  1664,     0,  1665,  1666,  1667,  1668,  1669,  1670,     0,
       0,     0,  1834,  1654,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1655,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1650,     0,     0,     0,
       0,     0,     0,     0,     0,  1656,     0,     0,  1657,     0,
       0,     0,     0,  1651,     0,     0,     0,     0,  1652,     0,
       0,     0,  1658,  1661,  1660,  1659,  1662,  1663,  1664,     0,
    1665,  1666,  1667,  1668,  1669,  1670,     0,     0,     0,     0,
       0,  1653,  1654,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1655,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1656,     0,     0,  1657,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1658,     0,     0,  1659,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1660,     0,     0,     0,     0,     0,
       0,     0,  1661,     0,     0,  1662,  1663,  1664,     0,  1665,
    1666,  1667,  1668,  1669,  1670,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1660,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1661,     0,     0,  1662,  1663,  1664,     0,  1665,
    1666,  1667,  1668,  1669,  1670,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1056,  1057,     0,     0,     0,   528,  1976,     0,     0,
       0,  1661,  1977,  1065,  1662,  1663,  1664,     0,  1665,  1666,
    1667,  1668,  2233,  1670,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
     133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
     159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
     167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
       0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
     276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
     284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
       0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
     450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
       0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
     466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
     490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   560,     0,  2124,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,   561,   126,   127,   128,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   130,   131,   571,   132,   133,
     134,   572,   136,   137,   138,   573,   574,   575,   576,   577,
     578,   144,   145,   146,   147,   148,   149,   579,   580,   150,
     151,   152,   153,   581,   582,   156,   583,   157,   158,   159,
     160,   584,   585,   586,   587,   588,   164,   165,   166,   167,
     168,   589,   170,   171,   172,   590,   173,   174,   175,   176,
     177,   178,   591,   592,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   594,   191,   192,   595,   194,   596,
     195,   597,   196,   197,   198,   199,   200,   201,   598,   599,
     202,   203,   204,   205,   600,   601,   206,   207,   208,   209,
     210,   602,   211,   212,   213,   603,   214,   215,   216,   604,
     217,   218,   219,   220,   605,   222,   223,   224,   225,   226,
     227,   606,   607,   229,   608,   230,   231,   609,   233,   610,
     234,   611,   235,   612,   613,   614,   238,   239,   615,   616,
     242,   617,   243,   618,   619,   620,   246,   247,   621,   248,
     249,   250,   251,   252,   253,   254,   622,   256,   257,   258,
     259,   623,   260,   261,   262,   263,   264,   265,   266,   624,
     267,   625,   626,   270,   271,   272,   273,   274,   627,   628,
     629,   630,   631,   278,   632,   633,   281,   634,   283,   284,
     285,   286,   287,   288,   635,   636,   289,   637,   291,   638,
     639,   293,   294,   295,   296,   297,   298,   299,   300,   640,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     641,   642,   643,   325,   326,   327,   644,   645,   329,   330,
     646,   332,   647,   648,   334,   649,   336,   337,   338,   650,
     339,   340,   651,   652,   341,   342,   343,   653,   654,   344,
     345,   655,   656,   348,   657,   658,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   659,   660,   661,
     662,   362,   363,   663,   664,   366,   367,   665,   369,   370,
     371,   666,   372,   373,   374,   375,   376,   377,   667,   378,
     379,   380,   381,   382,   668,   384,   385,   386,   387,   669,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   670,   401,   402,   671,   404,   405,   406,
     672,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   673,   674,   421,   422,   423,   424,
     425,   426,   675,   428,   429,   676,   677,   431,   432,   678,
     434,   679,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   680,   448,   681,   682,   683,   450,
     451,   684,   452,   685,   454,   455,   456,   457,   458,   686,
     459,   687,   688,   689,   690,   462,   463,   691,   465,   692,
     693,   467,   468,   694,   470,   471,   472,   473,   474,   695,
     696,   475,   476,   477,   697,   478,   479,   480,   481,   698,
     482,   483,   484,   485,   486,   699,   700,   489,   701,   490,
     702,   492,   493,   494,   495,   496,   497,   498,   703,   704,
     499,   705,   706,   500,   501,   502,   503,   504,   505,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     517,   518,   519,   520,   560,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,   561,   126,   127,   128,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   130,   131,   571,   132,   133,   134,
     572,   136,   137,   138,   573,   574,   575,   576,   577,   578,
     144,   145,   146,   147,   148,   149,   579,   580,   150,   151,
     152,   153,   581,   582,   156,   583,   157,   158,   159,   160,
     584,   585,   586,   587,   588,   164,   165,   166,   167,   168,
     589,   170,   171,   172,   590,   173,   174,   175,   176,   177,
     178,   591,   592,   180,   181,   182,   183,   184,   185,   593,
     187,   188,   189,   594,   191,   192,   595,   194,   596,   195,
     597,   196,   197,   198,   199,   200,   201,   598,   599,   202,
     203,   204,   205,   600,   601,   206,   207,   208,   209,   210,
     602,   211,   212,   213,   603,   214,   215,   216,   604,   217,
     218,   219,   220,   605,   222,   223,   224,   225,   226,   227,
     606,   607,   229,   608,   230,   231,   609,   233,   610,   234,
     611,   235,   612,   613,   614,   238,   239,   615,   616,   242,
     617,   243,   618,   619,   620,   246,   247,   621,   248,   249,
     250,   251,   252,   253,   254,   622,   256,   257,   258,   259,
     623,   260,   261,   262,   263,   264,   265,   266,   624,   267,
     625,   626,   270,   271,   272,   273,   274,   627,   628,   629,
     630,   631,   278,   632,   633,   281,   634,   283,   284,   285,
     286,   287,   288,   635,   636,   289,   637,   291,   638,   639,
     293,   294,   295,   296,   297,   298,   299,   300,   640,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   641,
     642,   643,   325,   326,   327,   644,   645,   329,   330,   646,
     332,   647,   648,   334,   649,   336,   337,   338,   650,   339,
     340,   651,   652,   341,   342,   343,   653,   654,   344,   345,
     655,   656,   348,   657,   658,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   659,   660,   661,   662,
     362,   363,   663,   664,   366,   367,   665,   369,   370,   371,
     666,   372,   373,   374,   375,   376,   377,   667,   378,   379,
     380,   381,   382,   668,   384,   385,   386,   387,   669,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   670,   401,   402,   671,   404,   405,   406,   672,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   673,   674,   421,   422,   423,   424,   425,
     426,   675,   428,   429,   676,   677,   431,   432,   678,   434,
     679,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   680,   448,   681,   682,   683,   450,   451,
     684,   452,   685,   454,   455,   456,   457,   458,   686,   459,
     687,   688,   689,   690,   462,   463,   691,   465,   692,   693,
     467,   468,   694,   470,   471,   472,   473,   474,   695,   696,
     475,   476,   477,   697,   478,   479,   480,   481,   698,   482,
     483,   484,   485,   486,   699,   700,   489,   701,   490,   702,
     492,   493,   494,   495,   496,   497,   498,   703,   704,   499,
     705,   706,   500,   501,   502,   503,   504,   505,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   517,
     518,   519,   520,   560,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
     561,   126,   127,   128,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   130,   131,   571,   132,   133,   134,   572,
     136,   137,   138,   573,   574,   575,   576,   577,   578,   144,
     145,   146,   147,   148,   149,   579,   580,   150,   151,   152,
     153,   581,   582,   156,   583,   157,   158,   159,   160,   584,
     585,   586,   587,   588,   164,   165,   166,   167,   168,   589,
     170,   171,   172,   590,   173,   174,   175,   176,   177,   178,
     591,   592,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   594,   191,   192,   595,   194,   596,   195,   597,
     196,   197,   198,   199,   200,   201,   598,   599,   202,   203,
     204,   205,   600,   601,   206,   207,   208,   209,   210,   602,
     211,   212,   213,   603,   214,   215,   216,   604,   217,   218,
     219,   220,   605,   222,   223,   224,   225,   226,   227,   606,
     607,   229,   608,   230,   231,   609,   233,   610,   234,   611,
     235,   612,   613,   614,   238,   239,   615,   616,   242,   617,
     243,   618,   619,   620,   246,   247,   621,   248,   249,   250,
     251,   252,   950,   254,   622,   256,   257,   258,   259,   623,
     260,   261,   262,   263,   264,   265,   266,   624,   267,   625,
     626,   270,   271,   272,   273,   274,   627,   628,   629,   630,
     631,   278,   632,   633,   281,   634,   283,   284,   285,   286,
     287,   288,   635,   636,   289,   637,   291,   638,   639,   293,
     294,   295,   296,   297,   298,   299,   300,   640,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   641,   642,
     643,   325,   326,   327,   644,   645,   329,   330,   646,   332,
     647,   648,   334,   649,   336,   337,   338,   650,   339,   340,
     651,   652,   341,   342,   343,   653,   654,   344,   345,   655,
     656,   348,   657,   658,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   659,   660,   661,   662,   362,
     363,   663,   664,   366,   367,   665,   369,   370,   371,   666,
     372,   373,   374,   375,   376,   377,   667,   378,   379,   380,
     381,   382,   668,   384,   385,   386,   387,   669,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   670,   401,   402,   671,   404,   405,   406,   672,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   673,   674,   421,   422,   423,   424,   425,   426,
     675,   428,   429,   676,   677,   431,   432,   678,   434,   679,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   680,   448,   681,   682,   683,   450,   451,   684,
     452,   685,   454,   455,   456,   457,   458,   686,   459,   687,
     688,   689,   690,   462,   463,   691,   465,   692,   693,   467,
     468,   694,   470,   471,   472,   473,   474,   695,   696,   475,
     476,   477,   697,   478,   479,   480,   481,   698,   482,   483,
     484,   485,   486,   699,   700,   489,   701,   490,   702,   492,
     493,   494,   495,   496,   497,   498,   703,   704,   499,   705,
     706,   500,   501,   502,   503,   504,   505,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   517,   518,
     519,   520,   560,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,   561,
     126,   127,   128,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   130,   131,   571,   132,   133,   134,   572,   136,
     137,   138,   573,   574,   575,   576,   577,   578,   144,   145,
     146,   147,   148,   149,   579,   580,   150,   151,   152,   153,
     581,   582,   156,   583,   157,   158,   159,   160,   584,   585,
     586,   587,   588,   164,   165,   166,   167,   168,   589,   170,
     171,   172,   590,   173,   174,   175,   176,   177,   178,   591,
     592,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   594,   191,   192,   595,   194,   596,   195,   597,   196,
     197,   198,   199,   200,   201,   598,   599,   202,   203,   204,
     205,   600,   601,   206,   207,   208,   209,   210,   602,   211,
     212,   213,   603,   214,   215,   216,   604,   217,   218,   219,
     220,   605,   222,   223,   224,   225,   226,   227,   606,   607,
     229,   608,   230,   231,   609,   233,   610,   234,   611,   235,
     612,   613,   614,   238,   239,   615,   616,   242,   617,   243,
     618,   619,   620,   246,   247,   621,   248,   249,   250,   251,
     252,   253,   254,   622,   256,   257,   258,   259,   623,   260,
     261,   262,   263,   264,   265,   266,   624,   267,   625,   626,
     270,   271,   272,   273,   274,   627,   628,   629,   630,   631,
     278,   632,   633,   281,   634,   283,   284,   285,   286,   287,
     288,   635,   636,   289,   637,   291,   638,   639,   293,   294,
     295,   296,   297,   298,   299,   300,   640,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   641,   642,   643,
     325,   326,   327,   644,   645,   329,   330,   646,   332,   647,
     648,   334,   649,   336,   337,   338,   650,   339,   340,   651,
     652,   341,   342,   343,   653,   654,   344,   345,   655,   656,
     348,   657,   658,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   659,   660,   661,   662,   362,   363,
     663,   664,   366,   367,   665,   369,   370,   371,   666,   372,
     373,   374,   375,   376,   377,   667,   378,   379,   380,   381,
     382,   668,   384,   385,   386,   387,   669,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     670,   401,   402,   671,   404,   405,   406,   672,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   673,   674,   421,   422,   423,   424,   425,   426,   675,
     428,   429,   676,   677,   431,   432,   678,   434,   679,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   680,   448,   681,   682,   683,   450,   451,   684,   452,
     685,   454,   455,   456,   457,   458,   686,   459,   687,   688,
     689,   690,   462,   463,   691,   465,   692,   693,   467,   468,
     694,   470,   471,   472,   473,   474,   695,   696,   475,   476,
     477,   697,   478,   479,   480,   481,   698,   482,   483,   484,
     485,   486,   699,   700,   489,   701,   490,   702,   492,   493,
     494,   495,   496,   497,   498,   703,   704,   499,   705,   706,
     500,   501,   502,   503,   504,   505,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   517,   518,   519,
     520,   560,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     118,   119,   120,   121,  2278,   123,   124,   125,   561,   126,
     127,   128,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   130,   131,   571,   132,   133,   134,   572,   136,   137,
     138,   573,   574,   575,   576,   577,   578,   144,   145,   146,
     147,   148,   149,   579,   580,   150,   151,   152,   153,   581,
     582,   156,   583,   157,   158,   159,   160,   584,   585,   586,
     587,   588,   164,   165,   166,   167,   168,   589,   170,   171,
     172,   590,   173,   174,   175,   176,   177,   178,   591,   592,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     594,   191,   192,   595,   194,   596,   195,   597,   196,   197,
     198,   199,   200,   201,   598,   599,   202,   203,   204,   205,
     600,   601,   206,   207,   208,  2279,   210,   602,   211,   212,
     213,   603,   214,   215,   216,   604,   217,   218,   219,   220,
     605,   222,   223,   224,   225,   226,   227,   606,   607,   229,
     608,   230,   231,   609,   233,   610,   234,   611,   235,   612,
     613,   614,   238,   239,   615,   616,   242,   617,   243,   618,
     619,   620,   246,   247,   621,   248,   249,   250,   251,   252,
     253,   254,   622,   256,   257,   258,   259,   623,   260,   261,
     262,   263,   264,   265,   266,   624,   267,   625,   626,   270,
     271,   272,   273,   274,   627,   628,   629,   630,   631,   278,
     632,   633,   281,   634,   283,   284,   285,   286,   287,   288,
     635,   636,   289,   637,   291,   638,   639,   293,   294,   295,
     296,   297,   298,   299,   300,   640,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   641,   642,   643,   325,
     326,   327,   644,   645,   329,   330,   646,   332,   647,   648,
     334,   649,   336,   337,   338,   650,   339,   340,   651,   652,
     341,   342,   343,   653,   654,   344,   345,   655,   656,   348,
     657,   658,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   659,   660,   661,   662,   362,   363,   663,
     664,   366,   367,   665,   369,   370,   371,   666,   372,   373,
     374,   375,   376,   377,   667,   378,   379,   380,   381,   382,
     668,   384,   385,   386,   387,   669,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   670,
     401,   402,   671,   404,   405,   406,   672,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     673,   674,   421,   422,   423,   424,   425,  2280,   675,   428,
     429,   676,   677,   431,   432,   678,   434,   679,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     680,   448,   681,   682,   683,   450,   451,   684,   452,   685,
     454,   455,   456,   457,   458,   686,   459,   687,   688,   689,
     690,   462,   463,   691,   465,   692,   693,   467,   468,   694,
     470,   471,   472,   473,   474,   695,   696,   475,   476,   477,
     697,   478,   479,   480,   481,   698,   482,   483,   484,   485,
     486,   699,   700,   489,   701,   490,   702,   492,   493,   494,
     495,   496,   497,   498,   703,   704,   499,   705,   706,   500,
     501,   502,   503,   504,   505,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   517,   518,   519,   520,
     974,     0,   821,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
     128,     0,     0,     0,   565,     0,     0,     0,     0,   570,
     130,   131,     0,   132,   133,   134,   572,   136,   137,   138,
     573,   574,   575,   576,   577,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   150,   151,   152,   153,   581,   582,
     156,     0,   157,   158,   159,   160,   584,     0,   586,     0,
     588,   164,   165,   166,   167,   168,   589,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,   592,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   594,
     191,   192,   595,   194,     0,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   605,
     222,   223,   224,   225,   226,   227,   606,  1364,   229,     0,
     230,   231,   609,   233,     0,   234,     0,   235,   612,     0,
     614,   238,   239,   615,   616,   242,     0,   243,     0,   619,
     620,   246,   247,     0,   248,   249,   250,   251,   252,   253,
     254,   622,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,   625,   626,   270,   271,
     272,   273,   274,   627,   628,     0,   630,     0,   278,   632,
     633,   281,   634,   283,   284,   285,   286,   287,   288,     0,
       0,   289,   637,   291,   638,     0,   293,   294,   295,   296,
     297,   298,   299,   300,   640,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   641,   642,   643,   325,   326,
     327,   644,     0,   329,   330,   646,   332,     0,   648,   334,
     649,   336,   337,   338,     0,   339,   340,  1365,     0,   341,
     342,   343,     0,     0,   344,   345,   655,   656,   348,   657,
     658,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   663,   664,
     366,   367,   665,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   668,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,   671,   404,   405,   406,   672,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
     674,   421,   422,   423,   424,   425,   426,   675,   428,   429,
       0,   677,   431,   432,   678,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   680,
     448,   681,     0,     0,   450,   451,     0,   452,   685,   454,
     455,   456,   457,   458,     0,   459,   687,   688,     0,     0,
     462,   463,   691,   465,   692,  1366,   467,   468,   694,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     699,   700,   489,     0,   490,   702,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   517,   518,   519,   520,   974,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       3,     4,     0,   565,     0,     0,     0,     0,   570,   130,
     131,     0,   132,   133,   134,   572,   136,   137,   138,   573,
     574,   575,   576,   577,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,   153,   581,   582,   156,
       0,   157,   158,   159,   160,   584,     0,   586,     0,   588,
     164,   165,   166,   167,   168,   589,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,   592,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   594,   191,
     192,   595,   194,     0,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   605,   222,
     223,   224,   225,   226,   227,   606,     0,   229,     0,   230,
     231,   609,   233,     0,   234,     0,   235,   612,     0,   614,
     238,   239,   615,   616,   242,     0,   243,     0,   619,   620,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
     622,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,   625,   626,   270,   271,   272,
     273,   274,   627,   628,     0,   630,     0,   278,   632,   633,
     281,   634,   283,   284,   285,   286,   287,   288,     0,     0,
     289,   637,   291,   638,     0,   293,   294,   295,   296,   297,
     298,   299,   300,   640,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   641,   642,   643,   325,   326,   327,
     644,     0,   329,   330,   646,   332,     0,   648,   334,   649,
     336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
     343,     0,     0,   344,   345,   655,   656,   348,   657,   658,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   663,   664,   366,
     367,   665,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   668,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
     671,   404,   405,   406,   672,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,   674,
     421,   422,   423,   424,   425,   426,   675,   428,   429,     0,
     677,   431,   432,   678,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   680,   448,
     681,     0,     0,   450,   451,     0,   452,   685,   454,   455,
     456,   457,   458,     0,   459,   687,   688,     0,     0,   462,
     463,   691,   465,   692,     0,   467,   468,   694,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   699,
     700,   489,     0,   490,   702,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   517,   518,   519,   520,   117,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,     0,     0,     0,     0,     0,   129,   130,   131,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   790,   150,   151,   152,   153,   154,   155,   156,     0,
     157,   158,   159,   160,   791,     0,   792,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   793,     0,   229,     0,   230,   231,
     232,   233,     0,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,     0,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,     0,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,     0,   795,   334,   335,   336,
     337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
       0,     0,   344,   345,   346,   347,   348,   349,   797,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   798,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   800,
       0,     0,   450,   451,     0,   452,   453,   454,   455,   456,
     457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
     801,   465,   802,     0,   467,   468,   803,   470,   471,   472,
     473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
     489,     0,   490,   491,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   117,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,     0,     0,     0,   129,   130,   131,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
     208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,     0,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,     0,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,     0,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,     0,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
       0,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     0,
       0,   450,   451,     0,   452,   453,   454,   455,   456,   457,
     458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
     465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
       0,   490,   491,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   528,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
     133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,   154,   155,   156,  1767,   157,   158,
     159,   160,   161,     0,     0,  1768,   163,   164,   165,   166,
     167,   168,     0,   170,   171,   172,  1769,   173,   174,   175,
     176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
       0,   234,  1770,   235,     0,     0,     0,   238,   239,   529,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   251,   252,  1771,   254,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
     276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
     284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
       0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
     370,   371,  1772,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
     450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
       0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
     466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,  1773,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
     490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   528,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
     134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,   153,   154,   155,   156,  1767,   157,   158,   159,
     160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
     168,     0,   170,   171,   172,  1769,   173,   174,   175,   176,
     177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
     234,  1770,   235,     0,     0,     0,   238,   239,   529,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
       0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
     285,   286,   287,   288,     0,     0,   289,     0,   291,  2360,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
       0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
     345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
     371,  1772,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
     451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
     459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
    1773,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
       0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   528,     0,   554,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     3,     4,     0,     0,     0,
       0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
       0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
     152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
     161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
       0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
       0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
     250,   251,   252,   253,   254,     0,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
       0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
     277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
     286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
     293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
     332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
     346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
       0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
     460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   528,     0,   554,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
     555,   126,   127,   128,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
     136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
     153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
       0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
     235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
     251,   252,   253,   254,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
     269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
       0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
     287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
     294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
       0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
       0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   364,     0,   366,   367,   368,   556,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
     452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
     461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   528,     0,   554,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
     137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
     154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
       0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
       0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
     270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
     278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
     288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
     325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
     796,   341,   342,   343,     0,     0,   344,   345,   346,     0,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
       0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
       0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   528,     0,   554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
     138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
     155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
       0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
       0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
     904,   254,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
     271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
       0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
       0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
     296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,   796,
     341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
     454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
       0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
       0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     528,     0,   554,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,   948,   126,   127,
     128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
     139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
     156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
     163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
       0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,   249,   250,   251,   252,   253,
     254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
     272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
       0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
       0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
     297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
     327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
     342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
     448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
     455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
     462,   463,   464,   465,   466,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
       0,   554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
     131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
     140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
       0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
     164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,  1184,   227,   228,     0,   229,     0,   230,
     231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
     238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
       0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
     273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
     281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
     289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
     298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
     328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
     336,   337,   338,     0,   339,   340,     0,   796,   341,   342,
     343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
       0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
       0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
     449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
     456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
     463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
     488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
     554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
       0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
       0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
     157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
     165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
     239,   529,     0,  1986,     0,   243,     0,   244,   245,   246,
     247,     0,   248,   249,   250,   251,   252,   253,   254,     0,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
     274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
       0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
       0,   291,     0,     0,   293,   294,  1987,   296,   297,   298,
     299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
       0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
     337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
       0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
       0,     0,   450,   451,  1988,   452,     0,   454,  1989,   456,
    1990,   458,     0,   459,   460,   461,     0,     0,   462,   463,
     464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
     473,   474,     0,     0,   475,   476,  1991,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
     489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   528,     0,   554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
     132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
     158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
     166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
     208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
     529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
     275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
     283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
     291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
     300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
     329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
       0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
       0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
     458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
     465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
       0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   528,     0,   821,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   130,   131,     0,   132,
     133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
     159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
     167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
       0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
     276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
     284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
       0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
     450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
       0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
     466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
     490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   528,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,   827,   126,   127,   128,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
     134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
     160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
     168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
     234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
     828,     0,   243,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
       0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
     285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
       0,   293,   294,   829,   296,   297,   298,   299,   300,   530,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
       0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
     345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     830,   426,   427,   428,   429,     0,     0,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
     451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
     459,   831,   461,     0,     0,   832,   463,   464,   465,   466,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,   488,   833,     0,   490,
       0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   528,     0,   554,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
       0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
     152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
     161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
       0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
       0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
     250,   251,   252,   253,   254,     0,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
       0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
     277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
     286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
     293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
     332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
     346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   866,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
       0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
     460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   528,     0,   554,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
     136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
     153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
       0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
     235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
     251,   252,   899,   254,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
     269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
       0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
     287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
     294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
       0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
       0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
     452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
     461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   528,     0,   554,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
     137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
     154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
       0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
       0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
     252,   902,   254,     0,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
     270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
     278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
     288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
     325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
       0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
       0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
       0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   528,     0,   554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
     138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
     155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
       0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
       0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
     906,   254,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
     271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
       0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
       0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
     296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
     341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
     454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
       0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
       0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     528,     0,   554,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
     128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
     139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
     156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
     163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
       0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,   249,   250,   251,   252,   936,
     254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
     272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
       0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
       0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
     297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
     327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
     342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
     448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
     455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
     462,   463,   464,   465,   466,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
       0,   554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
     131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
     140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
       0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
     164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
     238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,   249,   250,   251,   252,   964,   254,
       0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
     273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
     281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
     289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
     298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
     328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
     336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
     343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
       0,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
       0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
     449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
     456,   457,   458,     0,   459,   460,   461,     0,     0,   462,
     463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
     488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
     554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
       0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
       0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
     157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
     165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
     239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,   249,   250,   251,   252,   967,   254,     0,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
     274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
       0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
       0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
     299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
       0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
     337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
       0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
       0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
     457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
     464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
     473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
     489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   528,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,     0,  1010,     0,     0,   130,   131,     0,
     132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
     158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
     166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
     208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
     529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   251,   252,   253,   254,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
     275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
     283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
     291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
     300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
     329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
       0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
       0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
     458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
     465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
       0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   528,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,     0,  1037,     0,     0,   130,   131,     0,   132,
     133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
     159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
     167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
       0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
     276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
     284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
       0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,   428,   429,     0,     0,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
     450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
       0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
     466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
     490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   528,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,   827,   126,   127,   128,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
     134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
     160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
     168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
     234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   251,   252,   253,   254,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
       0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
     285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
       0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
     345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
     451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
     459,   831,   461,     0,     0,   832,   463,   464,   465,   466,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
       0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   528,     0,   554,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
       0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
     152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
     161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
       0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
       0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
     250,   251,   252,  1322,   254,     0,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
       0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
     277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
     286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
     293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
     332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
     346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
       0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
     460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   528,     0,   554,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
     136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
     153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
       0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
     235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
     251,   252,  1324,   254,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
     269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
       0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
     287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
     294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
       0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
       0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
     452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
     461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   528,     0,   554,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
     137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
     154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
       0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
       0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
     252,  1327,   254,     0,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
     270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
     278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
     288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
     325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
       0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
       0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
       0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   528,     0,   554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
     138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
     155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
       0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
       0,     0,   238,   239,   529,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
    1329,   254,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
     271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
       0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
       0,     0,   289,     0,   291,     0,     0,   293,   294,   295,
     296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
     341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,   428,
     429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
     454,   455,   456,   457,   458,     0,   459,   460,   461,     0,
       0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
       0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   487,   488,   489,     0,   490,     0,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     528,     0,   554,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
     128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
     139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
     156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
     163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
       0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,   249,   250,   251,   252,  2274,
     254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
     272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
       0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
       0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
     297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
     327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
     342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
     448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
     455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
     462,   463,   464,   465,   466,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,  1499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,  1500,     0,     0,  -767,     0,  1501,   130,
     131,     0,   132,   133,   134,  1502,   136,   137,   138,     0,
    1503,  1504,  1505,  1506,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,   153,  1507,  1508,   156,
       0,   157,   158,   159,   160,     0,     0,  1509,     0,  1510,
     164,   165,   166,   167,   168,  1511,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,  1512,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,  1513,   191,
     192,  1514,   194,     0,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,  1077,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,     0,   222,
     223,   224,   225,   226,   227,     0,     0,   229,     0,   230,
     231,  1515,   233,     0,   234,     0,   235,  1516,     0,  1517,
     238,   239,  -767,  1518,   242,     0,   243,     0,     0,     0,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
    1519,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,  1520,     0,   270,   271,   272,
     273,   274,  1521,  1522,     0,  1523,     0,   278,  1524,  1525,
     281,  1526,   283,   284,   285,   286,   287,   288,     0,     0,
     289,  1527,   291,  1528,     0,   293,   294,   295,   296,   297,
     298,   299,   300,  1529,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,  1530,  1531,  1532,   325,   326,   327,
       0,     0,   329,   330,  1533,   332,     0,     0,   334,  1534,
     336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
     343,     0,     0,   344,   345,     0,  1535,   348,  1536,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,     0,  1537,   366,
     367,     0,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,  1538,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
    1539,   404,   405,   406,  1540,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,  1541,
     421,   422,   423,   424,   425,   426,  1542,   428,   429,     0,
    1543,   431,   432,  1544,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,  1545,   448,
       0,     0,     0,   450,   451,     0,   452,  1546,   454,   455,
     456,   457,   458,     0,   459,  1547,  1548,     0,     0,   462,
     463,     0,   465,     0,     0,   467,   468,  1549,   470,   471,
     472,   473,   474,  1550,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,     0,
    1551,   489,     0,   490,  1552,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   528,     0,   554,     0,     0,     0,     0,
       0,     0,     0,     0,   517,   518,   519,   520,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
     136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
     153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
       0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
     235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
     251,   252,  3042,   254,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
     269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
       0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
     287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
     294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
       0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
       0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
     452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
     461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   528,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   130,   131,     0,   132,   133,   134,     0,   136,
     137,   138,   139,   140,     0,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
     154,   155,   156,     0,   157,   158,   159,   160,   161,     0,
       0,     0,   163,   164,   165,   166,   167,   168,     0,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
       0,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,   208,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,     0,   234,     0,   235,
       0,     0,     0,   238,   239,   529,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,     0,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,     0,   269,
     270,   271,   272,   273,   274,   275,   276,     0,   277,     0,
     278,     0,     0,   281,     0,   283,   284,   285,   286,   287,
     288,     0,     0,   289,     0,   291,     0,     0,   293,   294,
     295,   296,   297,   298,   299,   300,   530,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   324,
     325,   326,   327,   328,     0,   329,   330,     0,   332,     0,
     333,   334,   335,   336,   337,   338,     0,   339,   340,     0,
       0,   341,   342,   343,     0,     0,   344,   345,   346,     0,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
     364,     0,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,     0,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,     0,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   531,   448,   449,     0,     0,   450,   451,     0,   452,
       0,   454,   455,   456,   457,   458,     0,   459,   460,   461,
       0,     0,   462,   463,   464,   465,   466,     0,   467,   468,
     469,   470,   471,   472,   473,   474,     0,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,   487,   488,   489,     0,   490,     0,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   528,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     118,   119,   120,   121,   122,   123,   124,   125,     0,   126,
     127,   128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   130,   131,     0,   132,   133,   134,     0,   136,   137,
     138,   139,   140,     0,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   150,   151,   152,   153,   154,
     155,   156,     0,   157,   158,   159,   160,   161,     0,     0,
       0,   163,   164,   165,   166,   167,   168,     0,   170,   171,
     172,     0,   173,   174,   175,   176,   177,   178,     0,     0,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,   200,   201,     0,     0,   202,   203,   204,   205,
       0,     0,   206,   207,   208,   209,   210,     0,   211,   212,
     213,     0,   214,   215,   216,     0,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,     0,   234,     0,   235,     0,
       0,     0,   238,   239,   529,     0,   843,     0,   243,     0,
     244,   245,   246,   247,     0,   248,   249,   250,   251,   252,
     253,   254,     0,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,   265,   266,     0,   267,     0,   269,   270,
     271,   272,   273,   274,   275,   276,     0,   277,     0,   278,
       0,     0,   281,     0,   283,   284,   285,   286,   287,   288,
       0,     0,   289,     0,   291,     0,     0,   293,   294,   844,
     296,   297,   298,   299,   300,   530,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   324,   325,
     326,   327,   328,     0,   329,   330,     0,   332,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,     0,     0,
     341,   342,   343,     0,     0,   344,   345,   346,     0,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,     0,     0,   362,   363,   364,
       0,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,     0,
     401,   402,     0,   404,   405,   406,   407,   408,   409,   410,
     411,   845,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   846,   426,   427,   428,
     429,     0,     0,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     531,   448,   449,     0,     0,   450,   451,     0,   452,     0,
     454,   455,   456,   457,   458,     0,   459,   847,   461,     0,
       0,   462,   463,   464,   465,   466,     0,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,   475,   476,   477,
       0,   478,   479,   480,   481,     0,   482,   483,   484,   485,
     486,   487,   488,   848,     0,   490,     0,   492,   493,   494,
     495,   496,   497,   498,     0,     0,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     528,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
     128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     130,   131,     0,   132,   133,   134,     0,   136,   137,   138,
     139,   140,     0,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   150,   151,   152,   153,   154,   155,
     156,     0,   157,   158,   159,   160,   161,     0,     0,     0,
     163,   164,   165,   166,   167,   168,     0,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,     0,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,   208,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
       0,   238,   239,   529,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,   249,   250,   251,   252,   960,
     254,     0,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,     0,   269,   270,   271,
     272,   273,   274,   275,   276,     0,   277,     0,   278,     0,
       0,   281,     0,   283,   284,   285,   286,   287,   288,     0,
       0,   289,     0,   291,     0,     0,   293,   294,   295,   296,
     297,   298,   299,   300,   530,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   324,   325,   326,
     327,   328,     0,   329,   330,     0,   332,     0,   333,   334,
     335,   336,   337,   338,     0,   339,   340,     0,     0,   341,
     342,   343,     0,     0,   344,   345,   346,     0,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,   364,     0,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,     0,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   531,
     448,   449,     0,     0,   450,   451,     0,   452,     0,   454,
     455,   456,   457,   458,     0,   459,   460,   461,     0,     0,
     462,   463,   464,   465,   466,     0,   467,   468,   469,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
     487,   488,   489,     0,   490,     0,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   528,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   118,   119,
     120,   121,   122,   123,   124,   125,     0,   126,   127,   128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   130,
     131,     0,   132,   133,   134,     0,   136,   137,   138,   139,
     140,     0,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   150,   151,   152,   153,   154,   155,   156,
       0,   157,   158,   159,   160,   161,     0,     0,     0,   163,
     164,   165,   166,   167,   168,     0,   170,   171,   172,     0,
     173,   174,   175,   176,   177,   178,     0,     0,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
     200,   201,     0,     0,   202,   203,   204,   205,     0,     0,
     206,   207,   208,   209,   210,     0,   211,   212,   213,     0,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,     0,   234,     0,   235,     0,     0,     0,
     238,   239,   529,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,   249,   250,   251,   252,   253,   254,
       0,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,   265,   266,     0,   267,     0,   269,   270,   271,   272,
     273,   274,   275,   276,     0,   277,     0,   278,     0,     0,
     281,     0,   283,   284,   285,   286,   287,   288,     0,     0,
     289,     0,   291,     0,     0,   293,   294,   295,   296,   297,
     298,   299,   300,   530,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   324,   325,   326,   327,
     328,     0,   329,   330,     0,   332,     0,   333,   334,   335,
     336,   337,   338,     0,   339,   340,     0,     0,   341,   342,
     343,     0,     0,   344,   345,   346,     0,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,     0,     0,   362,   363,   364,     0,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,     0,   401,   402,
       0,   404,   405,   406,   407,   408,   409,   410,   411,   845,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,   428,   429,     0,
       0,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   531,   448,
     449,     0,     0,   450,   451,     0,   452,     0,   454,   455,
     456,   457,   458,     0,   459,   847,   461,     0,     0,   462,
     463,   464,   465,   466,     0,   467,   468,   469,   470,   471,
     472,   473,   474,     0,     0,   475,   476,   477,     0,   478,
     479,   480,   481,     0,   482,   483,   484,   485,   486,   487,
     488,   489,     0,   490,     0,   492,   493,   494,   495,   496,
     497,   498,     0,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   528,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   118,   119,   120,
     121,   122,   123,   124,   125,     0,   126,   127,   128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   130,   131,
       0,   132,   133,   134,     0,   136,   137,   138,   139,   140,
       0,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   150,   151,   152,   153,   154,   155,   156,     0,
     157,   158,   159,   160,   161,     0,     0,     0,   163,   164,
     165,   166,   167,   168,     0,   170,   171,   172,     0,   173,
     174,   175,   176,   177,   178,     0,     0,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,   200,
     201,     0,     0,   202,   203,   204,   205,     0,     0,   206,
     207,   208,   209,   210,     0,   211,   212,   213,     0,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,     0,   234,     0,   235,     0,     0,     0,   238,
     239,   529,     0,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,   249,   250,   251,   252,  1331,   254,     0,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
     265,   266,     0,   267,     0,   269,   270,   271,   272,   273,
     274,   275,   276,     0,   277,     0,   278,     0,     0,   281,
       0,   283,   284,   285,   286,   287,   288,     0,     0,   289,
       0,   291,     0,     0,   293,   294,   295,   296,   297,   298,
     299,   300,   530,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   324,   325,   326,   327,   328,
       0,   329,   330,     0,   332,     0,   333,   334,   335,   336,
     337,   338,     0,   339,   340,     0,     0,   341,   342,   343,
       0,     0,   344,   345,   346,     0,   348,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,     0,     0,   362,   363,   364,     0,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,     0,   401,   402,     0,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,   428,   429,     0,     0,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   531,   448,   449,
       0,     0,   450,   451,     0,   452,     0,   454,   455,   456,
     457,   458,     0,   459,   460,   461,     0,     0,   462,   463,
     464,   465,   466,     0,   467,   468,   469,   470,   471,   472,
     473,   474,     0,     0,   475,   476,   477,     0,   478,   479,
     480,   481,     0,   482,   483,   484,   485,   486,   487,   488,
     489,     0,   490,     0,   492,   493,   494,   495,   496,   497,
     498,     0,     0,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   528,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   118,   119,   120,   121,
     122,   123,   124,   125,     0,   126,   127,   128,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   130,   131,     0,
     132,   133,   134,     0,   136,   137,   138,   139,   140,     0,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   150,   151,   152,   153,   154,   155,   156,     0,   157,
     158,   159,   160,   161,     0,     0,     0,   163,   164,   165,
     166,   167,   168,     0,   170,   171,   172,     0,   173,   174,
     175,   176,   177,   178,     0,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,   200,   201,
       0,     0,   202,   203,   204,   205,     0,     0,   206,   207,
     208,   209,   210,     0,   211,   212,   213,     0,   214,   215,
     216,     0,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,     0,   234,     0,   235,     0,     0,     0,   238,   239,
     529,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,   249,   250,   251,   252,  1342,   254,     0,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,   265,
     266,     0,   267,     0,   269,   270,   271,   272,   273,   274,
     275,   276,     0,   277,     0,   278,     0,     0,   281,     0,
     283,   284,   285,   286,   287,   288,     0,     0,   289,     0,
     291,     0,     0,   293,   294,   295,   296,   297,   298,   299,
     300,   530,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   324,   325,   326,   327,   328,     0,
     329,   330,     0,   332,     0,   333,   334,   335,   336,   337,
     338,     0,   339,   340,     0,     0,   341,   342,   343,     0,
       0,   344,   345,   346,     0,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,     0,     0,   362,   363,   364,     0,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,   428,   429,     0,     0,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   531,   448,   449,     0,
       0,   450,   451,     0,   452,     0,   454,   455,   456,   457,
     458,     0,   459,   460,   461,     0,     0,   462,   463,   464,
     465,   466,     0,   467,   468,   469,   470,   471,   472,   473,
     474,     0,     0,   475,   476,   477,     0,   478,   479,   480,
     481,     0,   482,   483,   484,   485,   486,   487,   488,   489,
       0,   490,     0,   492,   493,   494,   495,   496,   497,   498,
       0,     0,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   528,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
       0,     0,     0,  1695,     0,     0,   130,   131,     0,   132,
     133,   134,     0,   136,   137,   138,   139,   140,     0,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,   154,   155,   156,     0,   157,   158,
     159,   160,   161,     0,     0,     0,   163,   164,   165,   166,
     167,   168,     0,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,     0,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,   208,
     209,   210,     0,   211,   212,   213,     0,   214,   215,   216,
       0,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
       0,   234,     0,   235,     0,     0,     0,   238,   239,   529,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,     0,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,     0,   269,   270,   271,   272,   273,   274,   275,
     276,     0,   277,     0,   278,     0,     0,   281,     0,   283,
     284,   285,   286,   287,   288,     0,     0,   289,     0,   291,
       0,     0,   293,   294,   295,   296,   297,   298,   299,   300,
     530,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   324,   325,   326,   327,   328,     0,   329,
     330,     0,   332,     0,   333,   334,   335,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,   346,     0,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,   364,     0,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,     0,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,     0,   427,   428,   429,     0,     0,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   531,   448,   449,     0,     0,
     450,   451,     0,   452,     0,   454,   455,   456,   457,   458,
       0,   459,   460,   461,     0,     0,   462,   463,   464,   465,
     466,     0,   467,   468,   469,   470,   471,   472,   473,   474,
       0,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,   487,   488,   489,     0,
     490,     0,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   528,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   118,   119,   120,   121,   122,   123,
     124,   125,     0,   126,   127,   128,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   130,   131,     0,   132,   133,
     134,     0,   136,   137,   138,   139,   140,     0,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   150,
     151,   152,   153,   154,   155,   156,     0,   157,   158,   159,
     160,   161,     0,     0,     0,   163,   164,   165,   166,   167,
     168,     0,   170,   171,   172,     0,   173,   174,   175,   176,
     177,   178,     0,     0,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,   200,   201,     0,     0,
     202,   203,   204,   205,     0,     0,   206,   207,   208,   209,
     210,     0,   211,   212,   213,     0,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,     0,
     234,     0,   235,     0,     0,     0,   238,   239,   529,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
     249,   250,   251,   252,  1881,   254,     0,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,   265,   266,     0,
     267,     0,   269,   270,   271,   272,   273,   274,   275,   276,
       0,   277,     0,   278,     0,     0,   281,     0,   283,   284,
     285,   286,   287,   288,     0,     0,   289,     0,   291,     0,
       0,   293,   294,   295,   296,   297,   298,   299,   300,   530,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   324,   325,   326,   327,   328,     0,   329,   330,
       0,   332,     0,   333,   334,   335,   336,   337,   338,     0,
     339,   340,     0,     0,   341,   342,   343,     0,     0,   344,
     345,   346,     0,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,     0,
       0,   362,   363,   364,     0,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,     0,   401,   402,     0,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,   428,   429,     0,     0,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   531,   448,   449,     0,     0,   450,
     451,     0,   452,     0,   454,   455,   456,   457,   458,     0,
     459,   460,   461,     0,     0,   462,   463,   464,   465,   466,
       0,   467,   468,   469,   470,   471,   472,   473,   474,     0,
       0,   475,   476,   477,     0,   478,   479,   480,   481,     0,
     482,   483,   484,   485,   486,   487,   488,   489,     0,   490,
       0,   492,   493,   494,   495,   496,   497,   498,     0,     0,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   528,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
       0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
     152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
     161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
       0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
       0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,   249,
     250,   251,   252,  2261,   254,     0,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
       0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
     277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
     286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
     293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
     332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
     346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
       0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
     460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   528,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   130,   131,     0,   132,   133,   134,     0,
     136,   137,   138,   139,   140,     0,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
     153,   154,   155,   156,     0,   157,   158,   159,   160,   161,
       0,     0,     0,   163,   164,   165,   166,   167,   168,     0,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,     0,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,   208,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,     0,   234,     0,
     235,     0,     0,     0,   238,   239,   529,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,   249,   250,
     251,   252,  2276,   254,     0,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,     0,
     269,   270,   271,   272,   273,   274,   275,   276,     0,   277,
       0,   278,     0,     0,   281,     0,   283,   284,   285,   286,
     287,   288,     0,     0,   289,     0,   291,     0,     0,   293,
     294,   295,   296,   297,   298,   299,   300,   530,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     324,   325,   326,   327,   328,     0,   329,   330,     0,   332,
       0,   333,   334,   335,   336,   337,   338,     0,   339,   340,
       0,     0,   341,   342,   343,     0,     0,   344,   345,   346,
       0,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,   364,     0,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,     0,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,   428,   429,     0,     0,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   531,   448,   449,     0,     0,   450,   451,     0,
     452,     0,   454,   455,   456,   457,   458,     0,   459,   460,
     461,     0,     0,   462,   463,   464,   465,   466,     0,   467,
     468,   469,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,   487,   488,   489,     0,   490,     0,   492,
     493,   494,   495,   496,   497,   498,     0,     0,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,  1499,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   118,   119,   120,   121,   122,   123,   124,   125,     0,
     126,   127,   128,     0,     0,     0,  1500,     0,     0,     0,
       0,  1501,   130,   131,     0,   132,   133,   134,  1502,   136,
     137,   138,     0,  1503,  1504,  1505,  1506,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   150,   151,   152,   153,
    1507,  1508,   156,     0,   157,   158,   159,   160,     0,     0,
    1509,     0,  1510,   164,   165,   166,   167,   168,  1511,   170,
     171,   172,     0,   173,   174,   175,   176,   177,   178,     0,
    1512,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,  1513,   191,   192,  1514,   194,     0,   195,     0,   196,
     197,   198,   199,   200,   201,     0,     0,   202,   203,   204,
     205,     0,     0,   206,   207,  1077,   209,   210,     0,   211,
     212,   213,     0,   214,   215,   216,     0,   217,   218,   219,
     220,     0,   222,   223,   224,   225,   226,   227,     0,     0,
     229,     0,   230,   231,  1515,   233,     0,   234,     0,   235,
    1516,     0,  1517,   238,   239,     0,  1518,   242,     0,   243,
       0,     0,     0,   246,   247,     0,   248,   249,   250,   251,
     252,   253,   254,  1519,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,   265,   266,     0,   267,  1520,     0,
     270,   271,   272,   273,   274,  1521,  1522,     0,  1523,     0,
     278,  1524,  1525,   281,  1526,   283,   284,   285,   286,   287,
     288,     0,     0,   289,  1527,   291,  1528,     0,   293,   294,
     295,   296,   297,   298,   299,   300,  1529,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,  1530,  1531,  1532,
     325,   326,   327,     0,     0,   329,   330,  1533,   332,     0,
       0,   334,  1534,   336,   337,   338,     0,   339,   340,     0,
       0,   341,   342,   343,     0,     0,   344,   345,     0,  1535,
     348,  1536,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,     0,     0,   362,   363,
       0,  1537,   366,   367,     0,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,  1538,   384,   385,   386,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
       0,   401,   402,  1539,   404,   405,   406,  1540,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,  1541,   421,   422,   423,   424,   425,   426,  1542,
     428,   429,     0,  1543,   431,   432,  1544,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,  1545,   448,     0,     0,     0,   450,   451,     0,   452,
    1546,   454,   455,   456,   457,   458,     0,   459,  1547,  1548,
       0,     0,   462,   463,     0,   465,     0,     0,   467,   468,
    1549,   470,   471,   472,   473,   474,  1550,     0,   475,   476,
     477,     0,   478,   479,   480,   481,     0,   482,   483,   484,
     485,   486,     0,  1551,   489,     0,   490,  1552,   492,   493,
     494,   495,   496,   497,   498,     0,     0,   499,     0,     0,
     500,   501,   502,   503,   504,   505,  1499,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   517,   518,   519,
     520,     0,     0,     0,     0,   118,   119,   120,   121,   122,
     123,   124,   125,     0,   126,   127,   128,     0,     0,     0,
    1500,     0,     0,     0,     0,  1501,   130,   131,     0,   132,
     133,   134,  1502,   136,   137,   138,     0,  1503,  1504,  1505,
    1506,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     150,   151,   152,   153,  1507,  1508,   156,     0,   157,   158,
     159,   160,     0,     0,  1509,     0,  1510,   164,   165,   166,
     167,   168,  1511,   170,   171,   172,     0,   173,   174,   175,
     176,   177,   178,     0,  1512,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,  1513,   191,   192,  1514,   194,
       0,   195,     0,   196,   197,   198,   199,   200,   201,     0,
       0,   202,   203,   204,   205,     0,     0,   206,   207,  1077,
     209,   210,     0,   211,   212,   213,     0,  1857,   215,   216,
       0,   217,   218,   219,   220,     0,   222,   223,   224,   225,
     226,   227,     0,     0,   229,     0,   230,   231,  1515,   233,
       0,   234,     0,   235,  1516,     0,  1517,   238,   239,     0,
    1518,   242,     0,   243,     0,     0,     0,   246,   247,     0,
     248,   249,   250,   251,   252,   253,   254,  1519,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,   265,   266,
       0,   267,  1520,     0,   270,   271,   272,   273,   274,  1521,
    1522,     0,  1523,     0,   278,  1524,  1525,   281,  1526,   283,
     284,   285,   286,   287,   288,     0,     0,   289,  1527,   291,
    1528,     0,   293,   294,   295,   296,   297,   298,   299,   300,
    1529,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,  1530,  1531,  1532,   325,   326,   327,     0,     0,   329,
     330,  1533,   332,     0,     0,   334,  1534,   336,   337,   338,
       0,   339,   340,     0,     0,   341,   342,   343,     0,     0,
     344,   345,     0,  1535,   348,  1536,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
       0,     0,   362,   363,     0,  1537,   366,   367,     0,   369,
     370,   371,     0,   372,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,  1538,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,     0,   401,   402,  1539,   404,   405,
     406,  1540,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,  1541,   421,   422,   423,
     424,   425,   426,  1542,   428,   429,     0,  1543,   431,   432,
    1544,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,  1545,   448,     0,     0,     0,
     450,   451,     0,   452,  1546,   454,   455,   456,   457,   458,
       0,   459,  1547,  1548,     0,     0,   462,   463,     0,   465,
       0,     0,   467,   468,  1549,   470,   471,   472,   473,   474,
    1550,     0,   475,   476,   477,     0,   478,   479,   480,   481,
       0,   482,   483,   484,   485,   486,     0,  1551,   489,     0,
     490,  1552,   492,   493,   494,   495,   496,   497,   498,     0,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
    3224,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   517,   518,   519,   520,     0,     0,     0,     0,   118,
     119,   120,   121,   122,   123,   124,   125,     0,   126,   127,
     128,     0,     0,     0,  2965,     0,     0,     0,     0,  2966,
     130,   131,     0,   132,   133,   134,  2967,   136,   137,   138,
       0,  1503,  2968,  1505,  1506,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   150,   151,   152,   153,  1507,  1508,
     156,     0,   157,   158,   159,   160,     0,     0,  2969,     0,
    2970,   164,   165,   166,   167,   168,  2971,   170,   171,   172,
       0,   173,   174,   175,   176,   177,   178,     0,  2972,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,  1513,
     191,   192,  1514,   194,     0,   195,     0,   196,   197,   198,
     199,   200,   201,     0,     0,   202,   203,   204,   205,     0,
       0,   206,   207,  1077,   209,   210,     0,   211,   212,   213,
       0,   214,   215,   216,     0,   217,   218,   219,   220,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   229,     0,
     230,   231,  1515,   233,     0,   234,     0,   235,  2973,     0,
    2974,   238,   239,  2975,  2976,   242,     0,   243,     0,     0,
       0,   246,   247,     0,   248,   249,   250,   251,   252,   253,
     254,  2977,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,   265,   266,     0,   267,  2978,     0,   270,   271,
     272,   273,   274,  1521,  1522,     0,  1523,     0,   278,  2979,
    2980,   281,  2981,   283,   284,   285,   286,   287,   288,     0,
       0,   289,  2982,   291,  2983,     0,   293,   294,   295,   296,
     297,   298,   299,   300,  3225,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,  1530,  2985,  1532,   325,   326,
     327,     0,     0,   329,   330,  2987,   332,     0,     0,   334,
    1534,   336,   337,   338,     0,   339,   340,     0,     0,   341,
     342,   343,     0,     0,   344,   345,     0,  2989,   348,  2990,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,     0,     0,   362,   363,     0,  2991,
     366,   367,     0,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,  1538,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,     0,   401,
     402,  2992,   404,   405,   406,     0,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
    2993,   421,   422,   423,   424,   425,   426,     0,   428,   429,
       0,  2995,   431,   432,  1544,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,  3226,
     448,     0,     0,     0,   450,   451,     0,   452,  2997,   454,
     455,   456,   457,   458,     0,   459,  1547,  1548,     0,     0,
     462,   463,     0,   465,     0,     0,   467,   468,  2998,   470,
     471,   472,   473,   474,     0,     0,   475,   476,   477,     0,
     478,   479,   480,   481,     0,   482,   483,   484,   485,   486,
       0,  1551,   489,     0,   490,  3000,   492,   493,   494,   495,
     496,   497,   498,     0,     0,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   528,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   517,   518,   519,   520,     0,
       0,     0,     0,   118,   119,   120,   121,   122,   123,   124,
     125,     0,   126,   127,   128,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   130,   131,     0,   132,   133,   134,
       0,   136,   137,   138,   139,   140,     0,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   150,   151,
     152,   153,   154,   155,   156,     0,   157,   158,   159,   160,
     161,     0,     0,     0,   163,   164,   165,   166,   167,   168,
       0,   170,   171,   172,     0,   173,   174,   175,   176,   177,
     178,     0,     0,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,   200,   201,     0,     0,   202,
     203,   204,   205,     0,     0,   206,   207,   208,   209,   210,
       0,   211,   212,   213,     0,   214,   215,   216,     0,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,     0,   234,
       0,   235,     0,     0,     0,   238,   239,   529,     0,   242,
       0,   243,     0,   244,   245,     0,   247,     0,   248,   249,
     250,   251,   252,   253,   254,     0,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,   265,   266,     0,   267,
       0,   269,   270,   271,   272,   273,   274,   275,   276,     0,
     277,     0,   278,     0,     0,   281,     0,   283,   284,   285,
     286,   287,   288,     0,     0,   289,     0,   291,     0,     0,
     293,   294,   295,   296,   297,   298,   299,   300,   530,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   324,   325,   326,   327,   328,     0,   329,   330,     0,
     332,     0,   333,   334,   335,   336,   337,   338,     0,   339,
     340,     0,     0,   341,   342,   343,     0,     0,   344,   345,
     346,     0,   348,     0,   350,   351,   352,   353,   354,   355,
     356,     0,   358,   359,   360,   361,     0,     0,     0,     0,
     362,   363,   364,     0,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,     0,   382,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,     0,   401,   402,     0,   404,   405,   406,   407,
       0,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,     0,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   531,   448,   449,     0,     0,   450,   451,
       0,   452,     0,   454,   455,   456,   457,   458,     0,   459,
     460,   461,     0,     0,   462,   463,   464,   465,   466,     0,
     467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
     475,   476,   477,     0,   478,   479,   480,   481,     0,   482,
     483,   484,   485,   486,   487,   488,   489,     0,   490,     0,
     492,   493,   494,   495,   496,   497,   498,     0,     0,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,  1794,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   118,   119,   120,   121,   122,   123,   124,   125,
       0,   126,   127,   128,     0,     0,     0,  1500,     0,     0,
       0,     0,  1501,   130,   131,     0,   132,   133,   134,  1502,
     136,   137,   138,     0,  1503,  1504,  1505,  1506,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   150,   151,   152,
     153,  1507,  1508,   156,     0,   157,   158,   159,   160,     0,
       0,  1509,     0,  1510,   164,   165,   166,   167,   168,  1511,
     170,   171,   172,     0,   173,   174,   175,   176,   177,   178,
       0,  1512,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,  1513,   191,   192,  1514,   194,     0,   195,     0,
     196,   197,   198,   199,   200,   201,     0,     0,   202,   203,
     204,   205,     0,     0,   206,   207,  1077,   209,   210,     0,
     211,   212,   213,     0,   214,   215,   216,     0,   217,   218,
     219,   220,     0,   222,   223,   224,   225,   226,   227,     0,
       0,   229,     0,   230,   231,  1515,   233,     0,   234,     0,
     235,  1516,     0,  1517,   238,   239,     0,  1518,   242,     0,
     243,     0,     0,     0,   246,   247,     0,   248,   249,   250,
     251,   252,   253,   254,  1519,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,   265,   266,     0,   267,  1520,
       0,   270,   271,   272,   273,   274,  1521,  1522,     0,  1523,
       0,   278,  1524,  1525,   281,  1526,   283,   284,   285,   286,
     287,   288,     0,     0,   289,  1527,   291,  1528,     0,   293,
     294,   295,   296,   297,   298,   299,   300,     0,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,  1530,  1531,
    1532,   325,   326,   327,     0,     0,   329,   330,  1533,   332,
       0,     0,   334,  1534,   336,   337,   338,     0,   339,   340,
       0,     0,   341,   342,   343,     0,     0,   344,   345,     0,
    1535,   348,  1536,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,     0,     0,   362,
     363,     0,  1537,   366,   367,     0,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,  1538,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,     0,   401,   402,  1539,   404,   405,   406,     0,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,  1541,   421,   422,   423,   424,   425,   426,
       0,   428,   429,     0,  1543,   431,   432,  1544,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,     0,   448,     0,     0,     0,   450,   451,     0,
     452,  1546,   454,   455,   456,   457,   458,     0,   459,  1547,
    1548,     0,     0,   462,   463,     0,   465,     0,     0,   467,
     468,  1549,   470,   471,   472,   473,   474,     0,     0,   475,
     476,   477,     0,   478,   479,   480,   481,     0,   482,   483,
     484,   485,   486,     0,  1551,   489,     0,   490,  1552,   492,
     493,   494,   495,   496,   497,   498,     0,     1,   499,     0,
       0,   500,   501,   502,   503,   504,   505,     2,     0,     3,
       4,     0,     0,     0,     0,     0,     0,     0,   517,   518,
     519,   520,     0,     0,     0,     0,     0,     6,     0,     0,
       0,     0,     0,     0,     0,     0,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       8,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    10,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    11,     0,   751,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    14,    15,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   752,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,    23,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1318,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    25,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      26,    27,    28,     0,     0,     0,     0,     0,    29,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,    32,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,    35,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    36,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      37,     0,     0,     0,    38,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    39,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    40,     0,     0,
       0,     0,     0,    42,     0,     0,     0,     0,    43,     0,
       0,     0,     0,   753,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    44,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    45,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   754
};

static const yytype_int16 yycheck[] =
{
       7,    86,    87,   524,   841,   903,     0,   889,   746,    16,
       0,    84,   982,   930,    23,    46,    23,   815,     0,  1442,
      16,     0,     0,     0,     7,     0,     0,    38,     0,  1243,
       0,     0,  1721,   999,   754,  1256,   914,  1242,    20,  1320,
      23,  1175,  1458,  1045,    20,   865,   982,   935,  1230,     7,
      20,  1217,   990,  1097,  1680,    88,   990,   990,  1046,  1492,
      37,   990,  1652,  1571,  2021,    23,  2217,  1219,  1180,  2272,
      17,  2203,   969,  1222,   965,     0,     0,    86,    87,    86,
      87,     0,  1298,  2182,     0,  2184,  2384,  1603,  1345,   982,
      88,    45,    23,     0,  2098,  1247,  2669,  1825,  1633,  1634,
     111,  2707,  2268,    86,    87,     0,     0,  1140,  2148,   903,
    2669,   905,  1145,   907,     0,  2705,  2022,     0,  2202,     0,
    2320,  2321,  2322,   100,   753,   747,  2729,  2538,    86,    87,
    1008,     0,     0,     0,   810,    12,     0,  2722,   754,  1105,
     816,  1849,     0,     0,     0,     0,  2338,     0,     0,     0,
    1120,     0,    12,  2625,     0,    86,    87,  2629,     3,  1071,
    1072,     0,    12,  1151,     3,     3,     0,     3,   988,  1843,
       0,  1684,     3,  2838,   772,    16,  1088,  1741,     4,     3,
       3,  1151,  1739,     3,  2351,     3,     3,  1997,     3,     3,
    3051,  2357,     3,   991,     3,     3,     3,  1652,     3,     3,
    2010,     3,     3,     3,     3,     3,  2350,  2350,     3,  1961,
    3038,    81,     3,     3,     3,  1151,     3,     3,     3,    52,
       3,     3,  2346,     3,    89,   997,  3054,    52,     3,   180,
       3,   198,     3,     3,     3,   100,  1046,    33,     4,     4,
       3,     3,  1230,    39,   126,   146,   131,  1846,  2414,  2415,
       8,  2417,    12,    12,    12,   114,     8,    16,    34,    12,
      12,  1231,   982,  1265,  1234,  1235,  2483,  1184,    20,    21,
      20,    21,  1274,   107,   179,    12,    12,   107,    12,  1157,
      12,    12,    12,   179,  1104,    16,   807,    12,    20,    21,
      20,    21,    20,    21,    12,  1231,  2893,    12,  1234,  1235,
      12,    12,    20,    21,    12,    12,   176,    70,    70,    20,
      21,   884,   884,   179,    11,    70,   992,   114,    60,    16,
      10,     3,   860,  1457,     3,    10,    11,    12,  1004,   295,
      18,    16,  1320,   854,   188,    23,    12,   297,  3229,    11,
      18,   129,   252,    97,    16,    23,   252,   805,   144,   252,
      16,    41,    42,   298,   983,   298,  1637,   320,  1492,   191,
    1542,  2874,    62,  2876,   113,    53,   114,  2466,    71,  1206,
    1207,   200,   129,  2585,   375,  2587,    18,   124,    81,   398,
      22,    23,   136,    18,   129,  3011,  2586,    22,    23,   173,
    1210,    47,    47,  3391,   200,   286,    18,  1367,  1368,    87,
     139,   180,   129,  3158,  3424,  3160,    87,    37,    40,    37,
     352,  1328,    48,   376,  2639,    45,   115,   144,    53,    37,
    1230,  2994,  1304,    37,  1196,   169,  3254,  3319,   416,  3321,
    1075,    45,   220,  1205,    66,  2638,   487,  3467,    18,   124,
    3046,   127,   184,  2171,   514,   115,  1091,   169,    82,   391,
    3360,  3057,    87,  3556,   425,   283,   127,   527,  3048,   201,
     511,    90,  2613,   297,   206,    87,   336,   297,    37,  2635,
     380,  2637,  1360,    53,    89,   220,    45,   380,   464,   179,
    1989,  1990,  1991,   126,   426,   100,  2526,    10,   178,    12,
     180,   479,   463,  1774,  3597,  3515,   273,   133,  3359,  1931,
     199,   245,   244,  3395,  1548,   301,   525,    87,   171,   258,
    1320,   139,   403,    20,    21,   347,   202,   115,  3516,   268,
    2745,   139,  3552,   245,   525,  3280,   155,   183,   183,  1046,
    1962,   202,   280,   297,   368,   477,   365,   316,   368,   525,
     287,   226,   438,  3453,   376,   248,  3456,   331,   458,   492,
     294,   328,   458,   292,  1542,   458,   362,   520,   525,   525,
    1018,   315,   539,   248,  2154,   525,  2778,   426,   364,  3082,
    1168,   476,   438,   438,   525,  3172,  2743,  2794,   155,   464,
     525,  2014,   483,   380,   466,   455,   593,  1108,   389,  2755,
     423,  2735,  2735,  3454,  2718,  1507,  1508,   593,   423,  3490,
     396,  3227,  1768,   464,   367,   367,  1344,  2564,   335,  1347,
     464,   287,   367,  1829,   474,   525,   279,  1355,   514,   525,
    1532,   303,   525,   402,   303,  1595,  1463,  3455,  1448,   221,
     207,   527,  2148,   461,  1891,  1208,  1208,  1607,  3303,  1609,
    3550,  1361,  1923,  1181,   287,  1482,   523,  1861,   525,  1637,
     527,  2186,   426,   487,  1935,     3,  3229,   487,  3243,   401,
    2224,  1631,  1434,  1435,   525,   525,  2223,   174,  1440,  2479,
    3229,   467,  2424,   461,  2382,   525,   525,   431,  2352,   528,
    1682,   526,   528,   524,  1965,  1906,  1598,  1599,   526,   528,
     526,  1972,   526,  2206,   528,   526,   526,   523,   528,  2154,
    2216,   527,   526,   526,   461,  3177,   526,  2910,   526,   526,
    3182,   526,   526,  1230,  3125,   526,   461,   526,   526,   526,
     805,   526,   526,   754,   526,  2917,   526,   526,   526,  1351,
    2011,   526,  1542,  1362,  2015,   526,   526,   526,   156,   526,
     526,   526,  3040,   526,   526,  1361,   526,   754,  1626,  1627,
    1628,   526,  3358,   526,  1574,   526,   526,   526,   524,   524,
    2359,  1581,  2043,  3366,   525,   525,   525,   525,  1738,  1739,
    1590,   753,   525,   525,   805,   525,   406,   489,   754,  1455,
    3365,   124,   489,   753,  1604,   475,  1774,   794,   525,   525,
     208,   525,   406,   525,   525,   525,   805,   525,   805,   511,
     525,   812,  2018,  1320,   511,   812,  2890,   525,   475,  1629,
     525,   794,  2769,   525,   525,   487,   889,   525,   525,   516,
     517,   171,   805,   438,   857,   525,  2830,  1637,  1798,   812,
    3030,   516,   517,   521,   841,   842,   794,   406,  1808,   511,
    1974,  1811,   523,   521,   516,   517,   527,   805,   257,   860,
     516,   517,   366,   352,   812,   198,  2939,  2897,   865,   857,
    3466,  3451,  1798,   794,   440,  1023,   528,   878,  1870,  1514,
    3036,  1029,  1808,   282,   805,  1811,   518,   519,   520,   521,
    2014,   812,   396,   518,   519,   520,   521,   863,   238,  1534,
     413,   414,   391,  2483,   181,  1793,  2853,  2803,  3417,  3418,
      70,  2807,  2808,   523,   898,   912,   913,   527,   898,   916,
     917,  1649,   866,  1581,   490,  2172,   898,  3490,  3508,   898,
     898,   898,  1590,   898,   898,  1570,   898,   426,   898,   898,
    1015,  3490,   523,  1018,   525,  1923,   527,  1907,     0,   282,
      33,   514,  1027,   489,  1826,  1827,  1828,  1935,   282,   139,
    3469,  1984,   525,    12,    12,  1727,  2684,  2685,  2467,  2468,
    2469,  2470,   969,  1851,  1774,   511,   253,    78,    79,  3267,
    3576,  1907,  1766,   898,   898,   982,   111,  1965,   477,   898,
     987,   988,   898,   154,  1972,  3188,   993,  1018,   935,   996,
     997,   898,   999,  1000,  1001,  1002,   266,   267,  1889,  1793,
    1897,   983,  1893,   898,   898,  1896,  1015,   252,  1015,  1018,
    2526,  1018,   898,   983,  1907,   898,  2551,   898,  1027,  1813,
    1027,   252,  2445,  2011,  1818,  1542,   489,  2015,   348,   898,
     898,   898,  1015,  2021,   898,  1018,  3168,  1044,  1045,  1046,
     898,   898,   898,   898,  1027,   898,   898,   898,   511,  2465,
    1057,   144,   523,   188,   225,  2043,   527,  1015,  2028,   282,
    1018,  1057,   525,  1070,   287,   352,  1804,   843,   844,  1027,
     846,  1809,   848,   185,  1105,   133,   134,  2189,    89,  2191,
    2361,  2295,  1089,   185,  1015,  2593,   252,  1018,    44,   100,
     139,   525,   282,  1100,  1101,  1102,  1027,  1104,  1105,   794,
    1621,   252,   292,  3186,   391,   234,   169,  2323,   489,   169,
     280,   174,  2246,  1923,   174,   385,   386,   812,   167,  3076,
    1637,   179,  3205,   346,   181,  1935,   430,    89,   432,  1136,
     511,  3334,   303,  2944,   126,   380,   248,  2865,   100,   426,
     234,  2952,    20,    21,   525,   280,   248,  1154,  1155,   380,
    1970,   280,  2304,  2669,  1914,  1965,  1189,  1190,  1918,  1192,
     525,  1921,  1972,    44,  1936,  1937,  1938,  1939,  1940,  1941,
    1181,   115,  1944,  1945,  1946,  1947,  1948,  1949,  1950,  1951,
    1952,  1953,   245,   362,  1191,   245,   280,  1907,  1195,  1196,
     477,  1189,  1190,   430,  1192,   432,   253,   367,  1205,  1206,
    1207,  2011,    18,  1210,  2794,  2015,    22,    23,   301,   321,
     387,  2021,  2178,   458,   380,  2185,    18,  2498,   387,  2368,
      22,    23,   214,  1230,   180,  2374,   396,   458,   523,   380,
     210,   294,   527,  2043,   294,  1246,    11,    15,   287,  2059,
      18,    16,    11,   292,    22,    23,   259,    16,    26,    27,
      28,    53,  2222,  2223,   348,   520,   520,  1774,  1265,   443,
     216,   185,   527,   527,   322,   323,   324,  1274,   380,    11,
     399,   364,   426,   366,    16,   387,   232,  1028,   380,   477,
     525,  1032,   523,   454,   525,    87,   242,   487,   280,   489,
     282,  1298,   458,   384,   525,   352,   430,   387,   432,   180,
     435,  2183,   174,   396,    66,   399,  1447,   458,  1449,  1450,
     430,    37,   432,  1320,  2134,     5,     6,  2278,   430,  2280,
     432,    11,    20,    21,   248,  1319,    16,    17,   430,  1336,
     432,   389,   461,    25,   391,   216,    20,    21,  1345,  2772,
    1336,  1319,   400,   525,  1319,  1319,   458,  2481,    20,    21,
    2484,   232,   525,  2635,  1361,  2637,   458,  2129,  2130,   525,
     881,   242,   883,   525,   422,  3568,    92,   461,   426,   426,
      20,    21,  1379,  2361,   525,   101,   525,  1384,    20,    21,
    1362,  2897,   525,  1379,  2275,  1361,  2277,  1472,  2669,   525,
    1475,   179,  1362,   525,    81,  1480,   445,   525,  1483,   125,
      87,   459,  3553,  1488,  3555,   210,  1923,   456,    20,    21,
      20,    21,   470,   100,  2251,   371,   525,   179,  1935,   525,
     477,   525,  3521,   115,    20,    21,   518,  1434,  1435,   487,
      20,    21,  2349,  1440,   390,  1442,  3535,   124,  2652,   126,
    1447,  1448,  1449,  1450,   511,  3596,  2651,     4,  1965,   843,
     844,   229,   846,   511,   848,  1972,  1463,  1464,   508,  1442,
      20,    21,  2683,  1472,   525,  1472,  1475,   525,  1475,   297,
    2636,  1480,   198,  1480,  1483,  1482,  1483,  2249,   231,  1488,
      33,  1488,    20,    21,  1442,   211,    39,  2531,  2532,  1472,
     371,  3590,  1475,   527,  2011,  2700,  3595,  1480,  2015,   508,
    1483,  2650,   178,  2652,  2021,  1488,   430,     3,   432,   390,
    2498,  1442,    20,    21,  1472,    20,    21,  1475,   828,   829,
     830,   299,  1480,   833,   525,  1483,  2043,   214,  1046,   526,
    1488,   526,  2502,  2503,   458,  1542,    20,    21,   154,    20,
      21,  1472,    33,   526,  1475,    20,    21,   179,    39,  1480,
     302,  2361,  1483,   169,    20,    21,    66,  1488,   174,   525,
     322,   323,   324,    20,    21,    20,    21,  1574,  2506,  2507,
    2508,  2505,  2538,  2506,  1581,   380,  2564,  2506,  2507,  2399,
     427,  1571,  1589,  1590,  3312,  3313,   391,    20,    21,  1571,
    1597,   144,  1571,   508,  1571,   282,   231,  1604,   159,  1571,
     287,  1571,  1571,    15,    20,    21,    18,    20,    21,   225,
      22,    23,    20,    21,    26,    27,    28,  1624,  1625,    20,
      21,   426,  1629,   360,    12,  1632,   159,   389,   159,   245,
    1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,
     375,   376,   159,  1650,  1651,  1652,   375,   376,  1655,   336,
    1646,    47,  1659,   144,  2392,  1662,  1663,  1664,  1665,  1666,
    1667,  1668,  1669,  1670,   426,   159,  1673,   354,   375,   376,
     375,   376,   477,  1680,   526,  1682,   270,   271,   294,  2960,
    2400,  2669,   385,   386,   469,   470,   412,   303,  2498,   415,
     426,  1724,   525,  1700,  1652,   997,  3322,   459,   282,  2669,
     516,   517,   518,   519,   520,   521,  2379,  2380,   470,  2208,
    2209,    47,  1230,  3229,   516,   517,   518,   519,   520,   521,
    1727,  1697,  3530,  3531,  2602,    96,  1724,  3562,  3563,  1154,
    1155,  1738,  1739,   139,   512,   513,   514,   477,   516,   517,
     518,   519,   520,   521,  2958,  2911,   491,   527,   301,   159,
     159,   139,   159,   297,  2564,   159,   362,   438,     6,   525,
     185,   167,    10,   525,   525,   196,   197,  1774,   455,   525,
      18,   526,   428,   227,   525,   307,  1783,   464,  1785,   167,
     232,  2769,   525,   232,    32,   210,    33,  1783,    36,  1785,
    2627,   232,    39,   525,   206,   304,  2568,  2569,    47,   243,
     525,    16,  1320,    12,    12,   525,   332,   360,  2690,   525,
     301,   364,  2994,  3034,    33,  2732,   525,   229,  1825,   525,
      39,    12,  1829,   248,  2712,  1832,  1833,    12,   525,  3518,
      12,   154,   525,  3522,  2804,   266,   267,  3118,   454,    12,
     525,   488,   525,   396,  2361,   309,   169,     3,  3271,  1014,
    1046,   174,   111,     3,  1019,  1020,  1021,  2748,   526,  2669,
      47,   227,   396,  1870,  2866,  2853,    33,   174,   294,   360,
     174,  1036,    39,   364,   292,  1040,   282,   302,   154,   243,
      66,   287,   525,   438,  1891,   525,   292,   299,  3577,  1866,
    1897,     3,  1899,   169,   282,   100,   438,   144,   174,   287,
    1907,    66,   225,  1205,   292,   396,    66,   523,   438,   438,
     526,   527,   273,  1998,   467,   115,  1923,     4,    33,  2004,
    1927,  1928,   245,  1930,    39,   144,   229,   438,  1935,  1936,
    1937,  1938,  1939,  1940,  1941,   438,   487,  1944,  1945,  1946,
    1947,  1948,  1949,  1950,  1951,  1952,  1953,   387,  3229,   225,
     107,   282,  1959,  1960,   385,   386,  1963,   159,  1965,  2769,
     282,   525,    47,  1970,   282,  1972,   282,   525,   282,   245,
     206,   294,  2960,   179,  3490,   159,   467,   144,   527,  2949,
     303,  2498,    81,    20,  2954,   526,   526,  1994,     3,  1998,
     179,  1998,   484,  2000,  2766,  2004,   289,  2004,   526,   526,
     525,  3424,   526,   526,  2011,   430,  2994,   432,  2015,   232,
    2017,  2018,   526,  2949,  2021,  1998,   232,  1046,   294,  2791,
     526,  2004,   289,   525,  1542,   124,   525,   303,     3,   144,
     455,  3001,  3002,   458,  1230,  3240,  2043,   527,   474,   445,
    1998,   527,  3465,  2853,    46,   525,  2004,  2564,  2055,   525,
     456,   525,  2059,  2060,   301,   525,   525,   445,     4,  3475,
       3,  2799,     9,   525,   483,    16,   436,  1998,   456,  2841,
    2961,  2962,   525,  2004,   436,   362,    18,   524,     3,   436,
     287,   188,   301,   525,   438,   179,   170,     3,  3076,   526,
    2097,   464,  3515,   225,  2101,     3,   788,   273,   399,  2106,
     512,   513,   514,  2134,   516,   517,   518,   519,   520,   521,
     234,     3,     3,   360,   188,   298,   320,   364,   227,  1637,
     525,    44,  2129,  2130,  1320,  3091,    49,  2134,   820,   526,
    3118,   454,  1434,  1435,   301,  3356,   234,   282,  1440,   320,
     303,   360,   234,  2150,   341,   364,  2153,  2154,  2155,   396,
    2960,   295,  2669,   845,   159,   159,   477,   525,   525,   159,
    2932,  3295,   487,   159,  2171,  2172,     3,     3,    47,   159,
      10,  2178,  2181,   525,  2181,   297,   282,   396,   454,    10,
     297,    47,    66,   282,  2994,   108,   301,   879,   287,  2198,
     179,  2198,  2930,   360,    18,    47,  2154,   364,  2181,    15,
     523,  1230,    18,   174,   527,   525,    22,    23,  2215,  3490,
      26,    27,    28,   526,   526,  2198,   526,   526,   188,   525,
     467,   174,    10,  2181,    46,  2232,  2233,   525,    10,   396,
     526,   523,   523,     3,   524,   438,     9,   336,   526,    89,
    2198,  3229,  2249,   438,  2251,   360,  3216,  3217,   467,   364,
    2181,   526,  2769,  2260,   527,   354,  1774,   180,   438,  3229,
     438,   526,   526,   508,   508,   115,  3076,  2198,   526,   526,
     360,  2278,  2279,  2280,   527,   155,   526,   508,   179,  3493,
     526,   396,  2278,  2279,  2280,   525,   438,   525,   525,  3206,
     982,  1320,   525,   216,   162,   257,   525,    47,   990,    15,
     467,    66,    18,  3075,     3,   484,    22,    23,  3118,   232,
    2317,     7,     8,   514,   476,   298,  2323,    13,   510,   242,
     298,   461,     3,    19,  2355,   251,    66,    23,    66,    25,
     438,   181,   273,    29,    30,    31,  2853,    53,    34,   159,
     210,    37,    38,   282,    60,    41,  1542,   159,    44,    45,
    2344,  3071,   467,   276,  2361,   525,   455,   159,   438,   438,
     210,   438,   438,    47,   525,   464,  2344,   289,   289,  2344,
    2344,    87,   526,   526,  2381,   362,  1678,  2384,   525,     3,
     295,    47,   487,  2904,   297,   159,     8,   287,  2384,   526,
      86,    87,  2399,  2400,   179,   525,   525,    66,   526,   322,
    2407,   526,   193,   253,   100,  1923,   329,    47,   526,   185,
     174,  2407,   108,   109,   110,   111,   112,  1935,  1110,  3229,
      87,   523,   526,   526,   150,  1727,     3,    67,  1120,   526,
       3,   206,   179,   526,   210,   526,   152,   525,  2445,     4,
       3,  1637,   525,  2960,   308,   526,  3324,  1965,   371,   368,
    1142,   298,   525,   188,  1972,   526,  3293,   159,    15,  1151,
       3,  3281,  2445,  3283,   526,    22,    23,   390,   184,    26,
      27,    28,   248,   113,   525,  1046,  2483,  2994,   183,   526,
     449,   526,   526,   299,   527,   201,   525,  2445,   526,   525,
     206,  2498,     3,  2011,   525,    47,    93,  2015,  3296,  2510,
    3298,    47,  3490,  2021,   464,    47,  2579,  2538,     3,  3426,
    2517,   179,   525,  1542,  2445,  3481,  2523,  2524,   526,  3291,
    3490,   486,     3,   526,   206,  2043,   302,   526,   244,   524,
     380,  2538,   524,   526,  3416,    47,   459,  3435,   526,    62,
     526,   391,   526,  2574,    47,  2552,   470,   514,  2555,   297,
    2557,    66,   526,   526,   526,   487,   212,  2564,  2565,  3076,
     526,  2568,  2569,   124,    67,    47,  2573,  2574,   525,   209,
     234,    95,  3409,  2580,   199,   287,   426,   287,  1774,   527,
     438,    47,   527,   299,   438,   514,   109,   527,  2595,   527,
     527,   527,   527,   527,   527,   526,  2627,   527,  2605,   449,
     527,  3118,   282,  2593,   380,   114,   526,   130,  1637,   527,
     113,  2593,   487,   527,  2593,   527,  2593,   527,   258,   524,
    2627,  2593,  2599,  2593,  2593,   148,   524,   477,   268,   152,
     527,   527,   527,   124,  1936,  1937,  1938,  1939,  1940,  1941,
     280,   527,  1944,  1945,  1946,  1947,  1948,  1949,  1950,  1951,
    1952,  1953,   175,   527,   430,   178,   432,   526,  2665,  1230,
     527,   297,  2669,  2670,  2671,   527,   527,   527,   527,  2665,
     527,   194,   312,   449,  2670,  2671,   527,  2684,  2685,   455,
    3490,   527,   458,   527,   527,   401,  1378,   426,   179,   527,
     525,   525,   525,    16,     3,   525,   512,   513,   514,   361,
     516,   517,   518,   519,   520,   521,   209,   525,   343,     3,
    2741,   526,  3229,    66,   206,   526,   524,  2711,     3,   526,
     199,     3,    98,   469,   354,  3463,   366,  1923,   526,  2706,
     525,    47,   159,  2711,   997,   527,  2711,  2711,   131,  1935,
     526,   159,   299,    47,   376,  1774,   526,   376,   179,  1320,
      47,   391,    47,     3,   526,   258,   179,  2734,   525,  2766,
    2791,   464,  2769,   525,   287,   268,   525,   317,   525,  1965,
     410,   287,   295,   256,   198,   464,  1972,   280,   449,  2786,
    2787,   525,    81,   300,  2791,    81,    87,  2794,  2873,    16,
     526,   378,   526,   509,   317,   525,   524,   526,    66,   524,
     516,   517,   518,   519,   520,   521,   140,    13,   100,   312,
     514,   280,   297,    19,  2821,  2011,   449,    47,   525,  2015,
     311,   469,   300,   346,    30,  2021,   300,  2129,  2130,   526,
     525,   322,   323,   324,  2841,   526,   526,   212,    44,    45,
    2847,  2848,   297,  2361,   540,  2852,  2853,  2043,   297,   545,
    2857,   526,   548,  2860,  2861,   396,  2887,   129,  2865,  2866,
     556,   461,  2869,   366,  2873,   375,  2873,  3388,   155,    32,
      43,   375,    15,  2880,  2954,    18,   305,  1791,  2273,    22,
      23,  2653,  1699,    26,    27,    28,   526,  2665,   391,  1254,
    2873,   322,   323,   324,  1923,  2316,   789,  1835,   389,   322,
     323,   324,  2343,   109,  2407,  3071,  1935,   410,  2702,  3441,
    3545,  3199,  3494,  3503,  3538,  2873,  3256,  2924,  1217,  2266,
    2279,  3491,  2645,  3501,  2263,  2932,    15,  3489,  2671,    18,
    2723,  2379,  1316,    22,    23,   426,  1965,    26,    27,    28,
    2380,  1344,  2873,  1972,  2951,  2604,  1897,  2249,  2387,  3386,
    1361,  3325,  2603,  2960,    43,   512,   513,   514,   389,   516,
     517,   518,   519,   520,   521,  3465,   389,  3421,   459,  2593,
    3567,  1542,   879,  3490,  2249,  1174,  1016,  2215,  1199,   470,
    2498,  1016,  2011,  2465,  1763,  1198,  2015,  2994,  3475,  2232,
    3397,  3285,  2021,  1727,  1762,   426,   487,    23,  1690,    15,
    3114,  2198,    18,   426,  2009,  1201,    22,    23,  2445,  2489,
      26,    27,    28,  2794,  2043,   992,  2446,  3220,  2024,  2960,
     511,  1713,  1714,  1907,  1907,  1907,   990,    43,   459,   990,
    3401,   990,   990,  3040,   525,   990,   459,  3400,   990,   470,
      44,   990,  2056,  2524,  3040,    49,  2564,   470,  2216,  2154,
     746,   747,   748,  2061,  2151,  3062,   487,  2108,  2880,  2548,
    3091,  1697,   990,   206,  3071,  1464,  1637,  2017,  3075,  3076,
     898,   852,  3049,   990,  2842,    -1,    -1,  2844,    -1,    -1,
     511,    -1,    -1,    -1,  3091,    -1,   229,    -1,    -1,    -1,
      -1,    -1,   788,   789,   525,    -1,    -1,    -1,   794,    -1,
     796,    -1,   525,    -1,   108,    -1,    -1,    -1,    -1,   805,
      -1,  3118,    -1,   809,   810,    -1,   812,    -1,  3125,   815,
     816,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1821,
      -1,    -1,   828,   829,   830,  3142,  3143,   833,    -1,  3146,
     229,  3148,  1834,  1835,    -1,   841,   842,   843,   844,    -1,
     846,  2669,   848,    -1,    -1,     0,   299,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   860,  2361,    -1,  3174,    -1,    -1,
     866,  1434,  1435,    -1,    -1,    20,   180,  1440,    23,   875,
      -1,    -1,   878,   879,   188,    -1,    -1,    -1,    -1,    -1,
    3197,    -1,    37,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    46,    -1,  1774,    -1,    -1,    -1,    -1,    -1,    -1,
     299,    -1,   216,   229,    -1,  1907,    -1,    -1,    -1,    -1,
      -1,  1913,  3229,    -1,    -1,    -1,    -1,    -1,   232,    -1,
      -1,   927,   928,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    86,    87,    88,    -1,    -1,   942,   943,   944,   945,
     946,  2769,    -1,    -1,    -1,   100,    -1,    -1,    -1,    -1,
    3267,    -1,    -1,   959,  3271,    -1,  2568,  2569,  3245,    -1,
      -1,  3267,   276,    -1,  3281,    -1,  3283,    -1,  3285,    -1,
      -1,    -1,  3289,   299,  3291,    -1,  3293,    -1,  3271,    -1,
      -1,    -1,    -1,   297,    -1,   991,   992,    -1,   994,    -1,
    3307,   997,  2498,    -1,    -1,  3312,  3313,  1003,  1004,    -1,
      -1,    -1,    -1,  3271,  1010,  3322,    -1,    -1,   322,  1015,
      -1,    -1,  1018,    -1,    -1,   329,    -1,    -1,  3335,    -1,
      -1,  1027,  2361,  3340,    -1,  2853,    -1,    -1,    -1,  3335,
    3271,  1037,    -1,    -1,    -1,    -1,  3323,    -1,    -1,  3326,
     556,    -1,  1923,    -1,    -1,    -1,    -1,    -1,  1054,    -1,
      -1,    -1,    -1,  1059,  1935,    -1,    -1,   371,  2564,   512,
     513,   514,    -1,   516,   517,   518,   519,   520,   521,    -1,
    3387,    -1,    -1,    -1,    -1,    15,   390,  3364,    18,    -1,
    3397,    -1,    22,    23,  1965,    -1,    26,    27,    28,    -1,
      -1,  1972,  3409,  3380,    -1,    -1,    -1,    -1,    -1,     0,
      -1,    -1,    -1,    43,    -1,    -1,    -1,  3424,    -1,    -1,
      -1,    -1,    -1,   512,   513,   514,    -1,   516,   517,   518,
     519,   520,   521,    -1,    -1,  3442,    -1,    -1,    -1,    -1,
    2011,  3424,  2960,    -1,  2015,    -1,    -1,    -1,    -1,    -1,
    2021,    -1,    -1,    -1,    -1,   459,    -1,    -1,  3465,    -1,
     464,    -1,    -1,  1159,  2766,    -1,  3424,    -1,    -1,  2498,
      -1,    -1,  2043,  2669,  3481,    -1,  2994,    -1,  1174,  1175,
      -1,    -1,  3465,  3490,  3491,  1181,    -1,    -1,    -1,  2791,
      -1,    -1,    -1,  3424,    -1,  3491,   512,   513,   514,    -1,
     516,   517,   518,   519,   520,   521,    -1,  3465,  3515,  1205,
    1206,  1207,    -1,    -1,    -1,    -1,   107,    -1,    -1,    -1,
    1216,  1217,  3529,  3530,  3531,    -1,    -1,    -1,    -1,    -1,
    3507,    -1,  3515,  1229,  3465,  2564,    -1,    -1,    -1,    -1,
      -1,    -1,   748,    -1,    -1,    -1,    -1,    -1,    -1,  3556,
    1246,    -1,    -1,    -1,  1250,    -1,  3533,  3515,  3076,  1255,
      -1,    -1,    -1,   154,    15,    -1,    -1,    18,    -1,    -1,
      -1,    22,    23,  2769,    -1,    26,    27,    28,   169,    -1,
      -1,    -1,    -1,   174,  3515,    -1,    -1,    -1,   179,    -1,
    3597,    -1,    43,  2285,    -1,    -1,    -1,   188,    -1,   229,
    3118,    -1,   193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1313,    -1,  1315,
      -1,    -1,    -1,    -1,    -1,  1321,    -1,    -1,    -1,    47,
    2932,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,  1335,
    2669,    -1,    -1,    -1,    -1,  2337,    -1,    -1,  1344,    67,
      -1,  1347,    -1,    -1,   245,  1351,  1352,  2853,  1354,  1355,
     866,    -1,    -1,  2355,    -1,    -1,    -1,    44,    -1,   299,
      -1,    -1,    49,  1936,  1937,  1938,  1939,  1940,  1941,    -1,
      -1,  1944,  1945,  1946,  1947,  1948,  1949,  1950,  1951,  1952,
    1953,    -1,    -1,    -1,   539,   113,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   294,    -1,    -1,   297,    -1,  2400,    -1,
      -1,  3229,   303,    -1,    -1,    -1,    -1,    -1,  2410,    -1,
    2412,    -1,    -1,    -1,  2416,    -1,  2418,    -1,    -1,    -1,
      -1,   108,    -1,    -1,    -1,    -1,    -1,    -1,  1434,  1435,
    2769,    -1,    -1,    -1,  1440,    -1,  1442,    -1,    -1,    -1,
      -1,    -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,  1455,
      -1,  1457,  1458,    -1,  2960,   183,    -1,  1463,  1464,  1465,
      -1,    -1,    -1,  3075,    -1,    -1,  1472,   368,   229,  1475,
      -1,    -1,    -1,    -1,  1480,    -1,  1482,  1483,    -1,    -1,
    2361,   209,  1488,    -1,  1490,    -1,  1492,    -1,  2994,    -1,
      -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    15,    -1,
      -1,    18,    -1,    -1,  2853,    22,    23,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,   426,    -1,    -1,    -1,   216,
     258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   299,    -1,
     268,    -1,    -1,    37,    -1,   232,    -1,    41,    -1,    -1,
      -1,    -1,   280,   454,   158,   242,  2129,  2130,    -1,    -1,
      -1,    -1,    -1,   464,    -1,    -1,    -1,    -1,    -1,    -1,
    3076,    -1,   512,   513,   514,   179,   516,   517,   518,   519,
     520,   521,    -1,   484,   312,   486,   487,    -1,    -1,   276,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1603,   753,   754,
      -1,    -1,    -1,    -1,    -1,    -1,   100,    -1,    -1,  1615,
     297,    -1,  3118,    -1,   108,    -1,   110,  2498,   112,    -1,
      -1,  2960,   523,    -1,    -1,   526,   527,   528,    -1,    -1,
      -1,    -1,    -1,    15,    -1,   322,    18,    -1,   366,   794,
      22,    23,   329,  1649,    -1,    -1,  1652,    -1,    -1,    -1,
     805,    -1,    -1,    -1,    -1,  2994,    -1,   812,  1174,    -1,
      -1,    -1,  3490,   391,    -1,    -1,    -1,  2669,    -1,    -1,
      -1,    53,    -1,    -1,  1680,    -1,    -1,    -1,    60,  3291,
      -1,    -1,   410,  2564,   371,    -1,    -1,    -1,    -1,  1695,
      -1,    -1,  1698,  1699,    -1,    -1,    -1,    -1,    -1,    -1,
    2702,    -1,   857,   390,  1710,    87,  1712,  1713,  1714,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,   323,
     324,  1727,   229,  3229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3076,    -1,    -1,
      -1,    -1,    -1,   898,    -1,    -1,  1752,    -1,  1754,    -1,
      -1,   512,   513,   514,    -1,   516,   517,   518,   519,   520,
     521,    -1,  1768,  1769,    -1,    -1,    -1,    -1,    -1,    -1,
     152,    -1,   459,  1779,  1780,  1781,  1782,   464,  1784,  3118,
      -1,    -1,    -1,    -1,  1790,   389,  1792,    -1,  2669,    -1,
      -1,    -1,   299,    -1,    -1,    -1,    -1,    -1,  1804,  1805,
      -1,    -1,   184,  1809,  1810,    -1,    -1,    -1,  1814,  1815,
    1816,  1817,    -1,  1819,  1820,    -1,    -1,    -1,    -1,   201,
      -1,    -1,   426,    -1,   206,    -1,    -1,    -1,   983,    -1,
    1836,    -1,    -1,    -1,    -1,    -1,  1352,    -1,  1354,  1845,
    1846,  1847,  1848,  1849,  1850,    -1,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    39,    -1,   459,    -1,    -1,  1864,    -1,
    1015,    47,   244,  1018,    -1,    -1,   470,    -1,    -1,    -1,
      -1,    -1,  1027,    -1,    -1,  2877,    -1,    -1,    -1,    -1,
    1886,    67,    -1,   487,    -1,    -1,    -1,   105,  2769,    -1,
    3229,    -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,    -1,
      -1,  1066,    -1,    -1,    -1,   133,   134,   299,   179,    -1,
      -1,   525,    -1,  1078,    -1,    -1,    -1,   113,    -1,    -1,
    1936,  1937,  1938,  1939,  1940,  1941,    -1,    -1,  1944,  1945,
    1946,  1947,  1948,  1949,  1950,  1951,  1952,  1953,    -1,    -1,
    1105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,   179,    -1,    -1,    -1,    -1,    -1,    -1,  1974,    -1,
      -1,    -1,  2853,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    44,  1988,    -1,  3490,    -1,    49,    -1,    -1,    -1,
      -1,    -1,  1998,    -1,    -1,  2568,  2569,    -1,  2004,    -1,
      -1,    -1,    -1,  2009,    -1,   512,   513,   514,  2014,   516,
     517,   518,   519,   520,   521,    -1,    -1,  2023,  2024,   401,
      -1,    -1,    -1,   209,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1189,  1190,    -1,  1192,    -1,    -1,
      -1,    -1,    -1,  3045,    -1,   108,   540,    -1,    -1,    -1,
    2056,   545,    -1,    -1,   548,    -1,    -1,    -1,    -1,    -1,
      -1,   322,   323,   324,    -1,    -1,    -1,    -1,    -1,  3071,
      13,    -1,   258,    -1,    -1,    -1,    19,    -1,    -1,  2960,
      23,    -1,   268,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      -1,    -1,  2098,    -1,   280,    -1,    -1,  2103,    -1,    -1,
      -1,    44,    45,    -1,   322,   323,   324,    -1,    -1,    -1,
      -1,    -1,    -1,  2994,    -1,   301,    -1,   180,     0,    -1,
      -1,    -1,    -1,  2129,  2130,    -1,   312,   509,   389,    -1,
      -1,    -1,    -1,    -1,   516,   517,   518,   519,   520,   521,
      -1,    -1,  2148,    86,    87,    -1,    -1,    -1,  2154,    -1,
      -1,  3490,    -1,   216,    -1,    -1,    -1,  3159,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   426,   109,    -1,    -1,   232,
      -1,   389,    -1,    -1,   360,  2181,    -1,    -1,   364,   242,
     366,    -1,   400,    -1,    -1,    -1,    -1,  2193,    -1,    -1,
      -1,    -1,  2198,  2766,    -1,  3076,  2202,    -1,   459,    -1,
      -1,    -1,    -1,    -1,   422,   391,    -1,  1362,   426,   470,
     396,    -1,    -1,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   410,   107,   487,  3229,   446,    -1,
      -1,    -1,    -1,    -1,   297,    -1,    -1,  3118,    -1,    -1,
    2246,   459,    -1,  2249,    -1,  2251,  2252,    -1,    -1,    -1,
     511,    -1,   470,  1769,    -1,    -1,    -1,    -1,    -1,   322,
      -1,    -1,  2268,  1779,   525,  1781,   329,    -1,  1784,   487,
      -1,    -1,   154,    -1,  1790,    -1,  1792,    -1,    -1,    -1,
      -1,   467,    -1,     0,    -1,    -1,    -1,   169,    -1,  1805,
      -1,    -1,   174,   511,  1810,    -1,    -1,   179,  1814,  1815,
    1816,  1817,   796,  1819,  1820,    -1,   188,   525,   371,    -1,
      -1,   193,    -1,    -1,    -1,    -1,    -1,  1472,    47,    -1,
    1475,    -1,    -1,    -1,    -1,  1480,    -1,   390,  1483,    -1,
      -1,    -1,  2338,  1488,    -1,    -1,    -1,    -1,    67,  2345,
      -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,  3229,    -1,
      -1,  2357,  2358,  2359,  2360,  3357,    -1,    -1,    -1,  2932,
      -1,    -1,    -1,   245,    -1,  2371,    -1,  2373,    -1,    -1,
    2376,    -1,    -1,    -1,    -1,    -1,  2382,    -1,    -1,    -1,
    2386,   875,    -1,    -1,   113,   114,  2392,    -1,    -1,    -1,
     107,    -1,    -1,    -1,    -1,   124,   459,    -1,    15,    -1,
      -1,    18,    -1,    -1,    -1,    22,    23,    -1,  2414,  2415,
      -1,  2417,   294,    -1,    -1,   297,  1571,    -1,    -1,    -1,
      -1,   303,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   927,    -1,    -1,    53,   154,    -1,  2445,
      -1,    -1,    -1,    60,    -1,   133,   134,    -1,   942,   943,
     944,   945,   169,    -1,   183,    -1,    -1,   174,  2464,    -1,
      -1,   343,   179,    -1,    -1,    -1,  2472,  2473,  2474,    -1,
      87,   188,    -1,    -1,    -1,  2481,   193,  2483,  2484,    -1,
     209,    -1,    -1,  2489,    -1,    -1,   368,    -1,  3490,    -1,
      -1,   179,    -1,    -1,    -1,    -1,    -1,  1652,    -1,    -1,
     994,    -1,  3075,    -1,  2510,    -1,    -1,    -1,   225,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2526,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   245,   258,
      -1,  2537,    -1,    -1,    -1,  2541,    -1,    -1,    -1,   268,
      -1,    -1,    -1,    -1,   426,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2568,  2569,    -1,    -1,    -1,   184,    -1,  1724,
      -1,    -1,   454,    -1,    -1,    -1,    -1,   294,    -1,    -1,
     297,   179,   464,   312,   201,    -1,   303,    -1,    -1,   206,
      -1,  2597,    -1,    -1,    -1,    -1,    -1,  2603,    -1,    -1,
      -1,    -1,   484,    -1,   486,   487,    -1,    -1,    -1,  3490,
      -1,    -1,    -1,   556,    -1,  2621,    -1,    -1,    -1,  2625,
      -1,  2627,    -1,  2629,  2630,  2631,   343,   244,    -1,  2635,
    2636,  2637,    -1,  2639,   322,   323,   324,   366,    -1,    -1,
      -1,   523,    -1,    -1,   526,   527,   528,    -1,    -1,    -1,
      -1,   368,  2658,    -1,  2660,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   391,    -1,    -1,    -1,    -1,  2673,  2674,  2675,
    2676,  2677,  2678,  2679,  2680,  2681,  2682,  2193,    -1,    -1,
      -1,   410,   299,   412,    -1,    15,   415,    -1,    18,    -1,
      -1,    -1,    22,    23,    -1,    -1,    -1,    -1,    -1,  2705,
      -1,   389,  1857,    -1,    -1,    -1,    -1,  2713,    -1,   426,
      -1,  1866,   400,   311,    -1,    -1,    -1,  2723,    -1,    -1,
      -1,    -1,  1216,    53,   322,   323,   324,    -1,    -1,    -1,
      60,    -1,    -1,    -1,   422,  1229,    -1,   454,   426,  2745,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   464,    -1,  2755,
      -1,    -1,    -1,    -1,    -1,    -1,  1250,    87,    -1,    -1,
    2766,    -1,    -1,    -1,    -1,    -1,  2772,   484,    -1,   486,
     487,   459,    -1,  2779,  2780,  2781,  2782,    -1,    -1,    -1,
      -1,    -1,   470,    -1,   401,  2791,    -1,    -1,  2794,    -1,
      -1,   389,  2798,  2799,    -1,    -1,   525,    -1,    -1,   487,
    2806,    -1,    -1,    -1,   747,   748,   523,    -1,    -1,   526,
     527,   528,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,
      -1,  1315,   152,   511,  2830,    -1,    -1,  1321,   426,    -1,
      -1,  2837,  2838,    -1,    -1,    -1,  2842,   525,    -1,    -1,
      -1,   210,    -1,  1998,    -1,    -1,    -1,    -1,    -1,  2004,
      -1,    -1,    -1,    -1,   184,  2371,    -1,    -1,    -1,    -1,
      -1,   459,   805,    -1,    -1,  2871,    -1,  2873,    -1,    -1,
      -1,   201,   470,    -1,  2880,    -1,   206,    -1,    -1,   248,
      -1,  2887,    -1,    -1,  2890,    -1,    -1,    -1,    -1,   487,
      -1,  2897,   509,    -1,    -1,    -1,    -1,    -1,    -1,   516,
     517,   518,   519,   520,   521,  2911,    -1,    -1,    -1,    -1,
      -1,  2917,    -1,   511,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   866,  2930,  2931,  2932,   525,    -1,    -1,
      -1,    -1,  2938,   302,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2955,
      -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   299,
      -1,  1465,     3,    -1,    -1,    -1,    -1,    -1,    -1,  2134,
      -1,    -1,    -1,    -1,    15,    -1,    -1,    18,    -1,    -1,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,  2154,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   380,    43,    -1,    -1,  2170,    -1,    -1,   387,    -1,
      -1,    -1,    53,    -1,    -1,    -1,  2181,  3033,    -1,    60,
    3036,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3048,  2198,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,
      -1,   430,  3068,   432,    -1,    -1,    -1,  1010,    -1,  3075,
      -1,   401,  1015,    -1,    -1,  1018,    -1,    -1,    -1,    -1,
     449,    -1,    -1,    -1,  1027,    -1,   455,    -1,    -1,   458,
      -1,    -1,    -1,    -1,  1037,  3101,    -1,    33,    -1,     4,
      -1,  3107,    -1,    39,    -1,    -1,    -1,    -1,  3114,    -1,
      15,    47,    -1,    18,  2630,  2631,  1059,    22,    23,    24,
      25,    26,    27,    28,    -1,  3131,    -1,    -1,    -1,    -1,
      -1,    67,    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,
      -1,    -1,  2658,    -1,    -1,    -1,    -1,    -1,    53,  3155,
      -1,    -1,    -1,   184,    -1,    60,    -1,  2673,  2674,  2675,
    2676,  2677,  2678,  2679,  2680,  2681,  2682,    -1,    -1,    -1,
     201,  3177,    -1,    -1,    -1,   206,  3182,   113,    -1,   509,
      -1,    -1,    87,    -1,    -1,    -1,   516,   517,   518,   519,
     520,   521,    -1,    -1,    -1,    -1,    -1,    -1,   229,   230,
    2355,    -1,  3208,    -1,  1698,  1699,    -1,    -1,   144,    -1,
      -1,    -1,    -1,   244,    -1,    -1,  1710,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3230,  3231,    -1,    -1,    -1,    -1,
      -1,  1174,  1175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3247,    -1,  3249,    -1,    -1,    -1,  3253,    -1,    -1,
      -1,   282,    -1,    -1,   285,    -1,    -1,    -1,  1752,    -1,
      -1,    -1,  3268,    -1,    -1,  3271,    -1,    -1,   299,    -1,
      -1,   302,    -1,   209,    -1,    -1,    -1,    -1,    -1,   184,
      -1,    -1,    -1,    -1,    -1,  3291,    -1,  3293,    -1,  3295,
    3296,    -1,  3298,    -1,    -1,    -1,   201,  3303,    -1,    -1,
      -1,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3322,    -1,    -1,  3325,
      -1,    -1,   258,    -1,   229,   230,    -1,  3333,    -1,    -1,
      -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,   244,
      -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,
      -1,  1845,  1846,  1847,  1848,    -1,  1850,  3363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   301,    -1,    -1,    -1,    -1,
     401,    -1,    -1,    -1,    -1,    -1,   312,   282,    -1,    -1,
     285,    -1,    -1,  2538,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   299,  3401,    -1,   302,    -1,    -1,
      -1,    -1,    -1,  3409,    -1,    -1,    -1,    -1,  1351,  1352,
      -1,  1354,    -1,    -1,    -1,  2931,    -1,    -1,  3424,  2574,
      -1,    -1,    -1,    -1,   360,    -1,    -1,    -1,   364,    -1,
     366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2593,    -1,
      -1,    -1,    -1,    -1,  2599,  3451,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,    -1,  3463,  3464,  3465,
     396,  3467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3475,
      -1,    -1,  2627,    -1,   410,    -1,    -1,    -1,   509,    -1,
    3486,   512,   513,   514,    -1,   516,   517,   518,   519,   520,
     521,    -1,    -1,    -1,  1988,    -1,   401,    -1,    -1,    -1,
      -1,    -1,  3508,    -1,    -1,    10,    -1,    -1,    -1,  3515,
      15,    -1,    -1,    18,  1457,    -1,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,  1472,
      -1,   467,  1475,    -1,    -1,    -1,    -1,  1480,    43,    -1,
    1483,    -1,    47,    -1,    -1,  1488,  3552,  1490,    53,  1492,
      -1,  2706,    -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,
      -1,  3567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2734,
      -1,    -1,    87,    -1,    -1,    -1,  2741,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
      -1,   516,   517,   518,   519,   520,   521,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    15,    -1,    -1,    18,    -1,  2791,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,  1615,    -1,    -1,    -1,    60,    -1,    -1,   184,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3208,    -1,    -1,    -1,   201,    -1,    -1,    -1,
      -1,   206,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3230,  3231,    -1,    -1,  2873,    -1,
      -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,    -1,
      -1,    -1,  2887,    -1,    -1,    -1,    -1,  3253,    -1,   244,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   299,    -1,    -1,   302,    -1,    -1,
     184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1754,    -1,    -1,    -1,    -1,    -1,   201,    -1,    -1,
      -1,    -1,   206,    -1,    -1,    -1,  1769,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1779,    -1,  1781,    -1,
      -1,  1784,    -1,    -1,    -1,   229,   230,  1790,    -1,  1792,
      -1,  2345,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     244,    -1,  1805,    -1,  2358,  2359,  2360,  1810,    -1,    -1,
      -1,  1814,  1815,  1816,  1817,    -1,  1819,  1820,    15,  2373,
      -1,    18,  2376,    -1,    -1,    22,    23,    24,    25,    26,
      27,    28,  2386,    -1,  3049,    -1,   401,    -1,   282,    -1,
      -1,   285,    -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   299,    53,    -1,   302,    -1,
      -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3091,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   841,   842,    -1,    -1,    -1,    -1,    -1,
    3486,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2472,  2473,
    2474,    -1,    -1,    -1,    15,    -1,    -1,    18,    -1,    -1,
      -1,    22,    23,    -1,    -1,    26,    27,    28,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
      -1,   516,   517,   518,   519,   520,   521,   401,    -1,    -1,
      -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,    -1,    60,
      -1,  1974,    -1,    -1,   912,    -1,    -1,    -1,   916,   917,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1998,    87,    -1,    -1,    -1,
      -1,  2004,    -1,    -1,   201,    -1,  2009,    -1,    -1,   206,
      -1,  2014,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3245,   969,   229,   230,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,   987,
      -1,  3266,    -1,  2056,    -1,   993,    -1,    -1,   996,    -1,
      -1,   999,  1000,  1001,  1002,   509,    -1,  2621,   512,   513,
     514,    -1,   516,   517,   518,   519,   520,   521,    -1,    -1,
      -1,    -1,   526,    -1,    -1,   282,    -1,    -1,   285,    -1,
      -1,    -1,    -1,   184,    -1,  2098,    15,    -1,    -1,    18,
      -1,    -1,   299,    22,    23,   302,  1044,  1045,  3323,    15,
     201,  3326,    18,    -1,    -1,   206,    22,    23,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1070,    -1,    53,    -1,    -1,    -1,   229,   230,
      -1,    60,    -1,    -1,    -1,    -1,    -1,    53,    -1,  3364,
      -1,  1089,    -1,   244,    60,    -1,    -1,    -1,    -1,  2713,
      -1,    -1,  1100,  1101,  1102,  3380,  1104,  1105,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2181,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2193,   282,    -1,    -1,   285,  2198,    -1,    -1,  1136,    -1,
      -1,    -1,    -1,    -1,   401,    -1,    -1,    -1,   299,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1154,  1155,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2779,  2780,  2781,  2782,    -1,
      -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2246,    -1,    -1,   152,    -1,    -1,  2252,
      -1,    -1,    -1,  1191,    -1,    -1,    -1,  1195,  1196,    -1,
      -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,  1206,  1207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,
      -1,    -1,   201,    -1,    -1,    -1,    -1,   206,    -1,    -1,
      -1,    -1,  3507,    -1,    -1,   201,    -1,    -1,    -1,    -1,
     206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     401,    -1,   509,    -1,    -1,   512,   513,   514,  3533,   516,
     517,   518,   519,   520,   521,   244,    -1,  1265,    -1,   526,
      -1,    -1,    -1,    -1,    -1,    -1,  1274,    15,   244,    -1,
      18,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1298,    -1,    -1,    15,    -1,    43,    18,    -1,  2371,    -1,
      22,    23,    -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,
     299,    -1,    60,    -1,  2938,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   299,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    15,    -1,    -1,    18,    -1,    60,    87,
      22,    23,    -1,    -1,    26,    27,    28,    -1,   509,    -1,
      -1,   512,   513,   514,    -1,   516,   517,   518,   519,   520,
     521,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,    -1,    -1,  1384,    -1,    60,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,  2481,    -1,
      -1,  2484,   401,    -1,    -1,    -1,  2489,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,    -1,    -1,
     152,    -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,  1447,
      -1,  1449,  1450,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   201,    -1,  1463,  1464,    -1,   206,    -1,
      -1,    -1,   184,    -1,  2537,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1482,    -1,    -1,    -1,    -1,   201,
      -1,   229,   230,    -1,   206,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,
      -1,    -1,   184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,
     509,    -1,   244,    -1,   206,    -1,    -1,   516,   517,   518,
     519,   520,   521,   509,   282,    -1,    -1,   285,    -1,    -1,
     516,   517,   518,   519,   520,   521,    -1,    -1,    -1,    -1,
      -1,   299,  2625,    -1,   302,    -1,  2629,  2630,  2631,    -1,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   299,    -1,    -1,
      -1,  1589,    -1,    -1,    -1,  2658,    -1,    -1,    -1,  1597,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2673,  2674,  2675,  2676,  2677,  2678,  2679,  2680,  2681,  2682,
      -1,    -1,    -1,    -1,    -1,    -1,  1624,   299,    -1,    -1,
      -1,    -1,    -1,  3247,  1632,    -1,    -1,    -1,    -1,    -1,
    1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,    -1,    -1,
      -1,    -1,  1650,  1651,  3268,    -1,    -1,  1655,    -1,    -1,
      -1,  1659,    -1,   401,  1662,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1670,    -1,    -1,  1673,    -1,    -1,    -1,    -1,
      -1,    -1,  1680,    -1,  1682,    -1,    -1,    -1,    -1,   401,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1700,    -1,    -1,    -1,    -1,    -1,    -1,  2772,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3333,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,   401,
      31,    -1,    -1,    -1,    -1,  2798,    -1,    -1,    -1,    -1,
    1738,  1739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2830,    -1,    -1,
      -1,   509,    -1,    -1,   512,   513,   514,    -1,   516,   517,
     518,   519,   520,   521,    -1,    88,    -1,    88,   526,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,    -1,
      -1,   104,    -1,   104,   516,   517,   518,   519,   520,   521,
    2873,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1825,    -1,    -1,
      -1,  1829,    -1,    -1,  1832,  1833,    -1,   509,    -1,    -1,
     512,   513,   514,    -1,   516,   517,   518,   519,   520,   521,
     153,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     163,    -1,   163,    -1,    -1,    -1,    -1,    -1,  2931,    -1,
      -1,    -1,  1870,   176,    -1,   176,    -1,     0,   181,    -1,
     181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1897,
      -1,  1899,    -1,    -1,    -1,    -1,    29,   210,    -1,   210,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    -1,    41,    42,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1927,
    1928,    54,  1930,    -1,    -1,    -1,    59,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,
     253,    -1,   253,    -1,   257,    -1,   257,    -1,    -1,    82,
      -1,  1959,  1960,    -1,    -1,  1963,    -1,    -1,    91,    -1,
      93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,    -1,   107,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   118,  1994,    -1,    -1,    -1,
      -1,    -1,  2000,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     133,   134,   135,    -1,    -1,    -1,    -1,    -1,   321,  2017,
    2018,   144,    -1,    -1,   327,    -1,   327,   150,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   158,    -1,   160,   161,   342,
      -1,   342,    -1,    -1,  3107,    -1,    -1,    -1,    -1,    -1,
      -1,  3114,   175,    -1,    -1,    -1,   179,  2055,    -1,    -1,
     997,    -1,  2060,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,    -1,   377,   380,    -1,   380,
      -1,    -1,   205,    -1,    -1,    -1,    -1,    -1,   391,    -1,
     391,   394,    -1,   394,    -1,    -1,    -1,    -1,   221,  2097,
      -1,    -1,    -1,  2101,    -1,    -1,    -1,    -1,  2106,   412,
      -1,   412,    -1,    -1,  3177,    -1,    -1,    -1,    -1,  3182,
      -1,    -1,    -1,   426,   247,   426,    -1,    -1,    -1,   432,
     433,    -1,   433,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     443,    -1,   443,    -1,    -1,  3208,   449,    -1,   449,    -1,
      -1,    -1,  2150,    -1,    -1,  2153,    -1,  2155,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3230,  3231,    -1,
      -1,    -1,    -1,  2171,   477,    -1,   477,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1121,    -1,    -1,    -1,    -1,    -1,
    3253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,
     323,   324,    -1,    -1,    -1,    -1,    -1,   330,    -1,    -1,
     333,    -1,    -1,    -1,    -1,    -1,    -1,  2215,    15,    -1,
      -1,    18,    -1,    -1,    -1,    22,    23,    24,    25,    26,
      27,    28,  3295,  1170,  2232,  2233,    -1,    -1,    -1,    -1,
      -1,   364,    -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,
     373,    -1,    -1,  2251,    -1,    -1,    53,    -1,    -1,    -1,
      -1,    -1,  2260,    60,    -1,    -1,   389,    -1,  1205,    -1,
      -1,    -1,    -1,   396,    -1,    -1,    -1,   400,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   410,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   422,
      -1,    -1,    -1,   426,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2317,
      -1,    -1,  1259,   446,    -1,  2323,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   459,    -1,    -1,   462,
      -1,    -1,   465,    -1,    -1,    -1,    -1,   470,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   487,    -1,  1303,    -1,    -1,    -1,
      -1,  1308,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2381,    -1,    -1,    15,   184,   511,    18,
      -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    -1,   525,    -1,   201,   528,    -1,    -1,    -1,   206,
      -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,    -1,    -1,
      -1,  1358,    -1,  3486,    53,    -1,    -1,    -1,    -1,    -1,
      -1,    60,   229,   230,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1382,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,   285,    -1,
      -1,    -1,    -1,  1430,    -1,  1432,    -1,  1434,  1435,    -1,
    1437,    -1,   299,  1440,    -1,   302,  1443,    -1,    -1,  1446,
      -1,    -1,    -1,    -1,  1451,    -1,    -1,  1454,    -1,  2517,
      -1,    -1,    -1,    -1,    -1,  2523,  2524,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2538,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2552,   184,    -1,  2555,  1495,  2557,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2565,    -1,    -1,
      -1,    -1,   201,    -1,    -1,  2573,  2574,   206,    -1,    -1,
      -1,    -1,  2580,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2595,    -1,    -1,
     229,   230,    -1,    -1,   401,    -1,    -1,  2605,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2627,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1585,    -1,
      -1,    -1,    -1,   282,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1601,    -1,    -1,    -1,    -1,    -1,
     299,    -1,    -1,   302,  1611,  1612,  1613,    -1,    -1,    -1,
      -1,  1618,    -1,    -1,    -1,  1622,  2684,  2685,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,    -1,   516,
     517,   518,   519,   520,   521,    -1,    -1,    -1,    -1,   526,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1679,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    15,    -1,    -1,    18,
      -1,    -1,   401,    22,    23,    24,    25,    26,    27,    28,
      -1,    -1,    -1,    -1,  1721,    -1,    -1,    -1,  2786,  2787,
      -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,    -1,    -1,
    1737,    -1,    -1,    -1,    53,  1742,    -1,    -1,    -1,    -1,
      -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1759,  2821,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,  2841,    -1,    -1,    -1,    -1,    -1,  2847,
    2848,    -1,    -1,    -1,  2852,    -1,    -1,    -1,    -1,  2857,
      -1,    -1,  2860,  2861,    -1,    -1,    -1,  2865,  2866,    -1,
      -1,  2869,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,  2880,   512,   513,   514,    -1,   516,   517,   518,
     519,   520,   521,    -1,    -1,    -1,    -1,   526,    -1,    -1,
      -1,    -1,    -1,    -1,    15,    -1,    -1,    18,    -1,    -1,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2924,    -1,    -1,    -1,
      -1,    -1,    43,    -1,    -1,   184,    -1,    -1,    -1,    -1,
      -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,    15,    60,
      -1,    18,   201,  2951,    -1,    22,    23,   206,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,
     229,   230,    -1,    -1,    -1,    -1,    53,    -1,  1925,    -1,
      -1,    -1,    -1,    60,    -1,   244,  1933,  1934,    -1,  1936,
    1937,  1938,  1939,  1940,  1941,    -1,    -1,  1944,  1945,  1946,
    1947,  1948,  1949,  1950,  1951,  1952,  1953,  1954,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   282,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     299,    -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3062,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   184,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     201,    -1,    -1,  3091,    10,   206,    12,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,   229,   230,
      -1,    -1,    -1,    -1,    -1,    -1,  2063,  3125,    -1,  2066,
      -1,    -1,    -1,   244,   201,    -1,    -1,    -1,    -1,   206,
      -1,    -1,    -1,    -1,  3142,  3143,    -1,    -1,  3146,    -1,
    3148,    -1,   401,    -1,    -1,    -1,    -1,    -1,    -1,    75,
      76,    -1,   229,   230,    -1,    -1,    -1,    -1,    -1,    -1,
    2107,   282,    -1,    -1,   285,  2112,  3174,   244,    -1,  2116,
    2117,  2118,  2119,  2120,  2121,  2122,  2123,    -1,   299,    -1,
      -1,   302,  2129,  2130,    -1,  2132,  2133,    -1,    -1,  3197,
     116,   117,    -1,    -1,   120,   121,    -1,    -1,    -1,  2146,
      -1,    -1,  2149,    -1,    -1,    -1,    -1,    -1,   285,    -1,
    2157,  2158,  2159,  2160,  2161,  2162,  2163,  2164,  2165,  2166,
      -1,    -1,   299,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2192,    -1,    -1,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,    -1,   516,   517,   518,
     519,   520,   521,    -1,    -1,    -1,    -1,   526,    -1,    -1,
     196,   197,    -1,    -1,    -1,    -1,    -1,  3285,    -1,    -1,
     401,  3289,    -1,    -1,    -1,  3293,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3307,
      -1,    -1,  2249,    -1,  3312,  3313,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3322,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3340,    -1,   260,   261,   262,   263,   264,   265,
     266,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,    15,
      -1,    -1,    18,    -1,    -1,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2318,    -1,    -1,    -1,    -1,    -1,    43,    -1,  3387,
      -1,  2328,  2329,    -1,    -1,    -1,    -1,    53,   509,  3397,
      -1,   512,   513,   514,    60,   516,   517,   518,   519,   520,
     521,  3409,    -1,    -1,    -1,   526,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   344,   345,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,  3442,   512,   513,   514,    -1,   516,
     517,   518,   519,   520,   521,    -1,    -1,    -1,  2395,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   385,
     386,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2421,  2422,  2423,    -1,    -1,  2426,
    2427,  2428,  2429,  2430,  2431,    -1,    -1,    -1,  2435,  2436,
    2437,  2438,  2439,  2440,  2441,  2442,  2443,  2444,    15,    -1,
      -1,    18,  2449,  2450,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,
      -1,  3529,  3530,  3531,    -1,    -1,    43,    -1,  2475,    -1,
      -1,    -1,    -1,  2480,    -1,   201,    53,    -1,    -1,    -1,
     206,    -1,    -1,    60,    -1,    -1,    -1,    -1,  3556,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,    -1,
      -1,    -1,    -1,   229,   230,  2512,    -1,    -1,    -1,  2516,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   244,   505,
     506,    -1,    -1,    -1,    -1,    -1,  2533,    -1,    -1,  3597,
      -1,    -1,  2539,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2547,    -1,    -1,    -1,    -1,    -1,  2553,  2554,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,   285,
    2567,  2568,  2569,  2570,    -1,  2572,    -1,    -1,    -1,  2576,
      -1,    -1,    -1,   299,    -1,    -1,   302,    -1,    -1,    -1,
      -1,    -1,    -1,    15,    -1,    -1,    18,    -1,    -1,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,
      -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,   201,  2632,    -1,    -1,    60,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,   230,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,    15,    -1,
      -1,    18,    -1,    -1,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    43,    -1,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,
      -1,    -1,   299,    60,    -1,   302,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      87,    -1,   184,    -1,    -1,    -1,    -1,    -1,    -1,  2766,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,
      -1,    -1,    -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,    -1,   512,   513,   514,    -1,
     516,   517,   518,   519,   520,   521,    -1,   229,   230,    -1,
     526,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   244,    -1,    -1,  2822,    -1,  2824,    -1,    -1,
      -1,    -1,    -1,    -1,   401,    -1,  2833,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2846,
      -1,    -1,  2849,    -1,  2851,    -1,    -1,   184,  2855,    -1,
     282,  2858,  2859,   285,    -1,  2862,  2863,    -1,    -1,    -1,
      -1,    -1,    -1,  2870,   201,    -1,    -1,   299,    -1,   206,
     302,    -1,  2879,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    15,    -1,    -1,    18,  2894,    -1,    -1,
      22,    23,   229,   230,    26,    27,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   244,    29,    -1,
      -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,    39,    -1,
      -1,    53,    -1,    -1,    -1,  2932,    -1,    -1,    60,    -1,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,    59,   516,
     517,   518,   519,   520,   521,   282,    -1,    68,   285,   526,
      -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    82,   299,    -1,    -1,   302,    -1,    -1,    -1,   401,
      -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,    -1,   107,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   118,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,   150,
      75,    76,    -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   184,    -1,   175,    -1,    -1,    -1,   179,    -1,
      -1,    -1,    -1,    -1,   401,    -1,    -1,  3074,  3075,   201,
      -1,   116,   117,    -1,   206,   120,   121,   509,    -1,    -1,
     512,   513,   514,    -1,   516,   517,   518,   519,   520,   521,
      -1,    -1,  3099,  3100,   526,    -1,    -1,   229,   230,    -1,
     221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   244,    -1,    -1,    -1,  3123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3132,   247,    -1,    -1,  3136,
    3137,  3138,    -1,    -1,  3141,    -1,    -1,  3144,  3145,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3153,    -1,    -1,    -1,
     282,   196,   197,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   299,    -1,    -1,
     302,    -1,   509,    -1,    -1,   512,   513,   514,    -1,   516,
     517,   518,   519,   520,   521,    -1,    -1,  3194,    -1,   526,
      -1,    -1,    -1,  3200,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   322,   323,   324,    -1,    -1,  3213,    -1,    -1,   330,
      -1,    -1,   333,    -1,    -1,   260,   261,   262,   263,   264,
     265,   266,   267,    -1,    -1,   270,   271,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   364,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3273,    -1,   389,   401,
      -1,    -1,    -1,    -1,    -1,   396,    -1,    -1,    -1,   400,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   410,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   344,
     345,   422,  3309,  3310,  3311,   426,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3329,    -1,    -1,   446,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3341,    -1,    -1,    -1,   459,    -1,
     385,   386,    -1,    -1,   465,    -1,    -1,    -1,    -1,   470,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,    -1,
     512,   513,   514,    -1,   516,   517,   518,   519,   520,   521,
     511,    -1,    -1,    -1,    -1,  3402,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   525,  3412,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3437,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3462,    -1,    -1,    -1,    -1,
     505,   506,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     5,     6,     7,     8,
     525,    10,    11,    12,    13,    14,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3505,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,  3559,    82,    83,    84,    85,    86,    -1,    88,
      -1,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,    -1,   511,    -1,    -1,    -1,    -1,   516,   517,   518,
      -1,    -1,    -1,    -1,   523,    -1,   525,   526,     5,     6,
       7,     8,    -1,    10,    11,    12,    13,    14,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    -1,    -1,    -1,    44,    -1,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    88,    -1,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,    -1,    -1,    -1,    -1,    -1,    -1,   516,
     517,   518,    -1,    -1,    -1,    -1,   523,    -1,   525,   526,
       5,     6,     7,     8,    -1,    10,    11,    12,    13,    14,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    44,
      -1,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,    -1,    -1,    -1,    -1,    -1,
      -1,   516,   517,   518,    -1,    -1,    -1,    -1,   523,    -1,
     525,   526,     5,     6,     7,     8,    -1,    10,    11,    12,
      13,    14,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    44,    -1,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    88,    -1,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,    -1,    -1,    -1,
      -1,    -1,    -1,   516,   517,   518,    -1,    -1,    -1,    -1,
     523,    -1,   525,   526,     5,     6,     7,     8,    -1,    10,
      11,    12,    13,    14,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    88,    -1,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,    -1,
      -1,    -1,    -1,    -1,    -1,   516,   517,   518,    -1,    -1,
      -1,    -1,   523,    -1,   525,   526,     4,     5,     6,     7,
       8,    -1,    10,    11,    12,    13,    14,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    46,    -1,
      -1,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      88,    -1,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,   475,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,    -1,    -1,    -1,    -1,    -1,    -1,   516,   517,
     518,    -1,    -1,    -1,    -1,   523,    -1,   525,     4,     5,
       6,     7,     8,    -1,    10,    11,    12,    13,    14,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      46,    -1,    -1,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    88,    -1,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,   475,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,    -1,    -1,    -1,    -1,    -1,    -1,
     516,   517,   518,    -1,    -1,    -1,    -1,   523,    -1,   525,
       5,     6,     7,     8,    -1,    10,    11,    12,    13,    14,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,    -1,   511,    -1,    -1,    -1,
      -1,   516,   517,   518,    -1,    -1,    -1,    -1,   523,    -1,
     525,     5,     6,     7,     8,    -1,    10,    11,    12,    13,
      14,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    46,    -1,    -1,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    88,    -1,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,    -1,   511,    -1,    -1,
      -1,    -1,   516,   517,   518,    -1,    -1,    -1,    -1,   523,
      -1,   525,     5,     6,     7,     8,    -1,    10,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    88,    -1,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
      -1,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    -1,    -1,   511,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     523,    -1,   525,     5,     6,     7,     8,    -1,    10,    11,
      12,    13,    14,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    -1,    -1,    46,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    88,    -1,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,    -1,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,    -1,    -1,
      -1,    -1,    -1,    -1,   516,   517,   518,    -1,    -1,    -1,
      -1,   523,    -1,   525,     5,     6,     7,     8,    -1,    10,
      11,    12,    13,    14,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    44,    -1,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    88,    -1,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,    -1,
      -1,    -1,    -1,    -1,    -1,   516,   517,   518,    -1,    -1,
      -1,    -1,   523,    -1,   525,     5,     6,     7,     8,    -1,
      10,    11,    12,    13,    14,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    -1,    -1,    -1,    -1,    45,    46,    -1,    -1,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    88,    -1,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
      -1,    -1,    -1,    -1,    -1,    -1,   516,   517,   518,    -1,
      -1,    -1,    -1,   523,    -1,   525,     5,     6,     7,     8,
      -1,    10,    11,    12,    13,    14,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    44,    -1,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    88,
      -1,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,    -1,    -1,    -1,    -1,    -1,    -1,   516,   517,   518,
      -1,    -1,    -1,    -1,   523,    -1,   525,     5,     6,     7,
       8,    -1,    10,    11,    12,    13,    14,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    46,    -1,
      -1,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      88,    -1,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,   475,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,    -1,    -1,    -1,    -1,    -1,    -1,   516,   517,
     518,    -1,    -1,    -1,    -1,   523,    -1,   525,     5,     6,
       7,     8,    -1,    10,    11,    12,    13,    14,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    88,    -1,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,    -1,    -1,    -1,    -1,    -1,    -1,   516,
     517,   518,    -1,    -1,    -1,    -1,   523,    -1,   525,     5,
       6,     7,     8,    -1,    10,    11,    12,    13,    14,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      46,    -1,    -1,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    88,    -1,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,   475,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,    -1,    -1,    -1,    -1,    -1,    -1,
     516,   517,   518,    -1,    -1,    -1,    -1,   523,    -1,   525,
       5,     6,     7,     8,    -1,    10,    11,    12,    13,    14,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,    -1,    -1,    -1,    -1,    -1,
      -1,   516,   517,   518,    -1,    -1,    -1,    -1,   523,    -1,
     525,     5,     6,     7,     8,    -1,    10,    11,    12,    13,
      14,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    46,    -1,    -1,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    88,    -1,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,   480,   481,   482,    -1,
     484,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,    -1,    -1,    -1,    -1,
      -1,    -1,   516,   517,   518,    -1,    -1,    -1,    -1,   523,
      -1,   525,     5,     6,     7,     8,    -1,    10,    11,    12,
      13,    14,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    88,    -1,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,    -1,    -1,    -1,
      -1,    -1,    -1,   516,   517,   518,    -1,    -1,    -1,    -1,
     523,    -1,   525,     5,     6,     7,     8,    -1,    10,    11,
      12,    13,    14,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    -1,    -1,    46,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    88,    -1,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,    -1,    -1,
      -1,    -1,    -1,    -1,   516,   517,   518,    -1,    -1,    -1,
      -1,   523,    -1,   525,     5,     6,     7,     8,    -1,    10,
      11,    12,    13,    14,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    88,    -1,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,    -1,
      -1,    -1,    -1,    -1,    -1,   516,   517,   518,    -1,    -1,
      -1,    -1,   523,    -1,   525,     5,     6,     7,     8,    -1,
      10,    11,    12,    13,    14,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    -1,    38,    39,
      40,    -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    88,    -1,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
      -1,    -1,    -1,    -1,    -1,    -1,   516,   517,   518,    -1,
      -1,    -1,    -1,   523,    -1,   525,     5,     6,     7,     8,
      -1,    10,    11,    12,    13,    14,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    88,
      -1,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,    -1,    -1,    -1,    -1,    -1,    -1,   516,   517,   518,
      -1,    -1,    -1,    -1,   523,    -1,   525,     5,     6,     7,
       8,    -1,    10,    11,    12,    13,    14,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    46,    -1,
      -1,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      88,    -1,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,   475,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,    -1,    -1,    -1,    -1,    -1,    -1,   516,   517,
     518,    -1,    -1,    -1,    -1,   523,    -1,   525,     5,     6,
       7,     8,    -1,    10,    11,    12,    13,    14,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    88,    -1,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,    -1,    -1,    -1,    -1,    -1,    -1,   516,
     517,   518,    -1,    -1,    -1,    -1,   523,    -1,   525,     5,
       6,     7,     8,    -1,    10,    11,    12,    13,    14,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      46,    -1,    -1,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    88,    -1,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,   475,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,    -1,    -1,    -1,    -1,    -1,    -1,
     516,   517,   518,    -1,    -1,    -1,    -1,   523,    -1,   525,
       5,     6,     7,     8,    -1,    10,    11,    12,    13,    14,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,    -1,    -1,    -1,    -1,    -1,
      -1,   516,   517,   518,    -1,    -1,    -1,    -1,   523,    -1,
     525,     5,     6,     7,     8,    -1,    10,    11,    12,    13,
      14,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    46,    -1,    -1,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    88,    -1,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,    -1,    -1,    -1,    -1,
      -1,    -1,   516,   517,   518,    -1,    -1,    -1,    -1,   523,
      -1,   525,     5,     6,     7,     8,    -1,    10,    11,    12,
      13,    14,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    88,    -1,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,    -1,   525,     5,     6,     7,     8,    -1,    10,    11,
      12,    13,    14,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    -1,    -1,    46,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    88,    -1,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,    -1,    -1,
      -1,    -1,    -1,    -1,   516,   517,   518,    -1,    -1,    -1,
      -1,   523,    -1,   525,     5,     6,     7,     8,    -1,    10,
      11,    12,    13,    14,    -1,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    88,    -1,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,    -1,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,    -1,   525,     5,     6,     7,     8,    -1,
      10,    11,    12,    13,    14,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    -1,    38,    39,
      40,    -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    88,    -1,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,    -1,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,    -1,
     230,   231,   232,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,    -1,   525,     5,     6,     7,     8,
      -1,    10,    11,    12,    13,    14,    -1,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    88,
      -1,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
       5,     6,     7,     8,    -1,    10,    11,    12,    13,    14,
      -1,    16,    17,    -1,   523,    -1,   525,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,     5,     6,     7,     8,    -1,    10,
      11,    12,    13,    14,    -1,    16,    17,    -1,   523,    -1,
     525,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    88,    -1,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,    -1,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,     5,     6,
       7,     8,    -1,    10,    11,    12,    13,    14,    15,    16,
      17,    -1,   523,    -1,   525,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    88,    -1,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,    -1,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,    -1,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,   242,   243,    -1,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,     5,     6,     7,     8,    -1,    10,    -1,   516,
     517,   518,    -1,    -1,    17,    -1,   523,    -1,   525,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    88,    -1,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,   285,   286,    -1,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,     8,    -1,    10,    11,
      12,    -1,    -1,    -1,    16,    -1,    -1,    -1,    -1,    -1,
     523,    -1,   525,    -1,    -1,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    44,    -1,    -1,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    71,
      -1,    -1,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    88,    -1,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,    -1,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,   285,   286,    -1,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,   297,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,    10,    -1,    -1,
      -1,    -1,    -1,    -1,   516,   517,   518,    -1,    -1,    -1,
      -1,   523,    -1,   525,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    50,    51,    -1,
      53,    54,    55,    -1,    57,    58,    59,    60,    61,    -1,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    -1,
      -1,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    -1,    -1,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,    -1,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,    -1,    -1,   181,   182,
     183,    -1,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,   228,    -1,    -1,   231,    -1,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,    -1,
     243,    -1,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,   286,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,    -1,   299,   300,   301,    -1,
     303,   304,   305,   306,    -1,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,    -1,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,    -1,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    10,    -1,    12,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   526,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,
      54,    55,    -1,    57,    58,    59,    60,    61,    -1,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    -1,    -1,    90,    91,    92,    93,
      94,    95,    -1,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,    -1,   243,
      -1,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,    -1,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,    -1,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,    -1,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   525,   526,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    41,    42,    -1,    44,
      -1,    -1,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    -1,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    -1,    10,   511,    12,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     525,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,   298,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,    -1,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    -1,    10,   511,    12,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     525,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,   298,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    10,    -1,    12,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     525,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    -1,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    88,    -1,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,    -1,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,   285,
     286,    -1,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,   298,   299,   300,   301,    -1,    -1,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,   475,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   525,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    -1,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    88,    -1,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,    -1,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    -1,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      88,    -1,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,    -1,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,   475,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    53,    54,    55,    -1,    57,    58,
      59,    60,    61,    -1,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    -1,
      -1,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
      -1,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,    -1,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,    -1,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,    -1,   424,   425,   426,   427,    -1,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      -1,    10,   511,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    53,    54,    55,    -1,    57,    58,
      59,    60,    61,    -1,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    -1,
      -1,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
      -1,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,    -1,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,    -1,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,    -1,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      -1,    10,   511,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    53,    54,    55,    -1,    57,    58,
      59,    60,    61,    -1,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    -1,
      -1,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
      -1,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,    -1,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,    -1,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,    -1,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      -1,    10,   511,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    53,    54,    55,    -1,    57,    58,
      59,    60,    61,    -1,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    -1,
      -1,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,    -1,
      -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
      -1,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,    -1,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,    -1,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      10,    -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    -1,    38,    39,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    51,    -1,    53,    54,    55,    -1,    57,    58,    59,
      60,    61,    -1,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    -1,    -1,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,
      90,    91,    92,    93,    94,    95,    -1,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,    -1,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,    -1,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,
      -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,    -1,
      -1,   231,    -1,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,   286,    -1,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,    -1,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,    10,
      -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   525,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
      51,    -1,    53,    54,    55,    -1,    57,    58,    59,    60,
      61,    -1,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    -1,    -1,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,    90,
      91,    92,    93,    94,    95,    -1,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,    -1,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,    -1,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,    -1,
     181,   182,   183,    -1,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,
     231,    -1,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,    -1,   243,    -1,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,   286,    -1,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
      -1,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,    10,    -1,
      12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   525,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    61,
      -1,    63,    64,    -1,    66,    67,    68,    69,    70,    71,
      -1,    -1,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    -1,    -1,    90,    91,
      92,    93,    94,    95,    -1,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,    -1,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,    -1,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,
     182,   183,    -1,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,
      -1,   233,   234,   235,   236,   237,   238,    -1,    -1,   241,
      -1,   243,    -1,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,   286,    -1,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,    -1,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,    -1,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,    -1,   427,    -1,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,    10,    -1,    12,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   525,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,
      53,    54,    55,    -1,    57,    58,    59,    60,    61,    -1,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    -1,
      -1,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    -1,    -1,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,    -1,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,
     183,    -1,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,    -1,
     243,    -1,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,   286,    -1,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,    -1,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,    -1,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,    -1,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    10,    -1,    12,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   525,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,
      54,    55,    -1,    57,    58,    59,    60,    61,    -1,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    -1,    -1,    90,    91,    92,    93,
      94,    95,    -1,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,    -1,   243,
      -1,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,    -1,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,    -1,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,    -1,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,    10,    -1,    12,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   525,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,
      55,    -1,    57,    58,    59,    60,    61,    -1,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    -1,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    -1,    -1,    90,    91,    92,    93,    94,
      95,    -1,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,    -1,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,    -1,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,    -1,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,    -1,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     525,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,
      -1,    57,    58,    59,    60,    61,    -1,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    -1,    -1,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    -1,    -1,    90,    91,    92,    93,    94,    95,
      -1,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,    -1,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,    -1,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
     286,    -1,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,    -1,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,    -1,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,    -1,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   525,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    61,    -1,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    -1,    -1,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    -1,    -1,    90,    91,    92,    93,    94,    95,    -1,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,    -1,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,    -1,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,   286,
      -1,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
      -1,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,    -1,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,    57,
      58,    59,    60,    61,    -1,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      -1,    -1,    90,    91,    92,    93,    94,    95,    -1,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
      -1,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,    -1,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
      -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,    -1,    -1,   231,    -1,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,    -1,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,    -1,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,    -1,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
      -1,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,    -1,    10,    11,    12,    -1,    -1,    15,    16,    -1,
      -1,    -1,    -1,    -1,    22,    23,    -1,   525,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,    -1,    -1,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
      -1,   329,   330,   331,    -1,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,   443,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,
     508,    -1,    10,    -1,   512,   513,   514,    15,   516,   517,
     518,   519,   520,   521,    22,    23,    -1,    -1,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,    57,
      58,    59,    60,    61,    -1,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      -1,    -1,    90,    91,    92,    93,    94,    95,    -1,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
      -1,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,    -1,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
      -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,    -1,    -1,   231,    -1,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,    -1,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,    -1,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,    -1,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
      -1,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,    -1,    -1,    -1,   512,   513,   514,    -1,   516,   517,
     518,   519,   520,   521,    15,    -1,    -1,    18,    -1,    -1,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    53,    15,    -1,    -1,    18,    -1,    -1,    60,
      22,    23,    24,    25,    26,    27,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    43,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,
      -1,    53,    15,    -1,    -1,    18,    -1,    -1,    60,    22,
      23,    24,    25,    26,    27,    28,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      43,    -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      53,    -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    -1,
      15,    -1,    -1,    18,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    87,    -1,    -1,    -1,    43,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    53,    15,
      -1,    -1,    18,   184,    -1,    60,    22,    23,    24,    25,
      26,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     201,    -1,    -1,    -1,    -1,   206,    -1,    43,    -1,    -1,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    53,    -1,    -1,
      -1,    -1,   184,    -1,    60,    -1,    -1,    -1,   229,   230,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,
      -1,    -1,    -1,   244,   206,    -1,    -1,    -1,    -1,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   184,    -1,    -1,    -1,    -1,    -1,   229,   230,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,    -1,
      -1,   282,   244,   206,   285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   299,    -1,
      -1,   302,    -1,    -1,    -1,    -1,   229,   230,    -1,   184,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     282,   244,    -1,   285,    -1,    -1,   201,    -1,    -1,    -1,
      -1,   206,    -1,    -1,    -1,    -1,    -1,   299,    -1,    -1,
     302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,
      -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   282,
      -1,    -1,   285,    -1,    -1,   201,    -1,    -1,    -1,   244,
     206,    -1,    -1,    -1,    -1,    -1,   299,    -1,    -1,   302,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   229,   230,    -1,    -1,    -1,    -1,    -1,
     401,    -1,    -1,    -1,    -1,    -1,    -1,   282,   244,    -1,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   299,    -1,    -1,   302,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   401,
      -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   299,    -1,    -1,   302,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   401,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,    -1,   516,   517,   518,   519,   520,
     521,    -1,    -1,    -1,    -1,   526,   401,    -1,    -1,    -1,
      -1,    -1,    15,    -1,    -1,    18,    -1,    -1,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,   509,    -1,    -1,
     512,   513,   514,    -1,   516,   517,   518,   519,   520,   521,
      43,    -1,    -1,    -1,   526,   401,    -1,    75,    76,    -1,
      53,    -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,    -1,   516,   517,   518,   519,   520,   521,    -1,
      -1,    -1,    -1,   526,    87,    -1,    -1,    -1,   116,   117,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,    -1,    15,
      -1,    -1,    18,    -1,    -1,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,   509,    -1,    -1,   512,   513,   514,
      -1,   516,   517,   518,   519,   520,   521,    43,    -1,    -1,
      -1,   526,    -1,    -1,    -1,    -1,    -1,    53,    15,    -1,
      -1,    18,    -1,    -1,    60,    22,    23,    24,    25,    26,
      27,    28,    -1,   509,    -1,    -1,   512,   513,   514,    -1,
     516,   517,   518,   519,   520,   521,    43,    -1,   196,   197,
     526,    87,    -1,    -1,    -1,    -1,    53,    15,    -1,    -1,
      18,   184,    -1,    60,    22,    23,    24,    25,    26,    27,
      28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,    -1,
      -1,    -1,    -1,   206,    -1,    43,    -1,    -1,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,
      -1,    -1,    60,    -1,    -1,    -1,   229,   230,    -1,    -1,
      -1,    -1,   260,   261,   262,   263,   264,   265,   266,   267,
      -1,   244,   270,   271,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      -1,    -1,   285,    -1,    -1,   201,    -1,    -1,    -1,    -1,
     206,    -1,    -1,    -1,    -1,    -1,   299,    -1,    -1,   302,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,
      -1,    -1,    -1,   229,   230,    -1,   344,   345,    -1,    -1,
      -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,   244,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,    -1,
      -1,    -1,   229,   230,    -1,    -1,    -1,   385,   386,    -1,
      -1,    -1,    -1,   201,    -1,    -1,   282,   244,   206,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   299,    -1,    -1,   302,    -1,    -1,    -1,
      -1,   229,   230,    -1,    -1,    -1,    -1,    -1,   401,    -1,
      -1,    -1,    -1,    -1,    -1,   282,   244,    -1,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   299,    -1,    -1,   302,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   282,    -1,    -1,   285,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,
      -1,   299,    -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   505,   506,    -1,
      -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,    -1,   516,   517,   518,   519,   520,   521,    -1,
      -1,   524,    -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,    -1,   512,   513,   514,    -1,
     516,   517,   518,   519,   520,   521,    -1,    -1,   524,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,    -1,   516,
     517,   518,   519,   520,   521,    -1,    -1,   524,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    10,    -1,
      -1,   509,    -1,    -1,   512,   513,   514,    -1,   516,   517,
     518,   519,   520,   521,    -1,    -1,   524,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,
      53,    54,    55,    -1,    57,    58,    59,    60,    61,    -1,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    -1,
      -1,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    -1,    -1,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,    -1,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,
     183,    -1,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,    -1,
     243,    -1,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,   286,    -1,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,    -1,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,    -1,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,    -1,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   518,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,
      54,    55,    -1,    57,    58,    59,    60,    61,    -1,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    -1,    -1,    90,    91,    92,    93,
      94,    95,    -1,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,    -1,   243,
      -1,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,    -1,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,    -1,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,    -1,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,    10,    11,    12,    -1,    -1,
      -1,    16,    -1,    -1,   518,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    44,
      -1,    -1,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    -1,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    88,    -1,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,   297,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    -1,    -1,    15,    -1,    -1,    18,
      -1,   516,   517,    22,    23,    24,    25,    26,    27,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    53,    15,    -1,    -1,    18,    -1,
      -1,    60,    22,    23,    24,    25,    26,    27,    28,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    43,    -1,    -1,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    53,    15,    -1,    -1,    18,    -1,    -1,
      60,    22,    23,    24,    25,    26,    27,    28,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    43,    -1,    -1,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    53,    -1,   133,    -1,    -1,    -1,    -1,    60,
      -1,    15,    -1,    -1,    18,    -1,    -1,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,    -1,    43,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    -1,    -1,    -1,   184,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   201,    -1,    -1,    -1,    -1,   206,    -1,    -1,
      -1,    -1,    -1,    87,   174,    -1,    -1,    -1,    -1,   179,
      -1,    -1,    -1,    -1,   184,    -1,    -1,    -1,    -1,    -1,
     229,   230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   201,    -1,    -1,    -1,   244,   206,    -1,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   184,    -1,    -1,    -1,    -1,    -1,   229,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     201,    -1,    -1,   282,   244,   206,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     299,    -1,    -1,   302,    -1,    -1,    -1,    -1,   229,   230,
     184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,   244,    -1,   285,    -1,   201,    -1,    -1,
      -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,    -1,   299,
      -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,
      -1,   282,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   299,    -1,
      -1,   302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,   282,    -1,
     331,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   299,    -1,    -1,   302,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    15,    -1,    -1,    18,
      -1,   401,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    43,   464,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,
     401,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
     509,    -1,    -1,   512,   513,   514,    -1,   516,   517,   518,
     519,   520,   521,    -1,    -1,    -1,    -1,   401,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    15,    -1,    -1,    18,    -1,
      -1,    -1,    22,    23,    -1,    -1,    26,    27,    28,   509,
      -1,    -1,   512,   513,   514,    -1,   516,   517,   518,   519,
     520,   521,    -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,    -1,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,    -1,   516,   517,   518,   519,   520,
     521,    -1,    -1,    -1,    -1,   184,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    15,   201,    -1,    18,    -1,    -1,   206,    22,    23,
      24,    25,    26,    27,    28,   509,    -1,    -1,   512,   513,
     514,    -1,   516,   517,   518,   519,   520,   521,    -1,    43,
     229,   230,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    -1,    -1,    -1,   244,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    15,    -1,    -1,
      18,    -1,    -1,    87,    22,    23,    24,    25,    26,    27,
      28,    -1,    -1,   282,   184,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,    -1,
     299,   201,    -1,   302,    -1,    53,   206,    -1,    -1,    -1,
      -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   325,    -1,    -1,   229,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    15,    -1,    -1,    18,
      -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    28,
     184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,    43,   285,    -1,   201,    47,    -1,
      -1,    -1,   206,    -1,    53,    -1,    -1,    -1,    -1,   299,
      -1,    60,   401,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,    -1,
     244,   179,    -1,    -1,    -1,    -1,   184,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   201,    -1,    -1,    -1,    -1,   206,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,
      -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   229,   230,    -1,    -1,   299,    -1,    -1,   302,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,
      -1,   401,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,    -1,   516,   517,   518,
     519,   520,   521,    -1,    -1,   184,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   282,    -1,    -1,   285,    -1,    -1,
      -1,    -1,   201,    -1,    -1,    -1,    -1,   206,    -1,    -1,
      -1,   299,    -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    15,    -1,    -1,    18,    -1,
     229,   230,    22,    23,    24,    25,    26,    27,    28,    -1,
      -1,    -1,    -1,    -1,    -1,   244,    -1,   401,    -1,    -1,
      -1,    -1,    -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,   509,
      60,    -1,   512,   513,   514,    -1,   516,   517,   518,   519,
     520,   521,    15,   282,    -1,    18,   285,    -1,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    87,    -1,    -1,
     299,    -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,    -1,
      43,    -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    87,   509,    -1,    -1,   512,   513,
     514,    -1,   516,   517,   518,   519,   520,   521,    -1,    15,
      -1,    -1,    18,    -1,    -1,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   184,    -1,    -1,    43,    -1,    -1,
      -1,    47,   401,    -1,    -1,    -1,    -1,    53,    -1,    -1,
      -1,   201,    -1,    -1,    60,    -1,   206,    -1,    -1,    -1,
      -1,   509,    -1,    -1,   512,   513,   514,    -1,   516,   517,
     518,   519,   520,   521,    -1,    -1,    -1,    -1,    -1,   229,
     230,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   184,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,    -1,
      -1,    -1,    -1,   206,    -1,    -1,    -1,    -1,    15,    -1,
      -1,    18,    -1,    -1,    -1,    22,    23,    24,    25,    26,
      27,    28,   282,    -1,    -1,   285,   229,   230,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,   299,
     509,   244,   302,   512,   513,   514,    53,   516,   517,   518,
     519,   520,   521,    60,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      87,    -1,   285,    -1,    -1,   201,    -1,    -1,    -1,    -1,
     206,    -1,    -1,    -1,    -1,    -1,   299,    -1,    -1,   302,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    15,    -1,
      -1,    18,    -1,   229,   230,    22,    23,    24,    25,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,
      -1,   401,    -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,
      -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,
      87,    -1,    -1,   299,    -1,    -1,   302,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   201,    -1,    -1,    15,   401,   206,
      18,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,   230,    -1,    43,    -1,    -1,    -1,    -1,
      -1,   434,    -1,    -1,    -1,    53,    -1,   244,    -1,    -1,
      -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,    -1,   516,   517,   518,   519,
     520,   521,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,   282,    -1,   184,   285,    -1,
      -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,    -1,    -1,
      -1,    -1,   299,    -1,   201,   302,    -1,    -1,    -1,   206,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,    -1,   516,   517,   518,   519,   520,   521,    -1,
      -1,    -1,   229,   230,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,   285,    -1,
      -1,    -1,    -1,   201,    -1,    -1,    -1,    -1,   206,    -1,
      -1,    -1,   299,   509,   401,   302,   512,   513,   514,    -1,
     516,   517,   518,   519,   520,   521,    -1,    -1,    -1,    -1,
      -1,   229,   230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   282,    -1,    -1,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   299,    -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,    -1,   516,
     517,   518,   519,   520,   521,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   401,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,    -1,   516,
     517,   518,   519,   520,   521,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     5,     6,    -1,    -1,    -1,    10,    11,    -1,    -1,
      -1,   509,    16,    17,   512,   513,   514,    -1,   516,   517,
     518,   519,   520,   521,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,
      54,    55,    -1,    57,    58,    59,    60,    61,    -1,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    -1,    -1,    90,    91,    92,    93,
      94,    95,    -1,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,    -1,   243,
      -1,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,    -1,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,    -1,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,    -1,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,    10,    -1,    12,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      10,    -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    -1,    38,    39,
      40,    -1,    -1,    -1,    44,    -1,    -1,    -1,    -1,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    -1,    -1,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    88,    -1,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,    -1,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,   297,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      41,    42,    -1,    44,    -1,    -1,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    -1,    -1,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    88,    -1,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,    -1,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    71,
      -1,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    88,    -1,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,    -1,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,    -1,    -1,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,   285,   286,    -1,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    -1,
      -1,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    88,    -1,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,   285,   286,    -1,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,
      54,    55,    -1,    57,    58,    59,    60,    61,    -1,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    -1,    -1,    89,    90,    91,    92,    93,
      94,    95,    -1,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,    -1,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,   176,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,    -1,   243,
      -1,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,    -1,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,    -1,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,    -1,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,
      55,    -1,    57,    58,    59,    60,    61,    -1,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    -1,    -1,    90,    91,    92,    93,    94,
      95,    -1,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,    -1,    -1,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,   173,    -1,
     175,   176,   177,    -1,    -1,    -1,   181,   182,   183,    -1,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,    -1,   243,   244,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,    -1,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,    -1,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,    -1,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    10,    -1,    12,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    41,    42,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,
      -1,    57,    58,    59,    60,    61,    -1,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    -1,    -1,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    -1,    -1,    90,    91,    92,    93,    94,    95,
      -1,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,    -1,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,    -1,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
     286,    -1,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,    -1,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,    -1,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,    -1,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,    10,    -1,    12,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    61,    -1,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    -1,    -1,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    -1,    -1,    90,    91,    92,    93,    94,    95,    -1,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,    -1,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,    -1,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,   286,
      -1,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
      -1,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,    -1,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,    57,
      58,    59,    60,    61,    -1,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      -1,    -1,    90,    91,    92,    93,    94,    95,    -1,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
      -1,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,    -1,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
      -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,    -1,    -1,   231,    -1,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,    -1,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
     298,   299,   300,   301,    -1,    -1,   304,   305,   306,    -1,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,    -1,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
      -1,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    53,    54,    55,    -1,    57,    58,
      59,    60,    61,    -1,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    -1,
      -1,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,    -1,
      -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
      -1,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,    -1,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,   298,
     299,   300,   301,    -1,    -1,   304,   305,   306,    -1,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      10,    -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    51,    -1,    53,    54,    55,    -1,    57,    58,    59,
      60,    61,    -1,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    -1,    -1,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,
      90,    91,    92,    93,    94,    95,    -1,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,    -1,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,    -1,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,
      -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,    -1,
      -1,   231,    -1,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,   286,    -1,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,    -1,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,    10,
      -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
      51,    -1,    53,    54,    55,    -1,    57,    58,    59,    60,
      61,    -1,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    -1,    -1,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,    90,
      91,    92,    93,    94,    95,    -1,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,    -1,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,    -1,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,    -1,
     181,   182,   183,    -1,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,
     231,    -1,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,    -1,   243,    -1,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,   286,    -1,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,   298,   299,   300,
     301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
      -1,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,    10,    -1,
      12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    61,
      -1,    63,    64,    -1,    66,    67,    68,    69,    70,    71,
      -1,    -1,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    -1,    -1,    90,    91,
      92,    93,    94,    95,    -1,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,    -1,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,    -1,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,
     182,   183,    -1,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,
      -1,   233,   234,   235,   236,   237,   238,    -1,    -1,   241,
      -1,   243,    -1,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,   286,    -1,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,    -1,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,    -1,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,    -1,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,    10,    -1,    12,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,
      53,    54,    55,    -1,    57,    58,    59,    60,    61,    -1,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    -1,
      -1,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    -1,    -1,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,    -1,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,
     183,    -1,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,    -1,
     243,    -1,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,   286,    -1,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,    -1,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,    -1,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,    -1,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    10,    -1,    12,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,
      54,    55,    -1,    57,    58,    59,    60,    61,    -1,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    -1,    -1,    90,    91,    92,    93,
      94,    95,    -1,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,    -1,   243,
      -1,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,    -1,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,    -1,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,    -1,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,
      55,    -1,    57,    58,    59,    60,    61,    -1,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    -1,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    -1,    -1,    90,    91,    92,    93,    94,
      95,    -1,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,    -1,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,    -1,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,    -1,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,    -1,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    10,    -1,    12,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,
      -1,    57,    58,    59,    60,    61,    -1,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    -1,    -1,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    -1,    -1,    90,    91,    92,    93,    94,    95,
      -1,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,    -1,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,    -1,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
     286,    -1,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,    -1,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,    -1,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,    -1,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,    10,    -1,    12,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    61,    -1,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    -1,    -1,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    -1,    -1,    90,    91,    92,    93,    94,    95,    -1,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,    -1,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,    -1,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,   286,
      -1,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
      -1,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,    -1,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,    57,
      58,    59,    60,    61,    -1,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      -1,    -1,    90,    91,    92,    93,    94,    95,    -1,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
      -1,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,    -1,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
      -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,    -1,    -1,   231,    -1,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,    -1,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,    -1,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,    -1,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
      -1,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    53,    54,    55,    -1,    57,    58,
      59,    60,    61,    -1,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    -1,
      -1,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,    -1,
      -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
      -1,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,    -1,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,    -1,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      10,    -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    -1,    38,    39,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    51,    -1,    53,    54,    55,    -1,    57,    58,    59,
      60,    61,    -1,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    -1,    -1,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,
      90,    91,    92,    93,    94,    95,    -1,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,    -1,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,    -1,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,
      -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,    -1,
      -1,   231,    -1,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,   286,    -1,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,    -1,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,    10,
      -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
      51,    -1,    53,    54,    55,    -1,    57,    58,    59,    60,
      61,    -1,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    -1,    -1,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,    90,
      91,    92,    93,    94,    95,    -1,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,    -1,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,    -1,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,    -1,
     181,   182,   183,    -1,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,
     231,    -1,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,    -1,   243,    -1,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,   286,    -1,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
      -1,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,    10,    -1,
      12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    61,
      -1,    63,    64,    -1,    66,    67,    68,    69,    70,    71,
      -1,    -1,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    -1,    -1,    90,    91,
      92,    93,    94,    95,    -1,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,    -1,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,    -1,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,
     182,   183,    -1,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,
      -1,   233,   234,   235,   236,   237,   238,    -1,    -1,   241,
      -1,   243,    -1,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,   286,    -1,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,    -1,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,    -1,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,    -1,   427,    -1,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    50,    51,    -1,
      53,    54,    55,    -1,    57,    58,    59,    60,    61,    -1,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    -1,
      -1,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    -1,    -1,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,    -1,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,
     183,    -1,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,    -1,
     243,    -1,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,   286,    -1,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,    -1,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,    -1,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,    -1,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    50,    51,    -1,    53,
      54,    55,    -1,    57,    58,    59,    60,    61,    -1,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    -1,    -1,    90,    91,    92,    93,
      94,    95,    -1,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,    -1,   243,
      -1,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,    -1,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,    -1,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,    -1,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,
      55,    -1,    57,    58,    59,    60,    61,    -1,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    -1,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    -1,    -1,    90,    91,    92,    93,    94,
      95,    -1,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,    -1,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,    -1,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,    -1,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,    -1,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    10,    -1,    12,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,
      -1,    57,    58,    59,    60,    61,    -1,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    -1,    -1,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    -1,    -1,    90,    91,    92,    93,    94,    95,
      -1,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,    -1,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,    -1,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
     286,    -1,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,    -1,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,    -1,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,    -1,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,    10,    -1,    12,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    61,    -1,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    -1,    -1,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    -1,    -1,    90,    91,    92,    93,    94,    95,    -1,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,    -1,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,    -1,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,   286,
      -1,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
      -1,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,    -1,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,    57,
      58,    59,    60,    61,    -1,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      -1,    -1,    90,    91,    92,    93,    94,    95,    -1,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
      -1,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,    -1,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
      -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,    -1,    -1,   231,    -1,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,    -1,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,    -1,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,    -1,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
      -1,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    53,    54,    55,    -1,    57,    58,
      59,    60,    61,    -1,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    -1,
      -1,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,    -1,
      -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
      -1,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,    -1,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,    -1,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      10,    -1,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    -1,    38,    39,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    51,    -1,    53,    54,    55,    -1,    57,    58,    59,
      60,    61,    -1,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    -1,    -1,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,
      90,    91,    92,    93,    94,    95,    -1,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,    -1,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,    -1,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,
      -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,    -1,
      -1,   231,    -1,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,   286,    -1,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,    -1,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    44,    -1,    -1,    47,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    -1,    -1,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    -1,    -1,    88,    -1,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,    -1,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,    -1,    -1,    -1,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,   216,    -1,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
      -1,    -1,   283,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,    -1,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,    -1,   329,   330,
     331,    -1,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,    -1,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,    -1,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,    10,    -1,    12,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   505,   506,   507,   508,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    61,    -1,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    -1,    -1,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    -1,    -1,    90,    91,    92,    93,    94,    95,    -1,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,    -1,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,    -1,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,   286,
      -1,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
      -1,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,    -1,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,    57,
      58,    59,    60,    61,    -1,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    -1,
      -1,    -1,    90,    91,    92,    93,    94,    95,    -1,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
      -1,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,    -1,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
      -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,
      -1,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,    -1,    -1,   231,    -1,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,    -1,
     288,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,   306,    -1,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,    -1,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,    -1,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,    -1,   427,
      -1,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      29,    30,    31,    32,    33,    34,    35,    36,    -1,    38,
      39,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,    -1,    53,    54,    55,    -1,    57,    58,
      59,    60,    61,    -1,    63,    64,    -1,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    -1,    -1,
      -1,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,    -1,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,    -1,   125,    -1,   127,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
      -1,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
      -1,   170,   171,   172,   173,    -1,   175,    -1,   177,    -1,
      -1,    -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,   218,
     219,   220,   221,   222,   223,   224,    -1,   226,    -1,   228,
      -1,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
      -1,    -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,    -1,   288,
     289,   290,   291,   292,   293,    -1,   295,   296,    -1,    -1,
     299,   300,   301,    -1,    -1,   304,   305,   306,    -1,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,    -1,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,    -1,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,    -1,   465,   466,   467,   468,
     469,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    -1,    38,    39,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    51,    -1,    53,    54,    55,    -1,    57,    58,    59,
      60,    61,    -1,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    -1,    -1,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,
      90,    91,    92,    93,    94,    95,    -1,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,    -1,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,    -1,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,
      -1,   181,   182,   183,    -1,   185,    -1,   187,    -1,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,    -1,
      -1,   231,    -1,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,    -1,   243,    -1,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,   286,    -1,   288,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,    -1,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,
      31,    32,    33,    34,    35,    36,    -1,    38,    39,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
      51,    -1,    53,    54,    55,    -1,    57,    58,    59,    60,
      61,    -1,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    -1,    -1,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    -1,    -1,    -1,    90,
      91,    92,    93,    94,    95,    -1,    97,    98,    99,    -1,
     101,   102,   103,   104,   105,   106,    -1,    -1,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,    -1,   125,    -1,   127,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,
     141,   142,   143,   144,   145,    -1,   147,   148,   149,    -1,
     151,   152,   153,    -1,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,    -1,    -1,    -1,
     181,   182,   183,    -1,   185,    -1,   187,    -1,   189,   190,
     191,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,    -1,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,
     231,    -1,   233,   234,   235,   236,   237,   238,    -1,    -1,
     241,    -1,   243,    -1,    -1,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,   286,    -1,   288,   289,   290,
     291,   292,   293,    -1,   295,   296,    -1,    -1,   299,   300,
     301,    -1,    -1,   304,   305,   306,    -1,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,    -1,    -1,    -1,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
      -1,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
      -1,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,    -1,   427,    -1,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,    -1,   465,   466,   467,   468,   469,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
     481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,
      32,    33,    34,    35,    36,    -1,    38,    39,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    61,
      -1,    63,    64,    -1,    66,    67,    68,    69,    70,    71,
      -1,    -1,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    -1,    -1,    -1,    90,    91,
      92,    93,    94,    95,    -1,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,    -1,    -1,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,    -1,   125,    -1,   127,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,   151,
     152,   153,    -1,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,    -1,   170,   171,
     172,   173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,
     182,   183,    -1,   185,    -1,   187,    -1,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,
      -1,   233,   234,   235,   236,   237,   238,    -1,    -1,   241,
      -1,   243,    -1,    -1,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,   286,    -1,   288,   289,   290,   291,
     292,   293,    -1,   295,   296,    -1,    -1,   299,   300,   301,
      -1,    -1,   304,   305,   306,    -1,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,    -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,    -1,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,    -1,   427,    -1,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,
      33,    34,    35,    36,    -1,    38,    39,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,
      53,    54,    55,    -1,    57,    58,    59,    60,    61,    -1,
      63,    64,    -1,    66,    67,    68,    69,    70,    71,    -1,
      -1,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    -1,    -1,    -1,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,    -1,    -1,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,    -1,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,    -1,    -1,   141,   142,
     143,   144,   145,    -1,   147,   148,   149,    -1,   151,   152,
     153,    -1,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,    -1,   170,   171,   172,
     173,    -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,
     183,    -1,   185,    -1,   187,    -1,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,   218,   219,   220,   221,   222,
     223,   224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,
     233,   234,   235,   236,   237,   238,    -1,    -1,   241,    -1,
     243,    -1,    -1,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,   286,    -1,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,
      -1,   304,   305,   306,    -1,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
      -1,    -1,    -1,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,    -1,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,    -1,   427,    -1,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,    -1,   465,   466,   467,   468,   469,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,   485,    -1,    -1,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    50,    51,    -1,    53,
      54,    55,    -1,    57,    58,    59,    60,    61,    -1,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    -1,    -1,    -1,    90,    91,    92,    93,
      94,    95,    -1,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,
      -1,   185,    -1,   187,    -1,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,    -1,   243,
      -1,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,   286,    -1,   288,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,   306,    -1,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,    -1,   427,    -1,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,    34,
      35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,
      55,    -1,    57,    58,    59,    60,    61,    -1,    63,    64,
      -1,    66,    67,    68,    69,    70,    71,    -1,    -1,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    -1,    -1,    -1,    90,    91,    92,    93,    94,
      95,    -1,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,    -1,    -1,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,    -1,
     125,    -1,   127,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,    -1,    -1,   141,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,   151,   152,   153,    -1,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,
     185,    -1,   187,    -1,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,    -1,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
      -1,   226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,
     235,   236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,
      -1,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,   286,    -1,   288,   289,   290,   291,   292,   293,    -1,
     295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,
     305,   306,    -1,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,    -1,    -1,
      -1,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,    -1,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,    -1,   427,    -1,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,    -1,
     465,   466,   467,   468,   469,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,   481,   482,    -1,    -1,
     485,    -1,    -1,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,
      -1,    57,    58,    59,    60,    61,    -1,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    -1,    -1,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    -1,    -1,    90,    91,    92,    93,    94,    95,
      -1,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,    -1,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,    -1,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,
      -1,   187,    -1,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
     286,    -1,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,    -1,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,    -1,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,    -1,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    61,    -1,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    -1,    -1,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      -1,    -1,    -1,    90,    91,    92,    93,    94,    95,    -1,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,    -1,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,    -1,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,    -1,
     187,    -1,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,   286,
      -1,   288,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,   306,
      -1,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,    -1,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,    -1,
     427,    -1,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    29,    30,    31,    32,    33,    34,    35,    36,    -1,
      38,    39,    40,    -1,    -1,    -1,    44,    -1,    -1,    -1,
      -1,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    -1,    -1,
      88,    -1,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,    -1,   101,   102,   103,   104,   105,   106,    -1,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,    -1,   125,    -1,   127,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,    -1,    -1,   141,   142,   143,   144,   145,    -1,   147,
     148,   149,    -1,   151,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,    -1,   184,   185,    -1,   187,
      -1,    -1,    -1,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,    -1,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,    -1,    -1,   283,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,    -1,   295,   296,    -1,
      -1,   299,   300,   301,    -1,    -1,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,   327,
      -1,   329,   330,   331,    -1,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,    -1,   424,   425,    -1,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,   441,    -1,   443,    -1,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,   454,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,    -1,   465,   466,   467,
     468,   469,    -1,   471,   472,    -1,   474,   475,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    -1,
     488,   489,   490,   491,   492,   493,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   505,   506,   507,
     508,    -1,    -1,    -1,    -1,    29,    30,    31,    32,    33,
      34,    35,    36,    -1,    38,    39,    40,    -1,    -1,    -1,
      44,    -1,    -1,    -1,    -1,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    -1,    -1,    88,    -1,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,    -1,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      -1,   125,    -1,   127,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,    -1,    -1,   141,   142,   143,
     144,   145,    -1,   147,   148,   149,    -1,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,    -1,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,    -1,
     184,   185,    -1,   187,    -1,    -1,    -1,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,    -1,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,   216,    -1,   218,   219,   220,   221,   222,   223,
     224,    -1,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,    -1,    -1,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,    -1,    -1,   283,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
      -1,   295,   296,    -1,    -1,   299,   300,   301,    -1,    -1,
     304,   305,    -1,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,    -1,    -1,
      -1,    -1,   326,   327,    -1,   329,   330,   331,    -1,   333,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,    -1,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,   441,    -1,   443,
      -1,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
      -1,   465,   466,   467,   468,   469,    -1,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,   480,   481,   482,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,   491,   492,   493,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   505,   506,   507,   508,    -1,    -1,    -1,    -1,    29,
      30,    31,    32,    33,    34,    35,    36,    -1,    38,    39,
      40,    -1,    -1,    -1,    44,    -1,    -1,    -1,    -1,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    -1,    -1,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    -1,    -1,    88,    -1,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,    -1,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,    -1,   125,    -1,   127,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,    -1,
      -1,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
      -1,   151,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,    -1,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,    -1,    -1,
      -1,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,   216,    -1,   218,   219,
     220,   221,   222,   223,   224,    -1,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,    -1,
      -1,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,    -1,    -1,   283,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,    -1,   295,   296,    -1,    -1,   299,
     300,   301,    -1,    -1,   304,   305,    -1,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,    -1,    -1,    -1,   326,   327,    -1,   329,
     330,   331,    -1,   333,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,    -1,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,   441,    -1,   443,    -1,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,    -1,   465,   466,   467,   468,   469,
      -1,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    -1,   488,   489,
     490,   491,   492,   493,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   505,   506,   507,   508,    -1,
      -1,    -1,    -1,    29,    30,    31,    32,    33,    34,    35,
      36,    -1,    38,    39,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    51,    -1,    53,    54,    55,
      -1,    57,    58,    59,    60,    61,    -1,    63,    64,    -1,
      66,    67,    68,    69,    70,    71,    -1,    -1,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    -1,    -1,    -1,    90,    91,    92,    93,    94,    95,
      -1,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,    -1,    -1,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,    -1,   125,
      -1,   127,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,    -1,    -1,   141,   142,   143,   144,   145,
      -1,   147,   148,   149,    -1,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,    -1,    -1,    -1,   181,   182,   183,    -1,   185,
      -1,   187,    -1,   189,   190,    -1,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,    -1,
     226,    -1,   228,    -1,    -1,   231,    -1,   233,   234,   235,
     236,   237,   238,    -1,    -1,   241,    -1,   243,    -1,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
     286,    -1,   288,   289,   290,   291,   292,   293,    -1,   295,
     296,    -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,
     306,    -1,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,   321,    -1,    -1,    -1,    -1,
     326,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,    -1,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
      -1,   427,    -1,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,   485,
      -1,    -1,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
      -1,    38,    39,    40,    -1,    -1,    -1,    44,    -1,    -1,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    71,    -1,    -1,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    -1,
      -1,    88,    -1,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
      -1,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,    -1,   125,    -1,
     127,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,    -1,    -1,   141,   142,   143,   144,   145,    -1,
     147,   148,   149,    -1,   151,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,    -1,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,    -1,   184,   185,    -1,
     187,    -1,    -1,    -1,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,   216,
      -1,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,   251,   252,   253,    -1,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,    -1,    -1,   283,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,    -1,   295,   296,
      -1,    -1,   299,   300,   301,    -1,    -1,   304,   305,    -1,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,    -1,    -1,    -1,   326,
     327,    -1,   329,   330,   331,    -1,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,    -1,    -1,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,   441,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,    -1,   465,   466,
     467,   468,   469,    -1,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    29,   485,    -1,
      -1,   488,   489,   490,   491,   492,   493,    39,    -1,    41,
      42,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   505,   506,
     507,   508,    -1,    -1,    -1,    -1,    -1,    59,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      82,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,    -1,   107,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   118,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,   150,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   175,    -1,    -1,    -1,   179,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     322,   323,   324,    -1,    -1,    -1,    -1,    -1,   330,    -1,
      -1,   333,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,    -1,
      -1,    -1,    -1,    -1,   396,    -1,    -1,    -1,   400,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   410,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     422,    -1,    -1,    -1,   426,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   446,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   459,    -1,    -1,
      -1,    -1,    -1,   465,    -1,    -1,    -1,    -1,   470,    -1,
      -1,    -1,    -1,   475,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   511,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   525
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,    29,    39,    41,    42,    54,    59,    68,    82,    91,
      93,   105,   107,   118,   133,   134,   135,   144,   150,   158,
     160,   161,   175,   179,   205,   247,   322,   323,   324,   330,
     333,   364,   373,   389,   396,   400,   410,   422,   426,   446,
     459,   462,   465,   470,   487,   511,   525,   530,   531,   545,
     556,   557,   558,   561,   562,   564,   575,   593,   641,   644,
     653,   656,   660,   662,   665,   666,   670,   676,   678,   682,
     689,   693,   694,   695,   702,   707,   723,   724,   727,   728,
     731,   733,   734,   735,   736,   738,   740,   741,   745,   799,
     800,   982,   985,   986,   987,   988,   993,   996,  1002,  1003,
    1004,  1007,  1009,  1010,  1011,   440,   490,   983,   210,   380,
     391,   426,   477,   115,   199,   559,   983,    10,    29,    30,
      31,    32,    33,    34,    35,    36,    38,    39,    40,    49,
      50,    51,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    66,    67,    68,    69,    70,    71,
      74,    75,    76,    77,    78,    79,    80,    82,    83,    84,
      85,    86,    88,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   101,   102,   103,   104,   105,   106,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   125,   127,   128,   129,   130,
     131,   132,   135,   136,   137,   138,   141,   142,   143,   144,
     145,   147,   148,   149,   151,   152,   153,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   168,
     170,   171,   172,   173,   175,   177,   178,   180,   181,   182,
     183,   184,   185,   187,   189,   190,   191,   192,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     207,   208,   209,   210,   211,   212,   213,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   226,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   241,
     242,   243,   244,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   283,
     284,   285,   286,   288,   289,   290,   291,   292,   293,   295,
     296,   299,   300,   301,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   337,   338,   339,   340,   341,   342,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     401,   402,   403,   404,   405,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     424,   425,   427,   428,   429,   430,   431,   432,   433,   435,
     436,   437,   440,   441,   442,   443,   444,   446,   447,   448,
     449,   450,   451,   452,   453,   456,   457,   458,   460,   461,
     462,   463,   465,   466,   467,   468,   469,   470,   471,   472,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   485,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   538,   539,   540,   568,   881,   971,   975,    10,   183,
     254,   419,   538,   563,   568,   297,   983,    62,   179,   525,
     588,   185,   248,   302,   321,   380,   430,   432,   449,   455,
     458,   639,   658,   701,    12,    37,   333,   568,   569,   970,
      10,    37,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    52,    56,    60,    61,    62,    63,    64,    65,    72,
      73,    78,    79,    81,    86,    87,    88,    89,    90,    96,
     100,   107,   108,   115,   119,   122,   124,   126,   133,   134,
     139,   140,   146,   150,   154,   159,   166,   167,   169,   172,
     174,   176,   178,   179,   180,   183,   184,   186,   188,   189,
     190,   193,   201,   206,   214,   216,   217,   223,   224,   225,
     226,   227,   229,   230,   232,   239,   240,   242,   244,   245,
     254,   275,   276,   277,   281,   282,   285,   287,   288,   290,
     294,   297,   298,   302,   303,   306,   307,   309,   310,   322,
     323,   324,   325,   328,   329,   332,   336,   343,   349,   354,
     368,   371,   375,   389,   390,   397,   400,   401,   404,   406,
     419,   421,   422,   423,   426,   428,   434,   436,   437,   438,
     439,   442,   444,   445,   448,   454,   455,   459,   464,   470,
     471,   473,   475,   483,   484,   486,   487,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   538,   542,
     544,   574,    31,    88,   104,   153,   163,   176,   181,   210,
     253,   257,   327,   342,   377,   380,   391,   394,   412,   426,
     432,   433,   443,   449,   477,   658,   671,   672,   675,   983,
     970,   107,   144,   475,   525,   530,   531,   545,   561,   562,
     575,   593,   641,   644,   653,   660,   662,   665,   666,   670,
     678,   685,   689,   695,   702,   723,   727,   728,   731,   733,
     982,   985,   986,   988,   993,   996,  1002,  1007,   115,    82,
      73,    86,    88,   166,   239,   288,   298,   310,   328,   376,
     421,   442,   444,   448,   470,   525,   567,   568,   569,   734,
     800,   802,   804,   805,   815,   822,   823,   881,   883,   884,
     115,    12,   568,   570,   725,   568,   970,    37,   185,   248,
     395,   436,   440,   472,   568,   994,   995,  1006,   983,    37,
     139,   754,   755,   185,   248,   380,   395,   436,   472,   997,
     998,  1006,   983,   567,   568,   569,   733,   745,   822,   426,
     751,   567,   180,   525,   990,   525,   352,   746,   747,   970,
     746,   734,   735,  1002,   475,   683,   129,   220,   461,   221,
     154,   225,   303,   454,   757,   758,   805,   805,   734,   736,
     738,     3,    37,   436,   440,   567,   733,     0,   528,   199,
     567,   970,   199,   567,   199,   822,   199,   567,   282,   570,
     348,   984,   523,   527,   571,   572,   525,    89,   115,   181,
     210,   253,   380,   391,   426,   449,   477,   566,   115,   733,
     567,   430,   432,   430,   432,   362,   199,   567,   567,   181,
     253,   352,   391,   426,   477,   651,   387,   210,    37,   970,
     199,   574,   259,   443,   114,   426,   426,   477,   384,   387,
     199,   568,   673,   977,   199,   967,   970,   199,   970,   525,
     681,   302,   432,   685,    10,   470,   538,   542,   686,   688,
     689,   691,   692,   683,   568,   570,   563,   525,   525,   174,
     525,   734,   823,   525,   525,   567,   525,   525,   179,   525,
     525,   525,   525,   734,   800,   805,   815,   518,   571,     4,
      47,   568,   816,   817,   816,     3,   389,   737,   525,   734,
     822,   823,    44,    49,   108,   180,   216,   232,   242,   276,
     322,   329,   371,   390,   459,   819,   817,    47,   568,   816,
     818,   511,   827,   570,   514,   525,   525,   729,   995,   995,
     995,   508,   231,   995,   527,   297,     5,     6,     7,     8,
      11,    13,    14,    15,    16,    17,    46,    61,    63,    64,
      72,    78,    79,    90,   119,   122,   124,   143,   159,   167,
     172,   189,   190,   223,   224,   226,   254,   275,   277,   282,
     287,   290,   299,   349,   375,   404,   436,   437,   445,   471,
     509,   516,   517,   518,   523,   525,   568,   570,   734,   789,
     839,   842,   845,   846,   847,   849,   850,   851,   852,   854,
     855,   871,   873,   874,   875,   876,   877,   878,   879,   880,
     881,   882,   884,   886,   901,   902,   913,   935,   942,   950,
     951,   952,   971,   972,   973,   949,   951,   997,   997,   570,
     997,   508,   997,   179,   438,   514,   984,   571,   667,   822,
      10,   178,   180,   475,   689,   989,   991,   178,   992,   568,
     871,   919,   920,   746,     3,   525,   979,   526,   526,   526,
     567,   179,   302,   710,   164,   667,   725,    37,   139,   752,
     752,    66,   752,   169,   174,   245,   294,   763,   765,   766,
     792,   794,   795,   796,   188,   297,   464,   297,   757,   758,
     525,   427,  1005,   508,   231,  1011,   159,    33,    39,   144,
     301,   360,   364,   396,   467,   550,   553,   554,   360,   159,
      47,    67,   113,   209,   258,   268,   280,   312,   360,   366,
     391,   396,   410,   532,   535,   553,   159,   360,   396,   553,
     159,   360,   396,   553,   159,    47,   560,   298,   492,   871,
     943,   573,   574,   572,    10,    37,    44,    49,    56,    62,
      88,    90,    96,   108,   139,   178,   180,   183,   184,   201,
     216,   229,   230,   232,   242,   244,   254,   276,   285,   307,
     309,   329,   371,   390,   401,   419,   428,   448,   473,   475,
     526,   538,   543,   871,   922,   923,   974,   980,   871,   426,
     567,   568,   526,   525,   628,   380,   639,   658,   282,   654,
      47,   477,   199,   567,   199,   567,   643,   199,   567,   199,
     567,   199,   568,   657,    96,   698,   159,   491,    97,   136,
     315,   431,   199,   568,   159,   527,   978,     3,    70,   367,
     674,   159,     3,   674,   159,   297,   679,   680,   871,   980,
     362,     3,   526,    11,   167,   297,   445,   516,   517,   534,
     537,   570,   684,   686,   687,   690,   973,   685,   438,   525,
     583,   587,   871,   920,   525,    10,    75,    76,   116,   117,
     120,   121,   196,   197,   260,   261,   262,   263,   264,   265,
     266,   267,   270,   271,   344,   345,   385,   386,   481,   482,
     505,   506,   570,   857,   858,   859,   860,   861,   862,   863,
     864,   865,   866,   867,   868,   869,   925,   926,   817,   818,
     871,   567,   871,   927,   516,   517,   568,   872,   873,   902,
     913,   929,   525,   871,   919,   930,   871,    65,   179,   240,
     439,   871,   920,   933,   871,   526,   569,   525,   428,   772,
     773,   773,   805,   754,   755,   227,   749,   815,   773,   773,
     773,    44,   232,   390,   819,   232,   307,   820,   805,   820,
     232,   819,   525,   232,   820,   155,   207,   807,   232,   773,
     525,   569,   525,   773,   304,   871,   999,  1001,   922,    10,
      44,    49,    56,    61,    62,    63,    64,    78,    79,    88,
      90,    96,   108,   119,   122,   172,   178,   180,   184,   201,
     216,   223,   224,   226,   229,   230,   232,   242,   244,   254,
     275,   276,   277,   285,   290,   307,   309,   329,   349,   371,
     375,   390,   397,   401,   404,   419,   428,   436,   437,   448,
     454,   471,   475,   538,   541,   833,   835,   836,   838,   840,
     842,   844,   846,   847,   848,   850,   851,   854,   855,   924,
     976,    47,   243,   568,   525,   574,    16,   569,   903,   904,
     905,   523,   734,   474,   853,   871,   939,   853,   853,   525,
     525,   841,   841,   332,   734,   525,   843,     8,    78,    79,
     853,   871,   841,   525,   525,   489,   511,   525,   856,   525,
     856,   871,   871,   871,    90,   155,   953,   957,   871,   920,
     921,   734,   871,   919,     4,   527,   571,   944,   571,   525,
     570,   525,   525,   570,   973,    10,    15,    18,    22,    23,
      24,    25,    26,    27,    28,    43,    47,    53,    60,    87,
     184,   201,   206,   229,   230,   244,   282,   285,   299,   302,
     401,   509,   512,   513,   514,   516,   517,   518,   519,   520,
     521,   911,   912,   913,   915,   947,   488,   887,   309,   871,
       3,   749,   525,   570,   749,    10,   124,   248,   534,   570,
     855,  1000,   111,  1001,  1001,    47,   568,     3,   526,   683,
       3,   526,   747,   967,   968,    47,   979,   667,   200,   362,
     227,   628,   396,   179,   476,   726,   736,   736,    37,   759,
     760,   871,    66,   736,   753,   171,   279,   780,   234,   280,
     348,   399,   461,    11,    16,    37,   775,   871,   516,   517,
     776,   777,   871,   873,   792,   793,   766,   765,   763,   764,
     174,   795,   292,   797,    66,   742,   743,   744,   808,   872,
     951,   951,   763,   792,   920,   243,   567,    81,    89,   100,
     176,   199,   336,   455,   568,   610,   620,   635,    89,   100,
     732,   100,   732,   525,   438,   525,   608,   252,   458,   608,
     100,     3,   438,   567,    10,   838,   534,    66,   536,   534,
     534,   113,   258,   268,    66,   438,   487,   511,   533,   273,
     380,   533,   535,   822,   100,   438,   732,   380,   567,   438,
     380,   559,   568,   583,   524,     4,   922,   922,   923,     3,
     757,   758,    20,    21,   229,   229,   438,   438,   568,   627,
     632,   487,   586,   567,   352,   391,   426,   477,   651,   387,
     159,   107,   593,   655,   660,   695,  1007,   151,   835,   567,
     282,   532,   661,   282,   525,   628,    47,   282,   628,   282,
     525,   645,   646,   647,   648,   649,   650,   652,   282,   206,
     659,   199,   568,   622,   699,   574,   159,   179,   677,   673,
     573,   527,   977,   967,   970,   970,   977,     3,   526,    20,
     691,   685,    11,   973,    11,   973,   570,   574,   585,   592,
      62,   109,   130,   148,   152,   175,   178,   194,   287,   295,
     317,   346,   589,    47,   526,   871,   526,   179,     3,   526,
     325,   928,   526,   872,   872,    18,    22,    23,    26,    27,
      28,   206,   229,   299,   512,   513,   514,   516,   517,   518,
     519,   520,   521,   913,   872,   526,   824,   825,   883,   174,
     179,   931,   932,     3,   526,    47,   933,   920,   933,   933,
     179,   526,    47,   816,   525,   968,    11,    16,   568,   767,
     768,   770,   771,   876,   951,   949,   185,   248,   426,   430,
     432,   458,   567,   750,   484,   828,   526,   805,   232,   805,
     297,   464,   821,   805,   232,   951,   805,   289,   289,   525,
     805,   569,   829,   830,   525,   569,   829,     3,     3,   526,
     527,   525,   838,   525,   525,   527,    46,   837,   525,   857,
     858,   859,   860,   861,   862,   863,   864,   865,   866,   867,
     868,   869,   870,     3,   526,   841,   575,   666,   702,   707,
     730,   733,   985,  1002,   920,     4,     3,     9,   921,   525,
     483,   936,   937,   871,   921,   973,   871,   906,   907,   908,
     909,   853,   853,    15,    22,    23,    26,    27,    28,   512,
     513,   514,   516,   517,   518,   519,   520,   521,   568,   911,
     916,   526,   920,   436,   436,   973,   973,   525,   525,   569,
     954,   362,   961,   174,   524,   526,     3,   871,   518,   572,
     920,   973,   871,   870,   870,   835,   871,   871,   871,   871,
     871,   871,   871,   871,    12,   574,   981,   436,    52,   423,
     948,   977,   871,   871,   525,   734,   877,   934,   942,   139,
     167,   282,   287,   292,   445,   456,   871,   287,   525,   871,
     438,    60,   184,   201,   206,   244,   401,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,    37,    45,   406,
     910,   523,   527,   946,   188,   170,   888,   375,   525,   902,
     952,   179,   801,   922,   801,   525,   570,   568,   989,   567,
     556,   567,   871,     3,   526,   257,   282,   748,   464,   669,
     567,   704,   525,   568,   709,   719,   720,   722,   568,   570,
     568,   570,    48,   133,   761,     3,   464,   761,   273,   736,
     375,   376,   516,   517,   777,   779,   873,   399,   234,   298,
     320,   320,     3,   520,    11,   778,   973,   778,   375,   376,
     779,   567,   966,   286,   403,   798,   525,   968,   969,     3,
     188,   464,   206,   188,   227,   793,   764,   526,   360,   553,
     525,   199,   620,   970,   234,   282,   234,   464,   525,   613,
     834,   835,   970,   568,   199,   970,   199,   568,    33,   144,
     396,   549,   552,   574,   604,   618,   970,   574,   612,   631,
     970,   550,   970,   360,   396,   532,   553,   534,   977,   970,
     534,   977,   970,   534,   360,   396,   553,   970,   970,   970,
     970,   360,   396,   553,   970,   970,   570,   517,   871,   943,
     757,   757,   757,   473,   923,   200,   365,   756,   871,   871,
     287,   565,   570,   287,   565,   568,   341,   582,     3,   526,
     295,   179,   438,   577,   654,   477,   567,   567,   643,   567,
     567,   657,   567,   302,   639,   525,   734,   525,   159,   159,
     244,   568,   610,   620,   623,   626,   636,   638,   487,   489,
     615,   158,   733,   159,   487,   700,   159,   526,   922,     3,
       3,    47,   159,    10,   525,   282,   297,   568,    10,   674,
     573,   674,   297,   674,   679,   871,   583,   254,   518,   523,
     525,   534,   584,   690,   878,   879,   880,     3,   526,    47,
     581,   570,   581,   282,   287,   346,   581,    66,   581,   835,
     526,   871,   871,   871,   931,   835,   872,   872,   872,   872,
     872,   872,   139,   282,   292,   872,   872,   872,   872,   872,
     872,   872,   872,   872,   872,     3,   526,    47,   826,   871,
     871,   932,   931,   835,   526,   526,   526,   920,   835,   968,
     526,   320,   376,   520,   525,   525,   749,   430,   432,   430,
     432,   567,   751,   751,   751,   871,   188,   781,   821,   805,
     871,   525,   805,   174,   525,   569,   812,   821,   835,     3,
     526,   829,   526,   999,    10,   924,    46,   837,   568,   832,
     832,    10,   523,   523,   973,   438,   438,   438,   438,   835,
     461,   526,   871,   903,   524,   920,   871,   146,   937,   938,
     526,   526,   526,     4,     3,     9,   527,   526,   526,   508,
     508,   526,   526,   871,   954,   955,   956,   527,   525,   871,
     958,   360,   965,   568,   885,   940,   941,   871,   957,   526,
     526,   526,   508,   872,   872,   152,   920,   179,   139,   167,
     287,   292,   445,   456,   525,   152,   916,   871,   423,   948,
     871,   934,   871,   438,   525,   734,   871,   943,   573,   525,
     525,   162,   889,   802,   803,   828,   757,   828,   973,   870,
     979,   979,   257,   525,   803,   484,   668,    47,    66,   705,
     715,   722,   944,     3,   801,   514,   726,   726,   510,   762,
     760,   299,   911,   914,   762,    11,   973,   779,   298,   461,
     776,     3,   251,   968,   742,    66,   951,   525,   569,    66,
     273,   438,   871,   282,   635,   525,   159,   525,   613,   210,
     632,   633,   594,    47,   183,   603,   629,   594,    33,   144,
     364,   366,   396,   546,   547,   548,   554,   555,   159,   674,
     159,   674,   604,   618,   604,     3,   526,   570,   597,   514,
     527,     3,   526,   438,   380,   100,   438,   732,   380,   438,
     438,   438,   380,   560,     4,     4,   524,   756,   756,   756,
     923,   289,   289,   526,   525,   576,    10,   413,   414,   570,
     591,   627,   582,   567,   661,   525,    47,   628,   648,   650,
     659,   654,   362,   426,   570,   663,   664,   632,   567,   567,
     643,   567,   526,     3,   295,   608,   295,   297,   607,   970,
     487,   642,   567,   608,    47,   567,   526,   646,   652,   649,
     652,   426,   871,   657,   592,   159,   567,   677,   977,   579,
     590,   690,   585,   570,   570,   287,   632,   518,   632,   570,
     518,   632,   570,   526,   526,   932,   179,   139,   292,   525,
     824,   827,   525,   526,   526,   526,   568,   768,   828,   751,
     751,   751,   751,   567,   567,   567,    66,   193,   790,   821,
     968,   525,   809,   810,   811,   874,   877,   968,   174,    87,
     831,   830,   526,   526,   523,   835,     3,   526,   526,   973,
     524,   973,   526,   858,   860,   861,   862,   861,   862,   862,
     526,   434,   871,   150,   871,   906,   916,   856,   856,   526,
       3,   526,   569,   871,   958,   959,   960,    47,   525,   568,
     962,   206,     3,   526,   961,   870,   871,    43,    43,   871,
     526,   871,   179,   525,   924,   871,   526,   152,   872,   872,
     152,   152,   871,   871,   524,     4,   525,   945,   758,   484,
     871,   308,   893,     3,   781,   756,   781,   526,   730,   871,
     368,   713,   568,   273,   328,   124,   311,   525,   703,   733,
       3,   526,   709,   668,   871,   171,   238,   525,   762,   298,
     567,   526,   969,   188,   734,   735,   951,   969,   970,   970,
     526,   159,   633,   620,   633,   594,   622,     3,   526,   126,
     214,   280,   282,   619,   525,    40,    66,   640,   629,    81,
      87,   100,   124,   126,   214,   282,   287,   336,   354,   455,
     464,   599,   600,   614,   183,   124,   198,   282,   608,   533,
     114,   124,   183,   282,   412,   415,   535,   608,   396,   548,
     449,   970,   568,   552,    10,    44,    49,    56,    62,    88,
      90,    96,   108,   178,   180,   183,   184,   201,   216,   229,
     230,   232,   242,   244,   254,   276,   281,   285,   299,   307,
     309,   329,   371,   390,   397,   401,   419,   428,   448,   454,
     475,   516,   517,   534,   538,   544,   570,   595,   634,   835,
     914,   974,   574,   631,   970,   970,   970,   970,   970,   970,
     970,   970,   970,   970,   583,   943,   943,   526,   526,   526,
     757,   114,   380,   527,   533,   591,   525,   626,   733,   700,
     525,   639,   199,   567,   526,     3,   526,   661,   525,    47,
     617,   615,   623,    93,   681,   114,   280,   628,   733,   648,
     650,    47,    47,   734,   735,   659,   526,   622,   464,   697,
     674,     3,   526,   632,   872,   179,   525,   924,   829,     3,
     526,   526,   781,   567,   567,   567,   567,    37,   110,   189,
     374,   525,   782,   783,   784,   785,   786,   787,   788,   871,
     871,   486,   890,   526,   873,   917,   918,   206,   188,   806,
     810,   526,   812,   813,   814,   977,   837,   973,   568,   837,
     837,   524,   524,   871,   954,     3,   526,   568,   962,   963,
     964,    47,   871,   873,   941,   965,   871,   871,   871,   924,
     526,   871,    43,    43,   871,   871,   152,   526,   517,   943,
     526,   922,   526,   871,   526,   525,   568,   894,   790,   526,
     790,   570,   526,   950,   470,   425,   463,   714,   568,   708,
     718,   297,   711,   722,   514,   713,   916,    66,   526,   526,
     469,   470,   739,   594,   620,   526,   526,   487,   625,   127,
     202,   212,   126,   466,   871,   124,    47,   525,   977,   970,
     872,   127,   202,   126,   287,   234,   567,   625,    95,   640,
     199,   287,   534,   871,   640,   287,   516,   517,   537,   568,
     834,   835,   674,   674,    10,   254,   419,   974,   978,   514,
     438,   438,   524,   524,   756,   526,   526,   568,   583,   464,
     578,   580,   632,   526,   642,    47,   592,   426,   282,   525,
     570,   700,   626,   158,   733,   156,   208,   607,   129,   144,
     335,   642,   114,   700,   487,  1008,   426,   525,   297,   568,
     696,   525,   590,   872,   924,   526,   526,    16,   361,   774,
     790,   525,   398,   525,   526,     3,   568,   891,   892,   343,
     791,     3,   526,   525,   569,    66,   526,   206,   526,   813,
     524,   835,   958,     3,   526,   568,   524,   199,   526,   871,
     871,   871,     4,     4,   524,   526,   526,   568,   895,   890,
     570,   890,     3,   469,   944,     3,   526,    98,   713,   871,
     526,   969,   969,   354,   625,   525,   616,   594,   526,   198,
     525,   871,   282,   600,   625,   628,   970,    47,   159,   831,
     978,   520,   595,   970,   970,   526,   533,   131,   526,   615,
     733,   526,   567,   159,    47,   526,   970,   642,    37,    92,
     101,   125,   198,   211,   412,   415,   611,   611,   376,   376,
      47,    71,    81,   248,   734,   592,   567,   525,   568,   712,
     721,   883,   526,   526,   525,   890,   920,   525,   920,   784,
      47,     3,   871,   464,   769,   873,   951,   968,   817,   525,
     817,   962,   871,   943,   943,   317,   896,   791,   791,   733,
     708,   311,   733,   297,   525,   706,   567,   594,   574,   621,
     624,   416,   479,   601,   602,   525,   596,   871,   526,   256,
     637,   198,   464,   551,   520,   449,   583,   570,   700,   607,
    1008,   525,   567,   733,   615,   681,   733,    81,   300,    81,
     526,   697,   871,    87,   716,     3,   526,   716,    16,   791,
     526,   783,   526,   894,   892,   378,   526,   951,   524,   524,
     524,    66,   757,   769,   769,   714,   100,   721,   140,   628,
     514,     3,   526,   532,   526,   280,   609,   180,   316,   402,
     297,   605,   606,   630,   596,   871,   449,    47,   525,  1008,
     607,   642,  1008,   300,   300,   525,   526,   977,   717,   977,
     712,   700,   717,   526,   769,   526,   771,   526,   919,   191,
     347,   376,   897,   469,   970,   526,   283,   461,   637,   595,
     624,   526,   602,   212,   129,   461,   297,   630,   297,   605,
     733,   721,   716,   761,   828,   761,    60,   111,   451,   871,
     898,   899,   898,   898,   526,   733,   828,   396,   606,    70,
     280,   367,   396,   598,   598,  1008,   526,   717,   762,   762,
     899,   375,   173,   331,   173,   331,   155,   900,   900,   900,
     720,   594,    32,   124,   287,   700,   761,    43,   111,   188,
     280,   435,   828,   828,   762,   899,   375,   305
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   529,  1009,  1010,  1010,  1011,  1011,  1011,  1011,  1011,
    1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,
    1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,
    1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,
    1011,  1011,  1011,  1011,  1011,  1011,  1011,   567,   567,   568,
     568,   568,   569,   569,   570,   571,   571,   572,   573,   574,
     574,   574,   574,   662,   662,   662,   663,   663,   664,   664,
     653,   653,   653,   654,   654,   655,   655,   655,   655,   731,
     731,   731,   731,   731,   731,   731,   731,   731,   731,   731,
     731,   731,   732,   732,   678,   678,   678,   679,   679,   680,
     680,   681,   681,   987,   702,   703,   703,   703,   703,   703,
     704,   704,   705,   705,   705,   706,   706,   706,   707,   707,
     708,   709,   709,   710,   710,   710,   711,   711,   711,   712,
     712,   712,   713,   713,   714,   714,   715,   715,   716,   716,
     717,   717,   718,   718,   719,   719,   720,   720,   721,   721,
     722,   682,   682,   682,   682,   683,   683,   684,   684,   684,
     685,   685,   685,   685,   685,   685,   685,   685,   685,   685,
     685,   685,   685,   685,   685,   685,   685,   685,   685,   685,
     685,   685,   685,   685,   685,   685,   685,   685,   685,   685,
     685,   686,   686,   686,   687,   687,   688,   688,   689,   689,
     690,   690,   690,   690,   691,   692,   692,   988,   988,   988,
     988,   988,   989,   989,   989,   989,   989,   990,   990,   991,
     991,   992,   992,   562,   562,   563,   563,   561,  1007,  1007,
    1007,  1007,  1007,  1008,  1008,  1008,  1008,   660,   660,   660,
     661,   661,   575,   575,   575,   576,   576,   576,   577,   577,
     578,   578,   579,   579,   580,   580,   581,   581,   582,   582,
     583,   583,   584,   584,   584,   584,   584,   584,   584,   584,
     585,   586,   586,   587,   587,   588,   588,   589,   589,   589,
     589,   589,   589,   589,   589,   589,   589,   589,   589,   589,
     589,   589,   589,   590,   591,   591,   591,   591,   591,   592,
     592,   996,   996,   996,   996,   996,   997,   997,   997,   997,
     998,   998,   999,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
    1001,  1001,   666,   666,   667,   667,   667,   668,   668,   669,
     669,   728,   729,   729,   730,   730,   730,   730,   730,   730,
     530,   530,   530,   530,   530,   530,   593,   593,   593,   594,
     594,   595,   595,   595,   595,   595,   595,   596,   596,   597,
     598,   598,   598,   598,   598,   599,   599,   599,   599,   600,
     600,   600,   600,   600,   600,   600,   600,   601,   601,   602,
     602,   603,   603,   603,   604,   605,   606,   606,   606,   606,
     606,   607,   607,   607,   607,   608,   609,   609,   610,   610,
     611,   611,   611,   611,   611,   611,   611,   611,   612,   612,
     613,   614,   614,   614,   614,   615,   615,   615,   615,   616,
     617,   617,   617,   618,   619,   619,   619,   619,   619,   619,
     620,   620,   621,   621,   622,   623,   623,   623,   624,   624,
     625,   625,   626,   626,   626,   627,   628,   628,   629,   629,
     630,   631,   631,   631,   631,   632,   632,   633,   633,   634,
     634,   634,   635,   635,   635,   635,   635,   635,   636,   636,
     637,   637,   637,   637,   638,   639,   639,   639,   639,   639,
     639,   639,   639,   640,   640,   733,   733,   734,   734,   734,
     735,   735,   735,   735,   735,   735,   735,   735,   736,   736,
     737,   737,   738,   738,   738,   738,   738,   738,   738,   738,
     738,   738,   738,   738,   738,   738,   738,   738,   738,   738,
     738,   739,   739,   740,   740,   741,   741,   742,   742,   742,
     743,   743,   744,   744,   745,   745,   745,   746,   746,   747,
     748,   748,   748,   749,   749,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   751,   751,   752,   752,   752,   753,
     754,   754,   755,   755,   756,   756,   756,   757,   757,   758,
     758,   759,   759,   760,   760,   761,   761,   761,   762,   762,
     762,   763,   763,   763,   763,   764,   764,   765,   765,   765,
     765,   766,   766,   767,   767,   767,   768,   768,   768,   768,
     769,   769,   770,   770,   771,   771,   771,   771,   772,   773,
     773,   774,   774,   775,   775,   775,   775,   775,   776,   777,
     777,   777,   778,   778,   779,   779,   780,   780,   781,   781,
     781,   782,   782,   783,   783,   784,   784,   784,   784,   784,
     785,   786,   787,   788,   789,   789,   790,   790,   791,   791,
     792,   792,   793,   793,   794,   794,   795,   796,   796,   796,
     796,   797,   797,   798,   798,   798,   799,   799,   800,   800,
     801,   801,   802,   802,   803,   803,   804,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   806,   806,   807,   807,   807,   808,   808,   809,   809,
     809,   810,   810,   811,   811,   812,   812,   813,   814,   814,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   816,   816,   816,   816,   817,   817,   818,   818,   818,
     818,   818,   819,   819,   819,   819,   819,   819,   820,   820,
     821,   821,   822,   822,   822,   822,   823,   823,   824,   825,
     825,   826,   826,   827,   827,   828,   828,   829,   829,   830,
     831,   831,   832,   832,   833,   833,   834,   834,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   836,   836,
     837,   837,   837,   838,   838,   838,   838,   838,   838,   838,
     839,   839,   839,   839,   840,   841,   841,   842,   842,   842,
     842,   842,   842,   842,   842,   842,   842,   842,   843,   843,
     844,   844,   845,   845,   846,   847,   848,   848,   849,   849,
     850,   851,   852,   852,   852,   852,   852,   852,   853,   853,
     854,   854,   854,   854,   855,   856,   856,   856,   857,   857,
     858,   858,   859,   859,   860,   860,   861,   861,   862,   862,
     863,   863,   864,   864,   865,   865,   866,   866,   867,   867,
     868,   868,   869,   869,   870,   870,   870,   870,   870,   870,
     870,   870,   870,   870,   870,   870,   870,   870,   870,   870,
     870,   870,   870,   870,   870,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   872,   872,   872,   872,
     872,   872,   872,   872,   872,   872,   872,   872,   872,   872,
     872,   872,   872,   872,   872,   872,   872,   872,   872,   872,
     872,   873,   873,   874,   874,   874,   874,   874,   874,   875,
     875,   875,   876,   876,   876,   877,   877,   877,   877,   877,
     877,   877,   877,   877,   877,   878,   879,   880,   881,   881,
     881,   881,   881,   881,   882,   882,   883,   883,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   885,   886,   886,   887,   887,   888,   888,   888,
     889,   889,   890,   890,   891,   891,   892,   893,   893,   893,
     894,   895,   895,   896,   896,   897,   897,   897,   897,   898,
     898,   899,   899,   899,   899,   899,   900,   900,   900,   900,
     900,   901,   901,   902,   902,   903,   904,   904,   905,   905,
     906,   907,   907,   908,   908,   909,   909,   910,   910,   910,
     911,   911,   912,   912,   912,   912,   912,   912,   912,   912,
     912,   912,   912,   912,   912,   912,   913,   913,   914,   914,
     915,   915,   915,   915,   915,   915,   915,   915,   916,   916,
     917,   917,   918,   918,   919,   919,   920,   920,   921,   921,
     922,   922,   923,   923,   923,   924,   924,   925,   925,   926,
     926,   926,   926,   926,   926,   926,   926,   926,   926,   926,
     926,   926,   926,   926,   927,   927,   928,   929,   929,   930,
     930,   930,   930,   930,   930,   931,   932,   933,   933,   933,
     934,   934,   934,   934,   935,   936,   936,   937,   938,   938,
     939,   939,   940,   940,   941,   942,   942,   572,   572,   572,
     572,   943,   943,   944,   944,   945,   945,   945,   946,   946,
     946,   946,   946,   947,   947,   948,   948,   949,   949,   950,
     950,   951,   951,   952,   952,   952,   952,   953,   953,   954,
     954,   955,   955,   956,   956,   957,   957,   958,   959,   959,
     960,   960,   961,   961,   961,   962,   963,   963,   964,   964,
     965,   965,   965,   966,   966,   967,   967,   968,   968,   969,
     969,   970,   971,   971,   972,   972,   972,   972,   972,   972,
     972,   972,   972,   972,   972,   972,   972,   972,   973,   974,
     974,   974,   975,   975,   975,   976,   976,   976,   977,   977,
     978,   978,   979,   979,   980,   981,   981,   986,  1002,  1002,
    1002,  1002,  1002,  1002,  1002,  1002,  1003,  1003,  1004,  1004,
    1005,  1005,  1006,  1006,   656,   656,   656,   657,   657,   658,
     658,   658,   659,   659,   723,   723,   723,   723,   724,   724,
     725,   725,   726,   726,   726,   670,   670,   670,   670,   670,
     670,   671,   671,   671,   671,   671,   671,   671,   671,   671,
     671,   671,   671,   671,   671,   671,   671,   671,   671,   672,
     672,   672,   672,   672,   672,   673,   673,   674,   674,   674,
     675,   675,   675,   545,   545,   545,   545,   545,   545,   545,
     545,   546,   546,   547,   547,   548,   548,   548,   548,   549,
     549,   550,   550,   550,   550,   550,   550,   550,   550,   550,
     550,   550,   550,   550,   550,   550,   550,   550,   550,   550,
     550,   550,   550,   550,   550,   550,   550,   550,   550,   550,
     551,   551,   552,   552,   552,   552,   553,   553,   554,   555,
     555,   555,   564,   564,   565,   565,   566,   566,   566,   566,
     566,   566,   566,   566,   566,   566,   693,   693,   694,   993,
     993,   993,   993,   993,   994,   994,   995,   995,   995,   665,
     665,   665,   665,   695,   695,   696,   697,   697,   698,   698,
     699,   699,   700,   700,   701,   701,   557,   557,   558,   558,
     558,   559,   559,   560,   560,   644,   644,   644,   644,   644,
     644,   645,   646,   647,   647,   648,   648,   649,   650,   650,
     651,   651,   652,   652,   556,   556,   727,   727,   727,   676,
     676,   677,   677,   982,   982,   982,   982,   982,   982,   983,
     983,   983,   984,   984,   984,   985,   641,   641,   641,   642,
     642,   642,   643,   531,   531,   532,   532,   533,   533,   533,
     534,   534,   534,   534,   535,   535,   535,   535,   535,   535,
     535,   535,   535,   535,   535,   535,   535,   535,   536,   536,
     537,   537,   537,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   539,   539,   539,
     539,   539,   539,   539,   539,   539,   539,   539,   539,   539,
     539,   539,   539,   539,   539,   539,   539,   539,   539,   539,
     539,   539,   539,   539,   539,   539,   539,   539,   539,   539,
     539,   539,   539,   539,   539,   539,   539,   539,   539,   539,
     539,   539,   539,   539,   539,   539,   539,   539,   539,   539,
     539,   540,   540,   540,   540,   540,   540,   540,   540,   540,
     540,   540,   540,   540,   540,   540,   540,   540,   540,   540,
     540,   540,   540,   540,   540,   540,   540,   540,   540,   541,
     541,   541,   541,   541,   541,   541,   541,   541,   541,   541,
     541,   541,   541,   541,   541,   541,   541,   541,   541,   541,
     541,   541,   541,   541,   541,   541,   541,   541,   542,   542,
     542,   542,   542,   542,   542,   542,   542,   542,   542,   542,
     542,   542,   542,   542,   542,   542,   542,   542,   542,   542,
     542,   542,   542,   542,   542,   542,   542,   542,   542,   542,
     542,   542,   542,   542,   542,   542,   542,   542,   542,   542,
     542,   542,   542,   542,   542,   542,   542,   542,   542,   542,
     542,   542,   542,   542,   542,   542,   542,   542,   542,   542,
     542,   542,   542,   542,   542,   542,   542,   542,   542,   542,
     542,   542,   542,   542,   542,   542,   542,   542,   542,   543,
     543,   543,   543,   543,   543,   543,   543,   543,   543,   543,
     543,   543,   543,   543,   543,   543,   543,   543,   543,   543,
     543,   543,   543,   543,   543,   543,   543,   543,   543,   543,
     543,   544,   544,   544,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     6,     8,     5,     1,     0,     1,     3,
       4,     7,     6,     2,     0,     1,     1,     1,     1,     6,
       6,     8,     6,     8,     6,     8,     6,     8,     8,    10,
       8,    10,     1,     0,     3,     9,    12,     1,     3,     1,
       3,     3,     0,     2,     9,     1,     4,     4,     7,     2,
       1,     3,     2,     2,     0,     4,     3,     0,     1,     0,
       2,     3,     5,     2,     2,     0,     8,     5,     0,     5,
       5,     7,     2,     0,     1,     1,     1,     3,     2,     0,
       1,     0,     1,     3,     1,     3,     1,     2,     1,     3,
       2,     2,     4,     3,     5,     1,     0,     1,     1,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     4,     6,     5,
       4,     6,     1,     1,     1,     1,     1,     1,     0,     1,
       3,     1,     0,     3,     2,     1,     0,     2,     9,    12,
      11,    12,    14,     3,     4,     4,     0,     5,     8,     7,
       1,     0,    11,     9,     7,     0,     3,     3,     1,     1,
       3,     0,     1,     3,     1,     0,     1,     0,     1,     0,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     3,     3,
       4,     3,     2,     1,     1,     1,     1,     3,     1,     1,
       3,     2,     3,     3,     3,     3,     1,     3,     3,     2,
       3,     3,     1,     1,     1,     3,     5,     1,     1,     1,
       1,     3,     7,     3,     1,     2,     3,     2,     0,     2,
       0,     5,     3,     0,     1,     1,     1,     1,     1,     1,
       6,     8,     6,     8,     6,     8,     9,    12,    11,     0,
       2,     1,     1,     1,     1,     1,     1,     3,     0,     1,
       2,     1,     1,     2,     2,     3,     1,     1,     2,     2,
       1,     2,     3,     5,     3,     2,     5,     1,     1,     1,
       0,     5,     7,     5,     2,     3,     1,     1,     2,     2,
       0,     3,     4,     4,     0,     3,     2,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     1,     2,     2,     2,     2,     2,     2,     0,     3,
       3,     3,     0,     1,     2,     1,     2,     2,     2,     2,
       3,     4,     1,     3,     1,     1,     1,     1,     3,     1,
       2,     0,     1,     2,     0,     1,     3,     0,     2,     0,
       3,     3,     1,     5,     3,     1,     3,     1,     2,     1,
       4,     5,     5,     6,     3,     7,     4,    11,     1,     3,
       2,     2,     2,     0,     3,     1,     1,     2,     2,     2,
       2,     1,     0,     1,     2,     1,     1,     3,     3,     3,
       1,     2,     4,     4,     2,     3,     5,     5,     1,     1,
       3,     0,    11,    11,    10,    12,     1,     2,     5,     4,
       4,     4,     4,     7,     5,     4,     7,     6,     9,     9,
       4,     1,     1,     1,     1,     1,     1,     1,     5,     1,
       1,     3,     1,     2,     2,     2,     3,     1,     3,     7,
       1,     2,     0,     2,     0,     3,     3,     4,     4,     4,
       4,     3,     2,     1,     1,     0,     1,     1,     0,     2,
       1,     5,     1,     0,     2,     2,     0,     1,     0,     3,
       5,     1,     3,     4,     3,     1,     1,     0,     2,     2,
       0,     2,     2,     1,     1,     1,     0,     2,     4,     5,
       4,     2,     3,     1,     1,     1,     2,     2,     1,     2,
       3,     0,     1,     0,     5,     1,     4,     6,     2,     1,
       0,     4,     0,     1,     1,     2,     2,     2,     1,     1,
       2,     2,     1,     1,     1,     1,     1,     1,     3,     3,
       0,     1,     3,     1,     2,     1,     1,     1,     1,     1,
       2,     4,     4,     5,     1,     1,     2,     0,     2,     0,
       1,     3,     1,     0,     1,     2,     3,     2,     4,     2,
       3,     2,     0,     1,     2,     0,     4,     5,     1,     2,
       2,     0,     1,     3,     1,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     1,     4,     4,     9,
       9,     3,     0,     2,     2,     0,     5,     3,     1,     1,
       3,     5,     3,     1,     2,     1,     3,     5,     1,     2,
       3,     4,     5,     4,     5,     4,     6,     5,     4,     5,
       5,     5,     2,     4,     1,     1,     0,     1,     4,     5,
       4,     0,     2,     2,     2,     1,     1,     1,     1,     0,
       4,     2,     1,     2,     2,     4,     2,     6,     2,     1,
       3,     4,     0,     2,     0,     2,     0,     1,     3,     3,
       2,     0,     2,     4,     1,     1,     1,     0,     2,     3,
       5,     6,     2,     3,     1,     5,     5,     5,     3,     3,
       3,     4,     0,     1,     1,     1,     1,     1,     2,     4,
       1,     1,     1,     1,     2,     3,     0,     1,     1,     1,
       1,     1,     2,     2,     2,     2,     2,     1,     3,     0,
       1,     1,     1,     1,     5,     2,     1,     1,     1,     1,
       4,     1,     2,     2,     1,     3,     3,     2,     1,     0,
       5,     2,     5,     2,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     0,     1,     3,     3,     5,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     3,     3,
       2,     2,     3,     3,     5,     4,     6,     3,     5,     4,
       6,     4,     6,     5,     7,     3,     2,     4,     3,     2,
       3,     3,     3,     3,     4,     3,     4,     3,     4,     5,
       6,     6,     7,     6,     7,     6,     7,     3,     4,     4,
       6,     1,     5,     4,     4,     6,     1,     3,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     2,     2,     5,     6,     6,
       7,     1,     2,     1,     1,     1,     2,     2,     4,     3,
       1,     1,     1,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     2,     4,     2,     3,     3,     4,     3,     6,
       7,     9,     7,     7,     5,     1,     1,     1,     5,     6,
       6,     4,     4,     4,     4,     6,     5,     5,     5,     4,
       6,     4,     1,     7,     9,     5,     0,     5,     4,     0,
       1,     0,     2,     0,     1,     3,     3,     2,     2,     0,
       6,     1,     0,     3,     0,     3,     3,     3,     0,     1,
       4,     2,     2,     2,     2,     2,     3,     2,     2,     3,
       0,     4,     3,     1,     5,     3,     1,     3,     1,     2,
       3,     1,     3,     1,     2,     1,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     4,     1,     4,
       1,     4,     1,     2,     1,     2,     1,     2,     1,     3,
       1,     3,     1,     2,     1,     3,     1,     2,     1,     0,
       1,     3,     1,     3,     3,     1,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     3,     2,     3,     0,     3,
       3,     2,     2,     1,     0,     2,     2,     3,     2,     1,
       1,     3,     1,     1,     5,     1,     2,     4,     2,     0,
       1,     0,     1,     3,     1,     1,     2,     3,     5,     7,
       7,     1,     0,     0,     2,     0,     2,     3,     3,     3,
       5,     7,     7,     0,     2,     1,     0,     1,     0,     1,
       3,     1,     2,     3,     2,     1,     3,     4,     2,     1,
       3,     1,     3,     1,     2,     1,     0,     3,     1,     3,
       1,     2,     4,     2,     0,     3,     1,     3,     1,     2,
       4,     2,     0,     1,     3,     1,     3,     1,     2,     1,
       3,     1,     1,     2,     1,     1,     2,     1,     1,     2,
       7,     2,     5,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     3,     3,     0,     1,     1,     1,     4,     2,     2,
       2,     2,     3,     4,     3,     1,     1,     1,     1,     1,
       1,     0,     1,     3,     8,    11,    10,     0,     1,     0,
       1,     1,     0,     2,     2,     4,     6,     6,     0,     1,
       1,     1,     0,     2,     2,     6,     4,     6,     4,     6,
       8,     1,     1,     1,     1,     2,     1,     2,     1,     2,
       1,     1,     1,     1,     3,     3,     3,     3,     1,     2,
       2,     1,     3,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     4,     6,     4,     6,     4,     6,     4,
       6,     1,     2,     3,     2,     1,     3,     2,     3,     1,
       3,     2,     5,     3,     6,     4,     6,     6,     6,     5,
       5,     6,     9,     4,     5,     7,     6,     4,     8,     4,
       2,     4,     3,     6,     4,     2,     2,     2,     2,     1,
       2,     0,     1,     2,     2,     2,     1,     3,     4,     2,
       1,     0,     6,     6,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     1,     1,     1,     4,     6,     3,     2,
       3,     3,     3,     3,     1,     1,     1,     2,     3,     2,
       3,     2,     3,    13,    16,     1,     2,     0,     1,     0,
       1,     0,     2,     0,     1,     0,     5,     8,     2,     3,
       5,     1,     0,     2,     0,     5,     8,     7,     5,     8,
       7,     4,     4,     1,     3,     1,     1,     3,     1,     3,
       1,     1,     2,     3,     2,     4,     2,     4,     5,     5,
       7,     0,     2,     2,     3,     3,     2,     2,     2,     1,
       1,     0,     2,     2,     0,     8,     7,    10,     9,     2,
       3,     0,     4,     4,     6,     1,     2,     1,     1,     0,
       1,     2,     2,     1,     2,     2,     1,     2,     3,     2,
       2,     2,     2,     3,     3,     3,     1,     3,     1,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF

/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YYLOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

# ifndef YYLOCATION_PRINT

#  if defined YY_LOCATION_PRINT

   /* Temporary convenience wrapper in case some people defined the
      undocumented and private YY_LOCATION_PRINT macros.  */
#   define YYLOCATION_PRINT(File, Loc)  YY_LOCATION_PRINT(File, *(Loc))

#  elif defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static int
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  int res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
}

#   define YYLOCATION_PRINT  yy_location_print_

    /* Temporary convenience wrapper in case some people defined the
       undocumented and private YY_LOCATION_PRINT macros.  */
#   define YY_LOCATION_PRINT(File, Loc)  YYLOCATION_PRINT(File, &(Loc))

#  else

#   define YYLOCATION_PRINT(File, Loc) ((void) 0)
    /* Temporary convenience wrapper in case some people defined the
       undocumented and private YY_LOCATION_PRINT macros.  */
#   define YY_LOCATION_PRINT  YYLOCATION_PRINT

#  endif
# endif /* !defined YYLOCATION_PRINT */


# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (yylocationp);
  YY_USE (yyscanner);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  YYLOCATION_PRINT (yyo, yylocationp);
  YYFPRINTF (yyo, ": ");
  yy_symbol_value_print (yyo, yykind, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp,
                 int yyrule, core_yyscan_t yyscanner)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)],
                       &(yylsp[(yyi + 1) - (yynrhs)]), yyscanner);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, yyscanner); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
{
  YY_USE (yyvaluep);
  YY_USE (yylocationp);
  YY_USE (yyscanner);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (core_yyscan_t yyscanner)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs = 0; (void)yynerrs;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

    /* The location stack: array, bottom, top.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls = yylsa;
    YYLTYPE *yylsp = yyls;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[3];



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  yylsp[0] = yylloc;
  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yyls1, yysize * YYSIZEOF (*yylsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
        yyls = yyls1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, &yylloc, yyscanner);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      yyerror_range[1] = yylloc;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location. */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  yyerror_range[1] = yyloc;
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* stmtblock: stmtmulti  */
#line 510 "libpg_query/grammar/grammar.y"
                        {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[0].list);
			}
#line 19329 "./grammar/grammar_out.cpp"
    break;

  case 3: /* stmtmulti: stmtmulti ';' stmt  */
#line 526 "libpg_query/grammar/grammar.y"
                                {
					if ((yyvsp[-2].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[-2].list)), (yylsp[-1]));
					}
					if ((yyvsp[0].node) != NULL)
						(yyval.list) = lappend((yyvsp[-2].list), makeRawStmt((yyvsp[0].node), (yylsp[-1]) + 1));
					else
						(yyval.list) = (yyvsp[-2].list);
				}
#line 19345 "./grammar/grammar_out.cpp"
    break;

  case 4: /* stmtmulti: stmt  */
#line 538 "libpg_query/grammar/grammar.y"
                                {
					if ((yyvsp[0].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[0].node), 0));
					else
						(yyval.list) = NIL;
				}
#line 19356 "./grammar/grammar_out.cpp"
    break;

  case 46: /* stmt: %empty  */
#line 588 "libpg_query/grammar/grammar.y"
        { (yyval.node) = NULL; }
#line 19362 "./grammar/grammar_out.cpp"
    break;

  case 47: /* qualified_name: ColIdOrString  */
#line 10 "./grammar/statements/common.y"
                                {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[0].str), (yylsp[0]));
				}
#line 19370 "./grammar/grammar_out.cpp"
    break;

  case 48: /* qualified_name: ColId indirection  */
#line 14 "./grammar/statements/common.y"
                                {
					check_qualified_name((yyvsp[0].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[-1]));
					switch (list_length((yyvsp[0].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[-1].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[0].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[-1].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[0].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[0].list)));
							break;
						case 3:
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)))),
									 parser_errposition((yylsp[-1]))));
							break;
					}
				}
#line 19400 "./grammar/grammar_out.cpp"
    break;

  case 49: /* ColId: IDENT  */
#line 44 "./grammar/statements/common.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 19406 "./grammar/grammar_out.cpp"
    break;

  case 50: /* ColId: unreserved_keyword  */
#line 45 "./grammar/statements/common.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 19412 "./grammar/grammar_out.cpp"
    break;

  case 51: /* ColId: col_name_keyword  */
#line 46 "./grammar/statements/common.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 19418 "./grammar/grammar_out.cpp"
    break;

  case 52: /* ColIdOrString: ColId  */
#line 50 "./grammar/statements/common.y"
                                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 19424 "./grammar/grammar_out.cpp"
    break;

  case 53: /* ColIdOrString: SCONST  */
#line 51 "./grammar/statements/common.y"
                                                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 19430 "./grammar/grammar_out.cpp"
    break;

  case 54: /* Sconst: SCONST  */
#line 55 "./grammar/statements/common.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 19436 "./grammar/grammar_out.cpp"
    break;

  case 55: /* indirection: indirection_el  */
#line 59 "./grammar/statements/common.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 19442 "./grammar/grammar_out.cpp"
    break;

  case 56: /* indirection: indirection indirection_el  */
#line 60 "./grammar/statements/common.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 19448 "./grammar/grammar_out.cpp"
    break;

  case 57: /* indirection_el: '.' attr_name  */
#line 65 "./grammar/statements/common.y"
                                {
					(yyval.node) = (PGNode *) makeString((yyvsp[0].str));
				}
#line 19456 "./grammar/grammar_out.cpp"
    break;

  case 58: /* attr_name: ColLabel  */
#line 70 "./grammar/statements/common.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 19462 "./grammar/grammar_out.cpp"
    break;

  case 59: /* ColLabel: IDENT  */
#line 75 "./grammar/statements/common.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 19468 "./grammar/grammar_out.cpp"
    break;

  case 60: /* ColLabel: other_keyword  */
#line 76 "./grammar/statements/common.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 19474 "./grammar/grammar_out.cpp"
    break;

  case 61: /* ColLabel: unreserved_keyword  */
#line 77 "./grammar/statements/common.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 19480 "./grammar/grammar_out.cpp"
    break;

  case 62: /* ColLabel: reserved_keyword  */
#line 78 "./grammar/statements/common.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 19486 "./grammar/grammar_out.cpp"
    break;

  case 63: /* CreateTypeStmt: CREATE_P TYPE_P qualified_name AS ENUM_P select_with_parens  */
#line 8 "./grammar/statements/create_type.y"
                                {
					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
					n->typeName = (yyvsp[-3].range);
					n->kind = PG_NEWTYPE_ENUM;
					n->query = (yyvsp[0].node);
					n->vals = NULL;
					(yyval.node) = (PGNode *)n;
				}
#line 19499 "./grammar/grammar_out.cpp"
    break;

  case 64: /* CreateTypeStmt: CREATE_P TYPE_P qualified_name AS ENUM_P '(' opt_enum_val_list ')'  */
#line 17 "./grammar/statements/create_type.y"
                                {
					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
					n->typeName = (yyvsp[-5].range);
					n->kind = PG_NEWTYPE_ENUM;
					n->vals = (yyvsp[-1].list);
					n->query = NULL;
					(yyval.node) = (PGNode *)n;
				}
#line 19512 "./grammar/grammar_out.cpp"
    break;

  case 65: /* CreateTypeStmt: CREATE_P TYPE_P qualified_name AS Typename  */
#line 26 "./grammar/statements/create_type.y"
                                {
					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
					n->typeName = (yyvsp[-2].range);
					n->query = NULL;
					auto name = std::string(reinterpret_cast<PGValue *>((yyvsp[0].typnam)->names->tail->data.ptr_value)->val.str);
					if (name == "enum") {
						n->kind = PG_NEWTYPE_ENUM;
						n->vals = (yyvsp[0].typnam)->typmods;
					} else {
						n->kind = PG_NEWTYPE_ALIAS;
						n->ofType = (yyvsp[0].typnam);
					}
					(yyval.node) = (PGNode *)n;
				}
#line 19531 "./grammar/grammar_out.cpp"
    break;

  case 66: /* opt_enum_val_list: enum_val_list  */
#line 46 "./grammar/statements/create_type.y"
                                      { (yyval.list) = (yyvsp[0].list);}
#line 19537 "./grammar/grammar_out.cpp"
    break;

  case 67: /* opt_enum_val_list: %empty  */
#line 47 "./grammar/statements/create_type.y"
                                                        {(yyval.list) = NIL;}
#line 19543 "./grammar/grammar_out.cpp"
    break;

  case 68: /* enum_val_list: Sconst  */
#line 51 "./grammar/statements/create_type.y"
                                {
					(yyval.list) = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
				}
#line 19551 "./grammar/grammar_out.cpp"
    break;

  case 69: /* enum_val_list: enum_val_list ',' Sconst  */
#line 55 "./grammar/statements/create_type.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), makeStringConst((yyvsp[0].str), (yylsp[0])));
				}
#line 19559 "./grammar/grammar_out.cpp"
    break;

  case 70: /* CreateSchemaStmt: CREATE_P SCHEMA qualified_name OptSchemaEltList  */
#line 8 "./grammar/statements/create_schema.y"
                                {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					if ((yyvsp[-1].range)->catalogname) {
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA too many dots: expected \"catalog.schema\" or \"schema\""),
								 parser_errposition((yylsp[-1]))));
					}
					if ((yyvsp[-1].range)->schemaname) {
						n->catalogname = (yyvsp[-1].range)->schemaname;
						n->schemaname = (yyvsp[-1].range)->relname;
					} else {
						n->schemaname = (yyvsp[-1].range)->relname;
					}
					n->schemaElts = (yyvsp[0].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 19582 "./grammar/grammar_out.cpp"
    break;

  case 71: /* CreateSchemaStmt: CREATE_P SCHEMA IF_P NOT EXISTS qualified_name OptSchemaEltList  */
#line 27 "./grammar/statements/create_schema.y"
                                {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					if ((yyvsp[-1].range)->catalogname) {
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA too many dots: expected \"catalog.schema\" or \"schema\""),
								 parser_errposition((yylsp[-1]))));
					}
					if ((yyvsp[-1].range)->schemaname) {
						n->catalogname = (yyvsp[-1].range)->schemaname;
						n->schemaname = (yyvsp[-1].range)->relname;
					} else {
						n->schemaname = (yyvsp[-1].range)->relname;
					}
					if ((yyvsp[0].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[0]))));
					n->schemaElts = (yyvsp[0].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 19610 "./grammar/grammar_out.cpp"
    break;

  case 72: /* CreateSchemaStmt: CREATE_P OR REPLACE SCHEMA qualified_name OptSchemaEltList  */
#line 51 "./grammar/statements/create_schema.y"
                                {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					if ((yyvsp[-1].range)->catalogname) {
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA too many dots: expected \"catalog.schema\" or \"schema\""),
								 parser_errposition((yylsp[-1]))));
					}
					if ((yyvsp[-1].range)->schemaname) {
						n->catalogname = (yyvsp[-1].range)->schemaname;
						n->schemaname = (yyvsp[-1].range)->relname;
					} else {
						n->schemaname = (yyvsp[-1].range)->relname;
					}
					n->schemaElts = (yyvsp[0].list);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 19633 "./grammar/grammar_out.cpp"
    break;

  case 73: /* OptSchemaEltList: OptSchemaEltList schema_stmt  */
#line 74 "./grammar/statements/create_schema.y"
                                {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[0]);
					(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node));
				}
#line 19643 "./grammar/grammar_out.cpp"
    break;

  case 74: /* OptSchemaEltList: %empty  */
#line 80 "./grammar/statements/create_schema.y"
                                { (yyval.list) = NIL; }
#line 19649 "./grammar/grammar_out.cpp"
    break;

  case 79: /* RenameStmt: ALTER SCHEMA name RENAME TO name  */
#line 7 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 19662 "./grammar/grammar_out.cpp"
    break;

  case 80: /* RenameStmt: ALTER TABLE relation_expr RENAME TO name  */
#line 16 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 19676 "./grammar/grammar_out.cpp"
    break;

  case 81: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME TO name  */
#line 26 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 19690 "./grammar/grammar_out.cpp"
    break;

  case 82: /* RenameStmt: ALTER SEQUENCE qualified_name RENAME TO name  */
#line 36 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 19704 "./grammar/grammar_out.cpp"
    break;

  case 83: /* RenameStmt: ALTER SEQUENCE IF_P EXISTS qualified_name RENAME TO name  */
#line 46 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 19718 "./grammar/grammar_out.cpp"
    break;

  case 84: /* RenameStmt: ALTER VIEW qualified_name RENAME TO name  */
#line 56 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 19732 "./grammar/grammar_out.cpp"
    break;

  case 85: /* RenameStmt: ALTER VIEW IF_P EXISTS qualified_name RENAME TO name  */
#line 66 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 19746 "./grammar/grammar_out.cpp"
    break;

  case 86: /* RenameStmt: ALTER INDEX qualified_name RENAME TO name  */
#line 76 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 19760 "./grammar/grammar_out.cpp"
    break;

  case 87: /* RenameStmt: ALTER INDEX IF_P EXISTS qualified_name RENAME TO name  */
#line 86 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 19774 "./grammar/grammar_out.cpp"
    break;

  case 88: /* RenameStmt: ALTER TABLE relation_expr RENAME opt_column name TO name  */
#line 96 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 19789 "./grammar/grammar_out.cpp"
    break;

  case 89: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
#line 107 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 19804 "./grammar/grammar_out.cpp"
    break;

  case 90: /* RenameStmt: ALTER TABLE relation_expr RENAME CONSTRAINT name TO name  */
#line 118 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 19818 "./grammar/grammar_out.cpp"
    break;

  case 91: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME CONSTRAINT name TO name  */
#line 128 "./grammar/statements/rename.y"
                                {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 19832 "./grammar/grammar_out.cpp"
    break;

  case 92: /* opt_column: COLUMN  */
#line 140 "./grammar/statements/rename.y"
                                                                                        { (yyval.ival) = COLUMN; }
#line 19838 "./grammar/grammar_out.cpp"
    break;

  case 93: /* opt_column: %empty  */
#line 141 "./grammar/statements/rename.y"
                                                                                                { (yyval.ival) = 0; }
#line 19844 "./grammar/grammar_out.cpp"
    break;

  case 94: /* ExecuteStmt: EXECUTE name execute_param_clause  */
#line 8 "./grammar/statements/execute.y"
                                {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[-1].str);
					n->params = (yyvsp[0].list);
					(yyval.node) = (PGNode *) n;
				}
#line 19855 "./grammar/grammar_out.cpp"
    break;

  case 95: /* ExecuteStmt: CREATE_P OptTemp TABLE create_as_target AS EXECUTE name execute_param_clause opt_with_data  */
#line 16 "./grammar/statements/execute.y"
                                {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[-2].str);
					n->params = (yyvsp[-1].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[-5].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[-5].into)->rel->relpersistence = (yyvsp[-7].ival);
					(yyvsp[-5].into)->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (PGNode *) ctas;
				}
#line 19875 "./grammar/grammar_out.cpp"
    break;

  case 96: /* ExecuteStmt: CREATE_P OptTemp TABLE IF_P NOT EXISTS create_as_target AS EXECUTE name execute_param_clause opt_with_data  */
#line 33 "./grammar/statements/execute.y"
                                {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[-2].str);
					n->params = (yyvsp[-1].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[-5].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[-5].into)->rel->relpersistence = (yyvsp[-10].ival);
					(yyvsp[-5].into)->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (PGNode *) ctas;
				}
#line 19895 "./grammar/grammar_out.cpp"
    break;

  case 97: /* execute_param_expr: a_expr  */
#line 52 "./grammar/statements/execute.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 19903 "./grammar/grammar_out.cpp"
    break;

  case 98: /* execute_param_expr: param_name COLON_EQUALS a_expr  */
#line 56 "./grammar/statements/execute.y"
                                {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[-2].str);
					na->arg = (PGExpr *) (yyvsp[0].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[-2]);
					(yyval.node) = (PGNode *) na;
				}
#line 19916 "./grammar/grammar_out.cpp"
    break;

  case 99: /* execute_param_list: execute_param_expr  */
#line 66 "./grammar/statements/execute.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 19924 "./grammar/grammar_out.cpp"
    break;

  case 100: /* execute_param_list: execute_param_list ',' execute_param_expr  */
#line 70 "./grammar/statements/execute.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 19932 "./grammar/grammar_out.cpp"
    break;

  case 101: /* execute_param_clause: '(' execute_param_list ')'  */
#line 75 "./grammar/statements/execute.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 19938 "./grammar/grammar_out.cpp"
    break;

  case 102: /* execute_param_clause: %empty  */
#line 76 "./grammar/statements/execute.y"
                                                                                        { (yyval.list) = NIL; }
#line 19944 "./grammar/grammar_out.cpp"
    break;

  case 103: /* UseStmt: USE_P qualified_name  */
#line 3 "./grammar/statements/use.y"
                                {
					PGUseStmt *n = makeNode(PGUseStmt);
					n->name = (yyvsp[0].range);
					(yyval.node) = (PGNode *) n;
				}
#line 19954 "./grammar/grammar_out.cpp"
    break;

  case 104: /* InsertStmt: opt_with_clause INSERT opt_or_action INTO insert_target opt_by_name_or_position insert_rest opt_on_conflict returning_clause  */
#line 11 "./grammar/statements/insert.y"
                                {
					(yyvsp[-2].istmt)->relation = (yyvsp[-4].range);
					(yyvsp[-2].istmt)->onConflictAlias = (yyvsp[-6].onconflictshorthand);
					(yyvsp[-2].istmt)->onConflictClause = (yyvsp[-1].onconflict);
					(yyvsp[-2].istmt)->returningList = (yyvsp[0].list);
					(yyvsp[-2].istmt)->withClause = (yyvsp[-8].with);
					(yyvsp[-2].istmt)->insert_column_order = (yyvsp[-3].bynameorposition);
					(yyval.node) = (PGNode *) (yyvsp[-2].istmt);
				}
#line 19968 "./grammar/grammar_out.cpp"
    break;

  case 105: /* insert_rest: SelectStmt  */
#line 24 "./grammar/statements/insert.y"
                                {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[0].node);
				}
#line 19978 "./grammar/grammar_out.cpp"
    break;

  case 106: /* insert_rest: OVERRIDING override_kind VALUE_P SelectStmt  */
#line 30 "./grammar/statements/insert.y"
                                {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[-2].override);
					(yyval.istmt)->selectStmt = (yyvsp[0].node);
				}
#line 19989 "./grammar/grammar_out.cpp"
    break;

  case 107: /* insert_rest: '(' insert_column_list ')' SelectStmt  */
#line 37 "./grammar/statements/insert.y"
                                {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[-2].list);
					(yyval.istmt)->selectStmt = (yyvsp[0].node);
				}
#line 19999 "./grammar/grammar_out.cpp"
    break;

  case 108: /* insert_rest: '(' insert_column_list ')' OVERRIDING override_kind VALUE_P SelectStmt  */
#line 43 "./grammar/statements/insert.y"
                                {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[-5].list);
					(yyval.istmt)->override = (yyvsp[-2].override);
					(yyval.istmt)->selectStmt = (yyvsp[0].node);
				}
#line 20010 "./grammar/grammar_out.cpp"
    break;

  case 109: /* insert_rest: DEFAULT VALUES  */
#line 50 "./grammar/statements/insert.y"
                                {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				}
#line 20020 "./grammar/grammar_out.cpp"
    break;

  case 110: /* insert_target: qualified_name  */
#line 60 "./grammar/statements/insert.y"
                                {
					(yyval.range) = (yyvsp[0].range);
				}
#line 20028 "./grammar/grammar_out.cpp"
    break;

  case 111: /* insert_target: qualified_name AS ColId  */
#line 64 "./grammar/statements/insert.y"
                                {
					(yyvsp[-2].range)->alias = makeAlias((yyvsp[0].str), NIL);
					(yyval.range) = (yyvsp[-2].range);
				}
#line 20037 "./grammar/grammar_out.cpp"
    break;

  case 112: /* opt_by_name_or_position: BY NAME_P  */
#line 71 "./grammar/statements/insert.y"
                                                        { (yyval.bynameorposition) = PG_INSERT_BY_NAME; }
#line 20043 "./grammar/grammar_out.cpp"
    break;

  case 113: /* opt_by_name_or_position: BY POSITION  */
#line 72 "./grammar/statements/insert.y"
                                                { (yyval.bynameorposition) = PG_INSERT_BY_POSITION; }
#line 20049 "./grammar/grammar_out.cpp"
    break;

  case 114: /* opt_by_name_or_position: %empty  */
#line 73 "./grammar/statements/insert.y"
                                                { (yyval.bynameorposition) = PG_INSERT_BY_POSITION; }
#line 20055 "./grammar/grammar_out.cpp"
    break;

  case 115: /* opt_conf_expr: '(' index_params ')' where_clause  */
#line 78 "./grammar/statements/insert.y"
                                {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[-2].list);
					(yyval.infer)->whereClause = (yyvsp[0].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[-3]);
				}
#line 20067 "./grammar/grammar_out.cpp"
    break;

  case 116: /* opt_conf_expr: ON CONSTRAINT name  */
#line 87 "./grammar/statements/insert.y"
                                {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[0].str);
					(yyval.infer)->location = (yylsp[-2]);
				}
#line 20079 "./grammar/grammar_out.cpp"
    break;

  case 117: /* opt_conf_expr: %empty  */
#line 95 "./grammar/statements/insert.y"
                                {
					(yyval.infer) = NULL;
				}
#line 20087 "./grammar/grammar_out.cpp"
    break;

  case 118: /* opt_with_clause: with_clause  */
#line 102 "./grammar/statements/insert.y"
                                                                                        { (yyval.with) = (yyvsp[0].with); }
#line 20093 "./grammar/grammar_out.cpp"
    break;

  case 119: /* opt_with_clause: %empty  */
#line 103 "./grammar/statements/insert.y"
                                                                                        { (yyval.with) = NULL; }
#line 20099 "./grammar/grammar_out.cpp"
    break;

  case 120: /* insert_column_item: ColId opt_indirection  */
#line 109 "./grammar/statements/insert.y"
                                {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[-1].str);
					(yyval.target)->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[-1]);
				}
#line 20111 "./grammar/grammar_out.cpp"
    break;

  case 121: /* set_clause: set_target '=' a_expr  */
#line 121 "./grammar/statements/insert.y"
                                {
					(yyvsp[-2].target)->val = (PGNode *) (yyvsp[0].node);
					(yyval.list) = list_make1((yyvsp[-2].target));
				}
#line 20120 "./grammar/grammar_out.cpp"
    break;

  case 122: /* set_clause: '(' set_target_list ')' '=' a_expr  */
#line 126 "./grammar/statements/insert.y"
                                {
					int ncolumns = list_length((yyvsp[-3].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[-3].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[0].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[-3].list);
				}
#line 20145 "./grammar/grammar_out.cpp"
    break;

  case 123: /* opt_or_action: OR REPLACE  */
#line 151 "./grammar/statements/insert.y"
                                {
					(yyval.onconflictshorthand) = PG_ONCONFLICT_ALIAS_REPLACE;
				}
#line 20153 "./grammar/grammar_out.cpp"
    break;

  case 124: /* opt_or_action: OR IGNORE_P  */
#line 156 "./grammar/statements/insert.y"
                                {
					(yyval.onconflictshorthand) = PG_ONCONFLICT_ALIAS_IGNORE;
				}
#line 20161 "./grammar/grammar_out.cpp"
    break;

  case 125: /* opt_or_action: %empty  */
#line 160 "./grammar/statements/insert.y"
                                {
					(yyval.onconflictshorthand) = PG_ONCONFLICT_ALIAS_NONE;
				}
#line 20169 "./grammar/grammar_out.cpp"
    break;

  case 126: /* opt_on_conflict: ON CONFLICT opt_conf_expr DO UPDATE SET set_clause_list_opt_comma where_clause  */
#line 167 "./grammar/statements/insert.y"
                                {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[-5].infer);
					(yyval.onconflict)->targetList = (yyvsp[-1].list);
					(yyval.onconflict)->whereClause = (yyvsp[0].node);
					(yyval.onconflict)->location = (yylsp[-7]);
				}
#line 20182 "./grammar/grammar_out.cpp"
    break;

  case 127: /* opt_on_conflict: ON CONFLICT opt_conf_expr DO NOTHING  */
#line 177 "./grammar/statements/insert.y"
                                {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[-2].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[-4]);
				}
#line 20195 "./grammar/grammar_out.cpp"
    break;

  case 128: /* opt_on_conflict: %empty  */
#line 186 "./grammar/statements/insert.y"
                                {
					(yyval.onconflict) = NULL;
				}
#line 20203 "./grammar/grammar_out.cpp"
    break;

  case 129: /* index_elem: ColId opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 193 "./grammar/statements/insert.y"
                                {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[-4].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = (yyvsp[-1].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[0].nullorder);
				}
#line 20218 "./grammar/grammar_out.cpp"
    break;

  case 130: /* index_elem: func_expr_windowless opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 204 "./grammar/statements/insert.y"
                                {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[-4].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = (yyvsp[-1].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[0].nullorder);
				}
#line 20233 "./grammar/grammar_out.cpp"
    break;

  case 131: /* index_elem: '(' a_expr ')' opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 215 "./grammar/statements/insert.y"
                                {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[-5].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = (yyvsp[-1].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[0].nullorder);
				}
#line 20248 "./grammar/grammar_out.cpp"
    break;

  case 132: /* returning_clause: RETURNING target_list  */
#line 229 "./grammar/statements/insert.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 20254 "./grammar/grammar_out.cpp"
    break;

  case 133: /* returning_clause: %empty  */
#line 230 "./grammar/statements/insert.y"
                                                                { (yyval.list) = NIL; }
#line 20260 "./grammar/grammar_out.cpp"
    break;

  case 134: /* override_kind: USER  */
#line 236 "./grammar/statements/insert.y"
                                        { (yyval.override) = PG_OVERRIDING_USER_VALUE; }
#line 20266 "./grammar/grammar_out.cpp"
    break;

  case 135: /* override_kind: SYSTEM_P  */
#line 237 "./grammar/statements/insert.y"
                                        { (yyval.override) = OVERRIDING_SYSTEM_VALUE; }
#line 20272 "./grammar/grammar_out.cpp"
    break;

  case 136: /* set_target_list: set_target  */
#line 242 "./grammar/statements/insert.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 20278 "./grammar/grammar_out.cpp"
    break;

  case 137: /* set_target_list: set_target_list ',' set_target  */
#line 243 "./grammar/statements/insert.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list),(yyvsp[0].target)); }
#line 20284 "./grammar/grammar_out.cpp"
    break;

  case 138: /* opt_collate: COLLATE any_name  */
#line 249 "./grammar/statements/insert.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 20290 "./grammar/grammar_out.cpp"
    break;

  case 139: /* opt_collate: %empty  */
#line 250 "./grammar/statements/insert.y"
                                                                                                { (yyval.list) = NIL; }
#line 20296 "./grammar/grammar_out.cpp"
    break;

  case 140: /* opt_class: any_name  */
#line 254 "./grammar/statements/insert.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 20302 "./grammar/grammar_out.cpp"
    break;

  case 141: /* opt_class: %empty  */
#line 255 "./grammar/statements/insert.y"
                                                                                                { (yyval.list) = NIL; }
#line 20308 "./grammar/grammar_out.cpp"
    break;

  case 142: /* insert_column_list: insert_column_item  */
#line 261 "./grammar/statements/insert.y"
                                        { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 20314 "./grammar/grammar_out.cpp"
    break;

  case 143: /* insert_column_list: insert_column_list ',' insert_column_item  */
#line 263 "./grammar/statements/insert.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
#line 20320 "./grammar/grammar_out.cpp"
    break;

  case 144: /* set_clause_list: set_clause  */
#line 268 "./grammar/statements/insert.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 20326 "./grammar/grammar_out.cpp"
    break;

  case 145: /* set_clause_list: set_clause_list ',' set_clause  */
#line 269 "./grammar/statements/insert.y"
                                                                { (yyval.list) = list_concat((yyvsp[-2].list),(yyvsp[0].list)); }
#line 20332 "./grammar/grammar_out.cpp"
    break;

  case 146: /* set_clause_list_opt_comma: set_clause_list  */
#line 273 "./grammar/statements/insert.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 20338 "./grammar/grammar_out.cpp"
    break;

  case 147: /* set_clause_list_opt_comma: set_clause_list ','  */
#line 274 "./grammar/statements/insert.y"
                                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 20344 "./grammar/grammar_out.cpp"
    break;

  case 148: /* index_params: index_elem  */
#line 277 "./grammar/statements/insert.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].ielem)); }
#line 20350 "./grammar/grammar_out.cpp"
    break;

  case 149: /* index_params: index_params ',' index_elem  */
#line 278 "./grammar/statements/insert.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].ielem)); }
#line 20356 "./grammar/grammar_out.cpp"
    break;

  case 150: /* set_target: ColId opt_indirection  */
#line 284 "./grammar/statements/insert.y"
                                {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[-1].str);
					(yyval.target)->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[-1]);
				}
#line 20368 "./grammar/grammar_out.cpp"
    break;

  case 151: /* ExplainStmt: EXPLAIN ExplainableStmt  */
#line 10 "./grammar/statements/explain.y"
                                {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				}
#line 20379 "./grammar/grammar_out.cpp"
    break;

  case 152: /* ExplainStmt: EXPLAIN analyze_keyword opt_verbose ExplainableStmt  */
#line 17 "./grammar/statements/explain.y"
                                {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[-2])));
					if ((yyvsp[-1].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[-1])));
					(yyval.node) = (PGNode *) n;
				}
#line 20393 "./grammar/grammar_out.cpp"
    break;

  case 153: /* ExplainStmt: EXPLAIN VERBOSE ExplainableStmt  */
#line 27 "./grammar/statements/explain.y"
                                {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[-1])));
					(yyval.node) = (PGNode *) n;
				}
#line 20404 "./grammar/grammar_out.cpp"
    break;

  case 154: /* ExplainStmt: EXPLAIN '(' explain_option_list ')' ExplainableStmt  */
#line 34 "./grammar/statements/explain.y"
                                {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = (yyvsp[-2].list);
					(yyval.node) = (PGNode *) n;
				}
#line 20415 "./grammar/grammar_out.cpp"
    break;

  case 155: /* opt_verbose: VERBOSE  */
#line 44 "./grammar/statements/explain.y"
                                                                                                { (yyval.boolean) = true; }
#line 20421 "./grammar/grammar_out.cpp"
    break;

  case 156: /* opt_verbose: %empty  */
#line 45 "./grammar/statements/explain.y"
                                                                                                { (yyval.boolean) = false; }
#line 20427 "./grammar/grammar_out.cpp"
    break;

  case 157: /* explain_option_arg: opt_boolean_or_string  */
#line 50 "./grammar/statements/explain.y"
                                                { (yyval.node) = (PGNode *) makeString((yyvsp[0].str)); }
#line 20433 "./grammar/grammar_out.cpp"
    break;

  case 158: /* explain_option_arg: NumericOnly  */
#line 51 "./grammar/statements/explain.y"
                                                        { (yyval.node) = (PGNode *) (yyvsp[0].value); }
#line 20439 "./grammar/grammar_out.cpp"
    break;

  case 159: /* explain_option_arg: %empty  */
#line 52 "./grammar/statements/explain.y"
                                                        { (yyval.node) = NULL; }
#line 20445 "./grammar/grammar_out.cpp"
    break;

  case 191: /* NonReservedWord: IDENT  */
#line 91 "./grammar/statements/explain.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 20451 "./grammar/grammar_out.cpp"
    break;

  case 192: /* NonReservedWord: unreserved_keyword  */
#line 92 "./grammar/statements/explain.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 20457 "./grammar/grammar_out.cpp"
    break;

  case 193: /* NonReservedWord: other_keyword  */
#line 93 "./grammar/statements/explain.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 20463 "./grammar/grammar_out.cpp"
    break;

  case 194: /* NonReservedWord_or_Sconst: NonReservedWord  */
#line 98 "./grammar/statements/explain.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 20469 "./grammar/grammar_out.cpp"
    break;

  case 195: /* NonReservedWord_or_Sconst: Sconst  */
#line 99 "./grammar/statements/explain.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 20475 "./grammar/grammar_out.cpp"
    break;

  case 196: /* explain_option_list: explain_option_elem  */
#line 105 "./grammar/statements/explain.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 20483 "./grammar/grammar_out.cpp"
    break;

  case 197: /* explain_option_list: explain_option_list ',' explain_option_elem  */
#line 109 "./grammar/statements/explain.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 20491 "./grammar/grammar_out.cpp"
    break;

  case 198: /* analyze_keyword: ANALYZE  */
#line 116 "./grammar/statements/explain.y"
                                                                                                {}
#line 20497 "./grammar/grammar_out.cpp"
    break;

  case 199: /* analyze_keyword: ANALYSE  */
#line 117 "./grammar/statements/explain.y"
                                                                                {}
#line 20503 "./grammar/grammar_out.cpp"
    break;

  case 200: /* opt_boolean_or_string: TRUE_P  */
#line 122 "./grammar/statements/explain.y"
                                                                                                { (yyval.str) = (char*) "true"; }
#line 20509 "./grammar/grammar_out.cpp"
    break;

  case 201: /* opt_boolean_or_string: FALSE_P  */
#line 123 "./grammar/statements/explain.y"
                                                                                                { (yyval.str) = (char*) "false"; }
#line 20515 "./grammar/grammar_out.cpp"
    break;

  case 202: /* opt_boolean_or_string: ON  */
#line 124 "./grammar/statements/explain.y"
                                                                                                { (yyval.str) = (char*) "on"; }
#line 20521 "./grammar/grammar_out.cpp"
    break;

  case 203: /* opt_boolean_or_string: NonReservedWord_or_Sconst  */
#line 130 "./grammar/statements/explain.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 20527 "./grammar/grammar_out.cpp"
    break;

  case 204: /* explain_option_elem: explain_option_name explain_option_arg  */
#line 136 "./grammar/statements/explain.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node), (yylsp[-1]));
				}
#line 20535 "./grammar/grammar_out.cpp"
    break;

  case 205: /* explain_option_name: NonReservedWord  */
#line 143 "./grammar/statements/explain.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 20541 "./grammar/grammar_out.cpp"
    break;

  case 206: /* explain_option_name: analyze_keyword  */
#line 144 "./grammar/statements/explain.y"
                                                        { (yyval.str) = (char*) "analyze"; }
#line 20547 "./grammar/grammar_out.cpp"
    break;

  case 207: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose  */
#line 9 "./grammar/statements/vacuum.y"
                                {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[-2].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[-1].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[0].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				}
#line 20565 "./grammar/grammar_out.cpp"
    break;

  case 208: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose qualified_name opt_name_list  */
#line 23 "./grammar/statements/vacuum.y"
                                {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[-4].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[-3].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[-2].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 20583 "./grammar/grammar_out.cpp"
    break;

  case 209: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose AnalyzeStmt  */
#line 37 "./grammar/statements/vacuum.y"
                                {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[0].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[-3].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[-2].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[-1].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				}
#line 20599 "./grammar/grammar_out.cpp"
    break;

  case 210: /* VacuumStmt: VACUUM '(' vacuum_option_list ')'  */
#line 49 "./grammar/statements/vacuum.y"
                                {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[-1].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				}
#line 20611 "./grammar/grammar_out.cpp"
    break;

  case 211: /* VacuumStmt: VACUUM '(' vacuum_option_list ')' qualified_name opt_name_list  */
#line 57 "./grammar/statements/vacuum.y"
                                {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[-3].ival);
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				}
#line 20625 "./grammar/grammar_out.cpp"
    break;

  case 212: /* vacuum_option_elem: analyze_keyword  */
#line 70 "./grammar/statements/vacuum.y"
                                                { (yyval.ival) = PG_VACOPT_ANALYZE; }
#line 20631 "./grammar/grammar_out.cpp"
    break;

  case 213: /* vacuum_option_elem: VERBOSE  */
#line 71 "./grammar/statements/vacuum.y"
                                                        { (yyval.ival) = PG_VACOPT_VERBOSE; }
#line 20637 "./grammar/grammar_out.cpp"
    break;

  case 214: /* vacuum_option_elem: FREEZE  */
#line 72 "./grammar/statements/vacuum.y"
                                                        { (yyval.ival) = PG_VACOPT_FREEZE; }
#line 20643 "./grammar/grammar_out.cpp"
    break;

  case 215: /* vacuum_option_elem: FULL  */
#line 73 "./grammar/statements/vacuum.y"
                                                        { (yyval.ival) = PG_VACOPT_FULL; }
#line 20649 "./grammar/grammar_out.cpp"
    break;

  case 216: /* vacuum_option_elem: IDENT  */
#line 75 "./grammar/statements/vacuum.y"
                                {
					if (strcmp((yyvsp[0].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[0].str)),
									 parser_errposition((yylsp[0]))));
				}
#line 20663 "./grammar/grammar_out.cpp"
    break;

  case 217: /* opt_full: FULL  */
#line 87 "./grammar/statements/vacuum.y"
                                                                                        { (yyval.boolean) = true; }
#line 20669 "./grammar/grammar_out.cpp"
    break;

  case 218: /* opt_full: %empty  */
#line 88 "./grammar/statements/vacuum.y"
                                                                                                { (yyval.boolean) = false; }
#line 20675 "./grammar/grammar_out.cpp"
    break;

  case 219: /* vacuum_option_list: vacuum_option_elem  */
#line 93 "./grammar/statements/vacuum.y"
                                                                                                        { (yyval.ival) = (yyvsp[0].ival); }
#line 20681 "./grammar/grammar_out.cpp"
    break;

  case 220: /* vacuum_option_list: vacuum_option_list ',' vacuum_option_elem  */
#line 94 "./grammar/statements/vacuum.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) | (yyvsp[0].ival); }
#line 20687 "./grammar/grammar_out.cpp"
    break;

  case 221: /* opt_freeze: FREEZE  */
#line 98 "./grammar/statements/vacuum.y"
                                                                                        { (yyval.boolean) = true; }
#line 20693 "./grammar/grammar_out.cpp"
    break;

  case 222: /* opt_freeze: %empty  */
#line 99 "./grammar/statements/vacuum.y"
                                                                                                { (yyval.boolean) = false; }
#line 20699 "./grammar/grammar_out.cpp"
    break;

  case 223: /* CheckPointStmt: FORCE CHECKPOINT opt_col_id  */
#line 6 "./grammar/statements/checkpoint.y"
                                {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					n->name = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 20710 "./grammar/grammar_out.cpp"
    break;

  case 224: /* CheckPointStmt: CHECKPOINT opt_col_id  */
#line 13 "./grammar/statements/checkpoint.y"
                                {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					n->name = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 20721 "./grammar/grammar_out.cpp"
    break;

  case 225: /* opt_col_id: ColId  */
#line 22 "./grammar/statements/checkpoint.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 20727 "./grammar/grammar_out.cpp"
    break;

  case 226: /* opt_col_id: %empty  */
#line 23 "./grammar/statements/checkpoint.y"
                                                { (yyval.str) = NULL; }
#line 20733 "./grammar/grammar_out.cpp"
    break;

  case 227: /* CallStmt: CALL_P func_application  */
#line 7 "./grammar/statements/call.y"
                                {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[0].node);
					(yyval.node) = (PGNode *) n;
				}
#line 20743 "./grammar/grammar_out.cpp"
    break;

  case 228: /* ViewStmt: CREATE_P OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
#line 10 "./grammar/statements/view.y"
                                {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[-5].range);
					n->view->relpersistence = (yyvsp[-7].ival);
					n->aliases = (yyvsp[-4].list);
					n->query = (yyvsp[-1].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = (yyvsp[0].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				}
#line 20759 "./grammar/grammar_out.cpp"
    break;

  case 229: /* ViewStmt: CREATE_P OptTemp VIEW IF_P NOT EXISTS qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
#line 23 "./grammar/statements/view.y"
                                {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[-5].range);
					n->view->relpersistence = (yyvsp[-10].ival);
					n->aliases = (yyvsp[-4].list);
					n->query = (yyvsp[-1].node);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = (yyvsp[0].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				}
#line 20775 "./grammar/grammar_out.cpp"
    break;

  case 230: /* ViewStmt: CREATE_P OR REPLACE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
#line 36 "./grammar/statements/view.y"
                                {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[-5].range);
					n->view->relpersistence = (yyvsp[-7].ival);
					n->aliases = (yyvsp[-4].list);
					n->query = (yyvsp[-1].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = (yyvsp[0].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				}
#line 20791 "./grammar/grammar_out.cpp"
    break;

  case 231: /* ViewStmt: CREATE_P OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
#line 49 "./grammar/statements/view.y"
                                {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[-7].range);
					n->view->relpersistence = (yyvsp[-10].ival);
					n->aliases = (yyvsp[-5].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[-1].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = (yyvsp[0].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[0]))));
					(yyval.node) = (PGNode *) n;
				}
#line 20812 "./grammar/grammar_out.cpp"
    break;

  case 232: /* ViewStmt: CREATE_P OR REPLACE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
#line 67 "./grammar/statements/view.y"
                                {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[-7].range);
					n->view->relpersistence = (yyvsp[-10].ival);
					n->aliases = (yyvsp[-5].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[-1].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = (yyvsp[0].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[0]))));
					(yyval.node) = (PGNode *) n;
				}
#line 20833 "./grammar/grammar_out.cpp"
    break;

  case 233: /* opt_check_option: WITH CHECK_P OPTION  */
#line 87 "./grammar/statements/view.y"
                                                                { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; }
#line 20839 "./grammar/grammar_out.cpp"
    break;

  case 234: /* opt_check_option: WITH CASCADED CHECK_P OPTION  */
#line 88 "./grammar/statements/view.y"
                                                { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; }
#line 20845 "./grammar/grammar_out.cpp"
    break;

  case 235: /* opt_check_option: WITH LOCAL CHECK_P OPTION  */
#line 89 "./grammar/statements/view.y"
                                                        { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; }
#line 20851 "./grammar/grammar_out.cpp"
    break;

  case 236: /* opt_check_option: %empty  */
#line 90 "./grammar/statements/view.y"
                                                                { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; }
#line 20857 "./grammar/grammar_out.cpp"
    break;

  case 237: /* CreateSeqStmt: CREATE_P OptTemp SEQUENCE qualified_name OptSeqOptList  */
#line 10 "./grammar/statements/create_sequence.y"
                                {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[-1].range)->relpersistence = (yyvsp[-3].ival);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 20871 "./grammar/grammar_out.cpp"
    break;

  case 238: /* CreateSeqStmt: CREATE_P OptTemp SEQUENCE IF_P NOT EXISTS qualified_name OptSeqOptList  */
#line 20 "./grammar/statements/create_sequence.y"
                                {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[-1].range)->relpersistence = (yyvsp[-6].ival);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 20885 "./grammar/grammar_out.cpp"
    break;

  case 239: /* CreateSeqStmt: CREATE_P OR REPLACE OptTemp SEQUENCE qualified_name OptSeqOptList  */
#line 30 "./grammar/statements/create_sequence.y"
                                {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[-1].range)->relpersistence = (yyvsp[-3].ival);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 20899 "./grammar/grammar_out.cpp"
    break;

  case 240: /* OptSeqOptList: SeqOptList  */
#line 42 "./grammar/statements/create_sequence.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 20905 "./grammar/grammar_out.cpp"
    break;

  case 241: /* OptSeqOptList: %empty  */
#line 43 "./grammar/statements/create_sequence.y"
                                                                                                { (yyval.list) = NIL; }
#line 20911 "./grammar/grammar_out.cpp"
    break;

  case 242: /* CopyStmt: COPY opt_binary qualified_name opt_column_list opt_oids copy_from opt_program copy_file_name copy_delimiter opt_with copy_options  */
#line 3 "./grammar/statements/copy.y"
                                {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[-8].range);
					n->query = NULL;
					n->attlist = (yyvsp[-7].list);
					n->is_from = (yyvsp[-5].boolean);
					n->is_program = (yyvsp[-4].boolean);
					n->filename = (yyvsp[-3].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[-3]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[-9].defelt))
						n->options = lappend(n->options, (yyvsp[-9].defelt));
					if ((yyvsp[-6].defelt))
						n->options = lappend(n->options, (yyvsp[-6].defelt));
					if ((yyvsp[-2].defelt))
						n->options = lappend(n->options, (yyvsp[-2].defelt));
					if ((yyvsp[0].list))
						n->options = list_concat(n->options, (yyvsp[0].list));
					(yyval.node) = (PGNode *)n;
				}
#line 20943 "./grammar/grammar_out.cpp"
    break;

  case 243: /* CopyStmt: COPY '(' SelectStmt ')' TO opt_program copy_file_name opt_with copy_options  */
#line 31 "./grammar/statements/copy.y"
                                {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[-6].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[-3].boolean);
					n->filename = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[-4]))));

					(yyval.node) = (PGNode *)n;
				}
#line 20966 "./grammar/grammar_out.cpp"
    break;

  case 244: /* CopyStmt: COPY FROM DATABASE ColId TO ColId copy_database_flag  */
#line 50 "./grammar/statements/copy.y"
                {
				PGCopyDatabaseStmt *n = makeNode(PGCopyDatabaseStmt);
				n->from_database = (yyvsp[-3].str);
				n->to_database = (yyvsp[-1].str);
				n->copy_database_flag = (yyvsp[0].conststr);
				(yyval.node) = (PGNode *)n;
			}
#line 20978 "./grammar/grammar_out.cpp"
    break;

  case 245: /* copy_database_flag: %empty  */
#line 61 "./grammar/statements/copy.y"
                                                                                                        { (yyval.conststr) = NULL; }
#line 20984 "./grammar/grammar_out.cpp"
    break;

  case 246: /* copy_database_flag: '(' SCHEMA ')'  */
#line 62 "./grammar/statements/copy.y"
                                                                                                { (yyval.conststr) = "schema"; }
#line 20990 "./grammar/grammar_out.cpp"
    break;

  case 247: /* copy_database_flag: '(' DATA_P ')'  */
#line 63 "./grammar/statements/copy.y"
                                                                                                { (yyval.conststr) = "data"; }
#line 20996 "./grammar/grammar_out.cpp"
    break;

  case 248: /* copy_from: FROM  */
#line 67 "./grammar/statements/copy.y"
                                                                                                { (yyval.boolean) = true; }
#line 21002 "./grammar/grammar_out.cpp"
    break;

  case 249: /* copy_from: TO  */
#line 68 "./grammar/statements/copy.y"
                                                                                                { (yyval.boolean) = false; }
#line 21008 "./grammar/grammar_out.cpp"
    break;

  case 250: /* copy_delimiter: opt_using DELIMITERS Sconst  */
#line 74 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[0].str)), (yylsp[-1]));
				}
#line 21016 "./grammar/grammar_out.cpp"
    break;

  case 251: /* copy_delimiter: %empty  */
#line 77 "./grammar/statements/copy.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 21022 "./grammar/grammar_out.cpp"
    break;

  case 252: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list_item  */
#line 83 "./grammar/statements/copy.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 21030 "./grammar/grammar_out.cpp"
    break;

  case 253: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list ',' copy_generic_opt_arg_list_item  */
#line 87 "./grammar/statements/copy.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 21038 "./grammar/grammar_out.cpp"
    break;

  case 254: /* opt_using: USING  */
#line 94 "./grammar/statements/copy.y"
                                                                                                {}
#line 21044 "./grammar/grammar_out.cpp"
    break;

  case 255: /* opt_using: %empty  */
#line 95 "./grammar/statements/copy.y"
                                                                                                {}
#line 21050 "./grammar/grammar_out.cpp"
    break;

  case 256: /* opt_as: AS  */
#line 99 "./grammar/statements/copy.y"
                                                                                                {}
#line 21056 "./grammar/grammar_out.cpp"
    break;

  case 257: /* opt_as: %empty  */
#line 100 "./grammar/statements/copy.y"
                                                                                        {}
#line 21062 "./grammar/grammar_out.cpp"
    break;

  case 258: /* opt_program: PROGRAM  */
#line 105 "./grammar/statements/copy.y"
                                                                                                { (yyval.boolean) = true; }
#line 21068 "./grammar/grammar_out.cpp"
    break;

  case 259: /* opt_program: %empty  */
#line 106 "./grammar/statements/copy.y"
                                                                                        { (yyval.boolean) = false; }
#line 21074 "./grammar/grammar_out.cpp"
    break;

  case 260: /* copy_options: copy_opt_list  */
#line 110 "./grammar/statements/copy.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 21080 "./grammar/grammar_out.cpp"
    break;

  case 261: /* copy_options: '(' copy_generic_opt_list ')'  */
#line 111 "./grammar/statements/copy.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 21086 "./grammar/grammar_out.cpp"
    break;

  case 262: /* copy_generic_opt_arg: opt_boolean_or_string  */
#line 116 "./grammar/statements/copy.y"
                                                                { (yyval.node) = (PGNode *) makeString((yyvsp[0].str)); }
#line 21092 "./grammar/grammar_out.cpp"
    break;

  case 263: /* copy_generic_opt_arg: NumericOnly  */
#line 117 "./grammar/statements/copy.y"
                                                                        { (yyval.node) = (PGNode *) (yyvsp[0].value); }
#line 21098 "./grammar/grammar_out.cpp"
    break;

  case 264: /* copy_generic_opt_arg: list_expr  */
#line 118 "./grammar/statements/copy.y"
                                                        { (yyval.node) = (PGNode *) (yyvsp[0].node); }
#line 21104 "./grammar/grammar_out.cpp"
    break;

  case 265: /* copy_generic_opt_arg: '*'  */
#line 119 "./grammar/statements/copy.y"
                                                                                { (yyval.node) = (PGNode *) makeNode(PGAStar); }
#line 21110 "./grammar/grammar_out.cpp"
    break;

  case 266: /* copy_generic_opt_arg: '(' copy_generic_opt_arg_list ')'  */
#line 120 "./grammar/statements/copy.y"
                                                                        { (yyval.node) = (PGNode *) (yyvsp[-1].list); }
#line 21116 "./grammar/grammar_out.cpp"
    break;

  case 267: /* copy_generic_opt_arg: struct_expr  */
#line 121 "./grammar/statements/copy.y"
                                                                        { (yyval.node) = (PGNode *) (yyvsp[0].node); }
#line 21122 "./grammar/grammar_out.cpp"
    break;

  case 268: /* copy_generic_opt_arg: map_expr  */
#line 122 "./grammar/statements/copy.y"
                                                                            { (yyval.node) = (PGNode *) (yyvsp[0].node); }
#line 21128 "./grammar/grammar_out.cpp"
    break;

  case 269: /* copy_generic_opt_arg: %empty  */
#line 123 "./grammar/statements/copy.y"
                                                                        { (yyval.node) = NULL; }
#line 21134 "./grammar/grammar_out.cpp"
    break;

  case 270: /* copy_generic_opt_elem: ColLabel copy_generic_opt_arg  */
#line 129 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node), (yylsp[-1]));
				}
#line 21142 "./grammar/grammar_out.cpp"
    break;

  case 271: /* opt_oids: WITH OIDS  */
#line 137 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[-1]));
				}
#line 21150 "./grammar/grammar_out.cpp"
    break;

  case 272: /* opt_oids: %empty  */
#line 140 "./grammar/statements/copy.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 21156 "./grammar/grammar_out.cpp"
    break;

  case 273: /* copy_opt_list: copy_opt_list copy_opt_item  */
#line 145 "./grammar/statements/copy.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 21162 "./grammar/grammar_out.cpp"
    break;

  case 274: /* copy_opt_list: %empty  */
#line 146 "./grammar/statements/copy.y"
                                                                                        { (yyval.list) = NIL; }
#line 21168 "./grammar/grammar_out.cpp"
    break;

  case 275: /* opt_binary: BINARY  */
#line 152 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[0]));
				}
#line 21176 "./grammar/grammar_out.cpp"
    break;

  case 276: /* opt_binary: %empty  */
#line 155 "./grammar/statements/copy.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 21182 "./grammar/grammar_out.cpp"
    break;

  case 277: /* copy_opt_item: BINARY  */
#line 161 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[0]));
				}
#line 21190 "./grammar/grammar_out.cpp"
    break;

  case 278: /* copy_opt_item: OIDS  */
#line 165 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[0]));
				}
#line 21198 "./grammar/grammar_out.cpp"
    break;

  case 279: /* copy_opt_item: FREEZE  */
#line 169 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[0]));
				}
#line 21206 "./grammar/grammar_out.cpp"
    break;

  case 280: /* copy_opt_item: DELIMITER opt_as Sconst  */
#line 173 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[0].str)), (yylsp[-2]));
				}
#line 21214 "./grammar/grammar_out.cpp"
    break;

  case 281: /* copy_opt_item: NULL_P opt_as Sconst  */
#line 177 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[0].str)), (yylsp[-2]));
				}
#line 21222 "./grammar/grammar_out.cpp"
    break;

  case 282: /* copy_opt_item: CSV  */
#line 181 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[0]));
				}
#line 21230 "./grammar/grammar_out.cpp"
    break;

  case 283: /* copy_opt_item: HEADER_P  */
#line 185 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[0]));
				}
#line 21238 "./grammar/grammar_out.cpp"
    break;

  case 284: /* copy_opt_item: QUOTE opt_as Sconst  */
#line 189 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[0].str)), (yylsp[-2]));
				}
#line 21246 "./grammar/grammar_out.cpp"
    break;

  case 285: /* copy_opt_item: ESCAPE opt_as Sconst  */
#line 193 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[0].str)), (yylsp[-2]));
				}
#line 21254 "./grammar/grammar_out.cpp"
    break;

  case 286: /* copy_opt_item: FORCE QUOTE columnList  */
#line 197 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[0].list), (yylsp[-2]));
				}
#line 21262 "./grammar/grammar_out.cpp"
    break;

  case 287: /* copy_opt_item: FORCE QUOTE '*'  */
#line 201 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[-2]));
				}
#line 21270 "./grammar/grammar_out.cpp"
    break;

  case 288: /* copy_opt_item: PARTITION BY columnList  */
#line 205 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("partition_by", (PGNode *)(yyvsp[0].list), (yylsp[-2]));
				}
#line 21278 "./grammar/grammar_out.cpp"
    break;

  case 289: /* copy_opt_item: PARTITION BY '*'  */
#line 209 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("partition_by", (PGNode *)makeNode(PGAStar), (yylsp[-2]));
				}
#line 21286 "./grammar/grammar_out.cpp"
    break;

  case 290: /* copy_opt_item: FORCE NOT NULL_P columnList  */
#line 213 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[0].list), (yylsp[-3]));
				}
#line 21294 "./grammar/grammar_out.cpp"
    break;

  case 291: /* copy_opt_item: FORCE NULL_P columnList  */
#line 217 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[0].list), (yylsp[-2]));
				}
#line 21302 "./grammar/grammar_out.cpp"
    break;

  case 292: /* copy_opt_item: ENCODING Sconst  */
#line 221 "./grammar/statements/copy.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[0].str)), (yylsp[-1]));
				}
#line 21310 "./grammar/grammar_out.cpp"
    break;

  case 293: /* copy_generic_opt_arg_list_item: opt_boolean_or_string  */
#line 228 "./grammar/statements/copy.y"
                                                { (yyval.node) = (PGNode *) makeString((yyvsp[0].str)); }
#line 21316 "./grammar/grammar_out.cpp"
    break;

  case 294: /* copy_file_name: Sconst  */
#line 233 "./grammar/statements/copy.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 21322 "./grammar/grammar_out.cpp"
    break;

  case 295: /* copy_file_name: STDIN  */
#line 234 "./grammar/statements/copy.y"
                                                                                                { (yyval.str) = NULL; }
#line 21328 "./grammar/grammar_out.cpp"
    break;

  case 296: /* copy_file_name: STDOUT  */
#line 235 "./grammar/statements/copy.y"
                                                                                                { (yyval.str) = NULL; }
#line 21334 "./grammar/grammar_out.cpp"
    break;

  case 297: /* copy_file_name: IDENT '.' ColId  */
#line 236 "./grammar/statements/copy.y"
                                                                                        { (yyval.str) = psprintf("%s.%s", (yyvsp[-2].str), (yyvsp[0].str)); }
#line 21340 "./grammar/grammar_out.cpp"
    break;

  case 298: /* copy_file_name: IDENT  */
#line 237 "./grammar/statements/copy.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 21346 "./grammar/grammar_out.cpp"
    break;

  case 299: /* copy_generic_opt_list: copy_generic_opt_elem  */
#line 244 "./grammar/statements/copy.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 21354 "./grammar/grammar_out.cpp"
    break;

  case 300: /* copy_generic_opt_list: copy_generic_opt_list ',' copy_generic_opt_elem  */
#line 248 "./grammar/statements/copy.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 21362 "./grammar/grammar_out.cpp"
    break;

  case 301: /* VariableSetStmt: SET set_rest  */
#line 11 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				}
#line 21372 "./grammar/grammar_out.cpp"
    break;

  case 302: /* VariableSetStmt: SET LOCAL set_rest  */
#line 17 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				}
#line 21382 "./grammar/grammar_out.cpp"
    break;

  case 303: /* VariableSetStmt: SET SESSION set_rest  */
#line 23 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				}
#line 21392 "./grammar/grammar_out.cpp"
    break;

  case 304: /* VariableSetStmt: SET GLOBAL set_rest  */
#line 29 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				}
#line 21402 "./grammar/grammar_out.cpp"
    break;

  case 305: /* VariableSetStmt: SET VARIABLE_P set_rest  */
#line 35 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->scope = VAR_SET_SCOPE_VARIABLE;
					(yyval.node) = (PGNode *) n;
				}
#line 21412 "./grammar/grammar_out.cpp"
    break;

  case 306: /* set_rest: generic_set  */
#line 44 "./grammar/statements/variable_set.y"
                                                                                {(yyval.vsetstmt) = (yyvsp[0].vsetstmt);}
#line 21418 "./grammar/grammar_out.cpp"
    break;

  case 307: /* set_rest: var_name FROM CURRENT_P  */
#line 46 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[-2].str);
					(yyval.vsetstmt) = n;
				}
#line 21429 "./grammar/grammar_out.cpp"
    break;

  case 308: /* set_rest: TIME ZONE zone_value  */
#line 54 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[0].node) != NULL)
						n->args = list_make1((yyvsp[0].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				}
#line 21444 "./grammar/grammar_out.cpp"
    break;

  case 309: /* set_rest: SCHEMA Sconst  */
#line 65 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 21456 "./grammar/grammar_out.cpp"
    break;

  case 310: /* generic_set: var_name TO var_list  */
#line 77 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[-2].str);
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 21468 "./grammar/grammar_out.cpp"
    break;

  case 311: /* generic_set: var_name '=' var_list  */
#line 85 "./grammar/statements/variable_set.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[-2].str);
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 21480 "./grammar/grammar_out.cpp"
    break;

  case 312: /* var_value: a_expr  */
#line 96 "./grammar/statements/variable_set.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 21486 "./grammar/grammar_out.cpp"
    break;

  case 313: /* zone_value: Sconst  */
#line 102 "./grammar/statements/variable_set.y"
                                {
					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 21494 "./grammar/grammar_out.cpp"
    break;

  case 314: /* zone_value: IDENT  */
#line 106 "./grammar/statements/variable_set.y"
                                {
					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 21502 "./grammar/grammar_out.cpp"
    break;

  case 315: /* zone_value: ConstInterval Sconst opt_interval  */
#line 110 "./grammar/statements/variable_set.y"
                                {
					PGTypeName *t = (yyvsp[-2].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[0].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[0]))));
					}
					t->typmods = (yyvsp[0].list);
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 21521 "./grammar/grammar_out.cpp"
    break;

  case 316: /* zone_value: ConstInterval '(' Iconst ')' Sconst  */
#line 125 "./grammar/statements/variable_set.y"
                                {
					PGTypeName *t = (yyvsp[-4].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
				}
#line 21532 "./grammar/grammar_out.cpp"
    break;

  case 317: /* zone_value: NumericOnly  */
#line 131 "./grammar/statements/variable_set.y"
                                                                                        { (yyval.node) = makeAConst((yyvsp[0].value), (yylsp[0])); }
#line 21538 "./grammar/grammar_out.cpp"
    break;

  case 318: /* zone_value: DEFAULT  */
#line 132 "./grammar/statements/variable_set.y"
                                                                                                { (yyval.node) = NULL; }
#line 21544 "./grammar/grammar_out.cpp"
    break;

  case 319: /* zone_value: LOCAL  */
#line 133 "./grammar/statements/variable_set.y"
                                                                                                { (yyval.node) = NULL; }
#line 21550 "./grammar/grammar_out.cpp"
    break;

  case 320: /* var_list: var_value  */
#line 137 "./grammar/statements/variable_set.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 21556 "./grammar/grammar_out.cpp"
    break;

  case 321: /* var_list: var_list ',' var_value  */
#line 138 "./grammar/statements/variable_set.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 21562 "./grammar/grammar_out.cpp"
    break;

  case 322: /* DeleteStmt: opt_with_clause DELETE_P FROM relation_expr_opt_alias using_clause where_or_current_clause returning_clause  */
#line 9 "./grammar/statements/delete.y"
                                {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[-3].range);
					n->usingClause = (yyvsp[-2].list);
					n->whereClause = (yyvsp[-1].node);
					n->returningList = (yyvsp[0].list);
					n->withClause = (yyvsp[-6].with);
					(yyval.node) = (PGNode *)n;
				}
#line 21576 "./grammar/grammar_out.cpp"
    break;

  case 323: /* DeleteStmt: TRUNCATE opt_table relation_expr_opt_alias  */
#line 19 "./grammar/statements/delete.y"
                            {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[0].range);
					n->usingClause = NULL;
					n->whereClause = NULL;
					n->returningList = NULL;
					n->withClause = NULL;
					(yyval.node) = (PGNode *)n;
			    }
#line 21590 "./grammar/grammar_out.cpp"
    break;

  case 324: /* relation_expr_opt_alias: relation_expr  */
#line 32 "./grammar/statements/delete.y"
                                {
					(yyval.range) = (yyvsp[0].range);
				}
#line 21598 "./grammar/grammar_out.cpp"
    break;

  case 325: /* relation_expr_opt_alias: relation_expr ColId  */
#line 36 "./grammar/statements/delete.y"
                                {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[0].str);
					(yyvsp[-1].range)->alias = alias;
					(yyval.range) = (yyvsp[-1].range);
				}
#line 21609 "./grammar/grammar_out.cpp"
    break;

  case 326: /* relation_expr_opt_alias: relation_expr AS ColId  */
#line 43 "./grammar/statements/delete.y"
                                {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[0].str);
					(yyvsp[-2].range)->alias = alias;
					(yyval.range) = (yyvsp[-2].range);
				}
#line 21620 "./grammar/grammar_out.cpp"
    break;

  case 327: /* where_or_current_clause: WHERE a_expr  */
#line 53 "./grammar/statements/delete.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 21626 "./grammar/grammar_out.cpp"
    break;

  case 328: /* where_or_current_clause: %empty  */
#line 54 "./grammar/statements/delete.y"
                                                                                                { (yyval.node) = NULL; }
#line 21632 "./grammar/grammar_out.cpp"
    break;

  case 329: /* using_clause: USING from_list_opt_comma  */
#line 60 "./grammar/statements/delete.y"
                                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 21638 "./grammar/grammar_out.cpp"
    break;

  case 330: /* using_clause: %empty  */
#line 61 "./grammar/statements/delete.y"
                                                                                                { (yyval.list) = NIL; }
#line 21644 "./grammar/grammar_out.cpp"
    break;

  case 331: /* PrepareStmt: PREPARE name prep_type_clause AS PreparableStmt  */
#line 8 "./grammar/statements/prepare.y"
                                {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[-3].str);
					n->argtypes = (yyvsp[-2].list);
					n->query = (yyvsp[0].node);
					(yyval.node) = (PGNode *) n;
				}
#line 21656 "./grammar/grammar_out.cpp"
    break;

  case 332: /* prep_type_clause: '(' type_list ')'  */
#line 18 "./grammar/statements/prepare.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 21662 "./grammar/grammar_out.cpp"
    break;

  case 333: /* prep_type_clause: %empty  */
#line 19 "./grammar/statements/prepare.y"
                                                                        { (yyval.list) = NIL; }
#line 21668 "./grammar/grammar_out.cpp"
    break;

  case 340: /* AlterObjectSchemaStmt: ALTER TABLE relation_expr SET SCHEMA name  */
#line 8 "./grammar/statements/alter_schema.y"
                                {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 21681 "./grammar/grammar_out.cpp"
    break;

  case 341: /* AlterObjectSchemaStmt: ALTER TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
#line 17 "./grammar/statements/alter_schema.y"
                                {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 21694 "./grammar/grammar_out.cpp"
    break;

  case 342: /* AlterObjectSchemaStmt: ALTER SEQUENCE qualified_name SET SCHEMA name  */
#line 26 "./grammar/statements/alter_schema.y"
                                {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 21707 "./grammar/grammar_out.cpp"
    break;

  case 343: /* AlterObjectSchemaStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SET SCHEMA name  */
#line 35 "./grammar/statements/alter_schema.y"
                                {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 21720 "./grammar/grammar_out.cpp"
    break;

  case 344: /* AlterObjectSchemaStmt: ALTER VIEW qualified_name SET SCHEMA name  */
#line 44 "./grammar/statements/alter_schema.y"
                                {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 21733 "./grammar/grammar_out.cpp"
    break;

  case 345: /* AlterObjectSchemaStmt: ALTER VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
#line 53 "./grammar/statements/alter_schema.y"
                                {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 21746 "./grammar/grammar_out.cpp"
    break;

  case 346: /* CreateStmt: CREATE_P OptTemp TABLE qualified_name '(' OptTableElementList ')' OptWith OnCommitOption  */
#line 9 "./grammar/statements/create.y"
                                {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[-5].range)->relpersistence = (yyvsp[-7].ival);
					n->relation = (yyvsp[-5].range);
					n->tableElts = (yyvsp[-3].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[-1].list);
					n->oncommit = (yyvsp[0].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 21763 "./grammar/grammar_out.cpp"
    break;

  case 347: /* CreateStmt: CREATE_P OptTemp TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' OptWith OnCommitOption  */
#line 24 "./grammar/statements/create.y"
                                {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[-5].range)->relpersistence = (yyvsp[-10].ival);
					n->relation = (yyvsp[-5].range);
					n->tableElts = (yyvsp[-3].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[-1].list);
					n->oncommit = (yyvsp[0].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 21780 "./grammar/grammar_out.cpp"
    break;

  case 348: /* CreateStmt: CREATE_P OR REPLACE OptTemp TABLE qualified_name '(' OptTableElementList ')' OptWith OnCommitOption  */
#line 39 "./grammar/statements/create.y"
                                {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[-5].range)->relpersistence = (yyvsp[-7].ival);
					n->relation = (yyvsp[-5].range);
					n->tableElts = (yyvsp[-3].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[-1].list);
					n->oncommit = (yyvsp[0].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 21797 "./grammar/grammar_out.cpp"
    break;

  case 349: /* ConstraintAttributeSpec: %empty  */
#line 56 "./grammar/statements/create.y"
                                { (yyval.ival) = 0; }
#line 21803 "./grammar/grammar_out.cpp"
    break;

  case 350: /* ConstraintAttributeSpec: ConstraintAttributeSpec ConstraintAttributeElem  */
#line 58 "./grammar/statements/create.y"
                                {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[-1].ival) | (yyvsp[0].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[0]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[0]))));
					(yyval.ival) = newspec;
				}
#line 21831 "./grammar/grammar_out.cpp"
    break;

  case 351: /* def_arg: func_type  */
#line 84 "./grammar/statements/create.y"
                                                                        { (yyval.node) = (PGNode *)(yyvsp[0].typnam); }
#line 21837 "./grammar/grammar_out.cpp"
    break;

  case 352: /* def_arg: reserved_keyword  */
#line 85 "./grammar/statements/create.y"
                                                                        { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[0].keyword))); }
#line 21843 "./grammar/grammar_out.cpp"
    break;

  case 353: /* def_arg: qual_all_Op  */
#line 86 "./grammar/statements/create.y"
                                                                        { (yyval.node) = (PGNode *)(yyvsp[0].list); }
#line 21849 "./grammar/grammar_out.cpp"
    break;

  case 354: /* def_arg: NumericOnly  */
#line 87 "./grammar/statements/create.y"
                                                                        { (yyval.node) = (PGNode *)(yyvsp[0].value); }
#line 21855 "./grammar/grammar_out.cpp"
    break;

  case 355: /* def_arg: Sconst  */
#line 88 "./grammar/statements/create.y"
                                                                                { (yyval.node) = (PGNode *)makeString((yyvsp[0].str)); }
#line 21861 "./grammar/grammar_out.cpp"
    break;

  case 356: /* def_arg: NONE  */
#line 89 "./grammar/statements/create.y"
                                                                                { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[0].keyword))); }
#line 21867 "./grammar/grammar_out.cpp"
    break;

  case 357: /* OptParenthesizedSeqOptList: '(' SeqOptList ')'  */
#line 93 "./grammar/statements/create.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 21873 "./grammar/grammar_out.cpp"
    break;

  case 358: /* OptParenthesizedSeqOptList: %empty  */
#line 94 "./grammar/statements/create.y"
                                                                                                { (yyval.list) = NIL; }
#line 21879 "./grammar/grammar_out.cpp"
    break;

  case 359: /* generic_option_arg: Sconst  */
#line 99 "./grammar/statements/create.y"
                                                                { (yyval.node) = (PGNode *) makeString((yyvsp[0].str)); }
#line 21885 "./grammar/grammar_out.cpp"
    break;

  case 360: /* key_action: NO ACTION  */
#line 104 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; }
#line 21891 "./grammar/grammar_out.cpp"
    break;

  case 361: /* key_action: RESTRICT  */
#line 105 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; }
#line 21897 "./grammar/grammar_out.cpp"
    break;

  case 362: /* key_action: CASCADE  */
#line 106 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; }
#line 21903 "./grammar/grammar_out.cpp"
    break;

  case 363: /* key_action: SET NULL_P  */
#line 107 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; }
#line 21909 "./grammar/grammar_out.cpp"
    break;

  case 364: /* key_action: SET DEFAULT  */
#line 108 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; }
#line 21915 "./grammar/grammar_out.cpp"
    break;

  case 365: /* ColConstraint: CONSTRAINT name ColConstraintElem  */
#line 114 "./grammar/statements/create.y"
                                {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[0].node));
					n->conname = (yyvsp[-1].str);
					n->location = (yylsp[-2]);
					(yyval.node) = (PGNode *) n;
				}
#line 21926 "./grammar/grammar_out.cpp"
    break;

  case 366: /* ColConstraint: ColConstraintElem  */
#line 120 "./grammar/statements/create.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 21932 "./grammar/grammar_out.cpp"
    break;

  case 367: /* ColConstraint: ConstraintAttr  */
#line 121 "./grammar/statements/create.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 21938 "./grammar/grammar_out.cpp"
    break;

  case 368: /* ColConstraint: COLLATE any_name  */
#line 123 "./grammar/statements/create.y"
                                {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *) n;
				}
#line 21955 "./grammar/grammar_out.cpp"
    break;

  case 369: /* ColConstraintElem: NOT NULL_P  */
#line 140 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)n;
				}
#line 21966 "./grammar/grammar_out.cpp"
    break;

  case 370: /* ColConstraintElem: NULL_P  */
#line 147 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[0]);
					(yyval.node) = (PGNode *)n;
				}
#line 21977 "./grammar/grammar_out.cpp"
    break;

  case 371: /* ColConstraintElem: UNIQUE opt_definition  */
#line 154 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[-1]);
					n->keys = NULL;
					n->options = (yyvsp[0].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				}
#line 21991 "./grammar/grammar_out.cpp"
    break;

  case 372: /* ColConstraintElem: PRIMARY KEY opt_definition  */
#line 164 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[-2]);
					n->keys = NULL;
					n->options = (yyvsp[0].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				}
#line 22005 "./grammar/grammar_out.cpp"
    break;

  case 373: /* ColConstraintElem: CHECK_P '(' a_expr ')' opt_no_inherit  */
#line 174 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[-4]);
					n->is_no_inherit = (yyvsp[0].boolean);
					n->raw_expr = (yyvsp[-2].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				}
#line 22021 "./grammar/grammar_out.cpp"
    break;

  case 374: /* ColConstraintElem: USING COMPRESSION name  */
#line 186 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[-2]);
					n->compression_name = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 22033 "./grammar/grammar_out.cpp"
    break;

  case 375: /* ColConstraintElem: DEFAULT b_expr  */
#line 194 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[-1]);
					n->raw_expr = (yyvsp[0].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				}
#line 22046 "./grammar/grammar_out.cpp"
    break;

  case 376: /* ColConstraintElem: REFERENCES qualified_name opt_column_list key_match key_actions  */
#line 203 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[-4]);
					n->pktable			= (yyvsp[-3].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[-2].list);
					n->fk_matchtype		= (yyvsp[-1].ival);
					n->fk_upd_action	= (char) ((yyvsp[0].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[0].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				}
#line 22065 "./grammar/grammar_out.cpp"
    break;

  case 377: /* GeneratedColumnType: VIRTUAL  */
#line 220 "./grammar/statements/create.y"
                                { (yyval.constr) = PG_CONSTR_GENERATED_VIRTUAL; }
#line 22071 "./grammar/grammar_out.cpp"
    break;

  case 378: /* GeneratedColumnType: STORED  */
#line 221 "./grammar/statements/create.y"
                                 { (yyval.constr) = PG_CONSTR_GENERATED_STORED; }
#line 22077 "./grammar/grammar_out.cpp"
    break;

  case 379: /* opt_GeneratedColumnType: GeneratedColumnType  */
#line 225 "./grammar/statements/create.y"
                                            { (yyval.constr) = (yyvsp[0].constr); }
#line 22083 "./grammar/grammar_out.cpp"
    break;

  case 380: /* opt_GeneratedColumnType: %empty  */
#line 226 "./grammar/statements/create.y"
                                      { (yyval.constr) = PG_CONSTR_GENERATED_VIRTUAL; }
#line 22089 "./grammar/grammar_out.cpp"
    break;

  case 381: /* GeneratedConstraintElem: GENERATED generated_when AS IDENTITY_P OptParenthesizedSeqOptList  */
#line 231 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[-3].ival);
					n->options = (yyvsp[0].list);
					n->location = (yylsp[-4]);
					(yyval.node) = (PGNode *)n;
				}
#line 22102 "./grammar/grammar_out.cpp"
    break;

  case 382: /* GeneratedConstraintElem: GENERATED generated_when AS '(' a_expr ')' opt_GeneratedColumnType  */
#line 240 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = (yyvsp[0].constr);
					n->generated_when = (yyvsp[-5].ival);
					n->raw_expr = (yyvsp[-2].node);
					n->cooked_expr = NULL;
					n->location = (yylsp[-6]);

					/*
					 * Can't do this in the grammar because of shift/reduce
					 * conflicts.  (IDENTITY allows both ALWAYS and BY
					 * DEFAULT, but generated columns only allow ALWAYS.)  We
					 * can also give a more useful error message and location.
					 */
					if ((yyvsp[-5].ival) != PG_ATTRIBUTE_IDENTITY_ALWAYS)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("for a generated column, GENERATED ALWAYS must be specified"),
								 parser_errposition((yylsp[-5]))));

					(yyval.node) = (PGNode *)n;
				}
#line 22129 "./grammar/grammar_out.cpp"
    break;

  case 383: /* GeneratedConstraintElem: AS '(' a_expr ')' opt_GeneratedColumnType  */
#line 263 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = (yyvsp[0].constr);
					n->generated_when = PG_ATTRIBUTE_IDENTITY_ALWAYS;
					n->raw_expr = (yyvsp[-2].node);
					n->cooked_expr = NULL;
					n->location = (yylsp[-4]);
					(yyval.node) = (PGNode *)n;
				}
#line 22143 "./grammar/grammar_out.cpp"
    break;

  case 384: /* generic_option_elem: generic_option_name generic_option_arg  */
#line 277 "./grammar/statements/create.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node), (yylsp[-1]));
				}
#line 22151 "./grammar/grammar_out.cpp"
    break;

  case 385: /* key_update: ON UPDATE key_action  */
#line 283 "./grammar/statements/create.y"
                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 22157 "./grammar/grammar_out.cpp"
    break;

  case 386: /* key_actions: key_update  */
#line 289 "./grammar/statements/create.y"
                                { (yyval.ival) = ((yyvsp[0].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); }
#line 22163 "./grammar/grammar_out.cpp"
    break;

  case 387: /* key_actions: key_delete  */
#line 291 "./grammar/statements/create.y"
                                { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[0].ival) & 0xFF); }
#line 22169 "./grammar/grammar_out.cpp"
    break;

  case 388: /* key_actions: key_update key_delete  */
#line 293 "./grammar/statements/create.y"
                                { (yyval.ival) = ((yyvsp[-1].ival) << 8) | ((yyvsp[0].ival) & 0xFF); }
#line 22175 "./grammar/grammar_out.cpp"
    break;

  case 389: /* key_actions: key_delete key_update  */
#line 295 "./grammar/statements/create.y"
                                { (yyval.ival) = ((yyvsp[0].ival) << 8) | ((yyvsp[-1].ival) & 0xFF); }
#line 22181 "./grammar/grammar_out.cpp"
    break;

  case 390: /* key_actions: %empty  */
#line 297 "./grammar/statements/create.y"
                                { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); }
#line 22187 "./grammar/grammar_out.cpp"
    break;

  case 391: /* OnCommitOption: ON COMMIT DROP  */
#line 300 "./grammar/statements/create.y"
                                                        { (yyval.oncommit) = ONCOMMIT_DROP; }
#line 22193 "./grammar/grammar_out.cpp"
    break;

  case 392: /* OnCommitOption: ON COMMIT DELETE_P ROWS  */
#line 301 "./grammar/statements/create.y"
                                                                { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; }
#line 22199 "./grammar/grammar_out.cpp"
    break;

  case 393: /* OnCommitOption: ON COMMIT PRESERVE ROWS  */
#line 302 "./grammar/statements/create.y"
                                                                { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; }
#line 22205 "./grammar/grammar_out.cpp"
    break;

  case 394: /* OnCommitOption: %empty  */
#line 303 "./grammar/statements/create.y"
                                                                                { (yyval.oncommit) = PG_ONCOMMIT_NOOP; }
#line 22211 "./grammar/grammar_out.cpp"
    break;

  case 395: /* reloptions: '(' reloption_list ')'  */
#line 308 "./grammar/statements/create.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 22217 "./grammar/grammar_out.cpp"
    break;

  case 396: /* opt_no_inherit: NO INHERIT  */
#line 312 "./grammar/statements/create.y"
                                                                                {  (yyval.boolean) = true; }
#line 22223 "./grammar/grammar_out.cpp"
    break;

  case 397: /* opt_no_inherit: %empty  */
#line 313 "./grammar/statements/create.y"
                                                                                        {  (yyval.boolean) = false; }
#line 22229 "./grammar/grammar_out.cpp"
    break;

  case 398: /* TableConstraint: CONSTRAINT name ConstraintElem  */
#line 319 "./grammar/statements/create.y"
                                {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[0].node));
					n->conname = (yyvsp[-1].str);
					n->location = (yylsp[-2]);
					(yyval.node) = (PGNode *) n;
				}
#line 22240 "./grammar/grammar_out.cpp"
    break;

  case 399: /* TableConstraint: ConstraintElem  */
#line 325 "./grammar/statements/create.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 22246 "./grammar/grammar_out.cpp"
    break;

  case 400: /* TableLikeOption: COMMENTS  */
#line 330 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; }
#line 22252 "./grammar/grammar_out.cpp"
    break;

  case 401: /* TableLikeOption: CONSTRAINTS  */
#line 331 "./grammar/statements/create.y"
                                                        { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; }
#line 22258 "./grammar/grammar_out.cpp"
    break;

  case 402: /* TableLikeOption: DEFAULTS  */
#line 332 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; }
#line 22264 "./grammar/grammar_out.cpp"
    break;

  case 403: /* TableLikeOption: IDENTITY_P  */
#line 333 "./grammar/statements/create.y"
                                                        { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; }
#line 22270 "./grammar/grammar_out.cpp"
    break;

  case 404: /* TableLikeOption: INDEXES  */
#line 334 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; }
#line 22276 "./grammar/grammar_out.cpp"
    break;

  case 405: /* TableLikeOption: STATISTICS  */
#line 335 "./grammar/statements/create.y"
                                                        { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; }
#line 22282 "./grammar/grammar_out.cpp"
    break;

  case 406: /* TableLikeOption: STORAGE  */
#line 336 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; }
#line 22288 "./grammar/grammar_out.cpp"
    break;

  case 407: /* TableLikeOption: ALL  */
#line 337 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; }
#line 22294 "./grammar/grammar_out.cpp"
    break;

  case 408: /* reloption_list: reloption_elem  */
#line 343 "./grammar/statements/create.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 22300 "./grammar/grammar_out.cpp"
    break;

  case 409: /* reloption_list: reloption_list ',' reloption_elem  */
#line 344 "./grammar/statements/create.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 22306 "./grammar/grammar_out.cpp"
    break;

  case 410: /* ExistingIndex: USING INDEX index_name  */
#line 348 "./grammar/statements/create.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 22312 "./grammar/grammar_out.cpp"
    break;

  case 411: /* ConstraintAttr: DEFERRABLE  */
#line 354 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[0]);
					(yyval.node) = (PGNode *)n;
				}
#line 22323 "./grammar/grammar_out.cpp"
    break;

  case 412: /* ConstraintAttr: NOT DEFERRABLE  */
#line 361 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)n;
				}
#line 22334 "./grammar/grammar_out.cpp"
    break;

  case 413: /* ConstraintAttr: INITIALLY DEFERRED  */
#line 368 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)n;
				}
#line 22345 "./grammar/grammar_out.cpp"
    break;

  case 414: /* ConstraintAttr: INITIALLY IMMEDIATE  */
#line 375 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)n;
				}
#line 22356 "./grammar/grammar_out.cpp"
    break;

  case 415: /* OptWith: WITH reloptions  */
#line 386 "./grammar/statements/create.y"
                                                                { (yyval.list) = (yyvsp[0].list); }
#line 22362 "./grammar/grammar_out.cpp"
    break;

  case 416: /* OptWith: WITH OIDS  */
#line 387 "./grammar/statements/create.y"
                                                                        { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[-1]))); }
#line 22368 "./grammar/grammar_out.cpp"
    break;

  case 417: /* OptWith: WITHOUT OIDS  */
#line 388 "./grammar/statements/create.y"
                                                                { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[-1]))); }
#line 22374 "./grammar/grammar_out.cpp"
    break;

  case 418: /* OptWith: %empty  */
#line 389 "./grammar/statements/create.y"
                                                                        { (yyval.list) = NIL; }
#line 22380 "./grammar/grammar_out.cpp"
    break;

  case 419: /* definition: '(' def_list ')'  */
#line 393 "./grammar/statements/create.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 22386 "./grammar/grammar_out.cpp"
    break;

  case 420: /* TableLikeOptionList: TableLikeOptionList INCLUDING TableLikeOption  */
#line 398 "./grammar/statements/create.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) | (yyvsp[0].ival); }
#line 22392 "./grammar/grammar_out.cpp"
    break;

  case 421: /* TableLikeOptionList: TableLikeOptionList EXCLUDING TableLikeOption  */
#line 399 "./grammar/statements/create.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) & ~(yyvsp[0].ival); }
#line 22398 "./grammar/grammar_out.cpp"
    break;

  case 422: /* TableLikeOptionList: %empty  */
#line 400 "./grammar/statements/create.y"
                                                                                        { (yyval.ival) = 0; }
#line 22404 "./grammar/grammar_out.cpp"
    break;

  case 423: /* generic_option_name: ColLabel  */
#line 405 "./grammar/statements/create.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 22410 "./grammar/grammar_out.cpp"
    break;

  case 424: /* ConstraintAttributeElem: NOT DEFERRABLE  */
#line 410 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = CAS_NOT_DEFERRABLE; }
#line 22416 "./grammar/grammar_out.cpp"
    break;

  case 425: /* ConstraintAttributeElem: DEFERRABLE  */
#line 411 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = CAS_DEFERRABLE; }
#line 22422 "./grammar/grammar_out.cpp"
    break;

  case 426: /* ConstraintAttributeElem: INITIALLY IMMEDIATE  */
#line 412 "./grammar/statements/create.y"
                                                                { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; }
#line 22428 "./grammar/grammar_out.cpp"
    break;

  case 427: /* ConstraintAttributeElem: INITIALLY DEFERRED  */
#line 413 "./grammar/statements/create.y"
                                                                { (yyval.ival) = CAS_INITIALLY_DEFERRED; }
#line 22434 "./grammar/grammar_out.cpp"
    break;

  case 428: /* ConstraintAttributeElem: NOT VALID  */
#line 414 "./grammar/statements/create.y"
                                                                                { (yyval.ival) = CAS_NOT_VALID; }
#line 22440 "./grammar/grammar_out.cpp"
    break;

  case 429: /* ConstraintAttributeElem: NO INHERIT  */
#line 415 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = CAS_NO_INHERIT; }
#line 22446 "./grammar/grammar_out.cpp"
    break;

  case 430: /* columnDef: ColId Typename ColQualList  */
#line 421 "./grammar/statements/create.y"
                                {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->category = COL_STANDARD;
					n->colname = (yyvsp[-2].str);
					n->typeName = (yyvsp[-1].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					SplitColQualList((yyvsp[0].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[-2]);
					(yyval.node) = (PGNode *)n;
			}
#line 22469 "./grammar/grammar_out.cpp"
    break;

  case 431: /* columnDef: ColId opt_Typename GeneratedConstraintElem ColQualList  */
#line 441 "./grammar/statements/create.y"
                                {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->category = COL_GENERATED;
					n->colname = (yyvsp[-3].str);
					n->typeName = (yyvsp[-2].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					// merge the constraints with the generated column constraint
					auto constraints = (yyvsp[0].list);
					if (constraints) {
					    constraints = lappend(constraints, (yyvsp[-1].node));
					} else {
					    constraints = list_make1((yyvsp[-1].node));
					}
					SplitColQualList(constraints, &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[-3]);
					(yyval.node) = (PGNode *)n;
			}
#line 22499 "./grammar/grammar_out.cpp"
    break;

  case 432: /* def_list: def_elem  */
#line 469 "./grammar/statements/create.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 22505 "./grammar/grammar_out.cpp"
    break;

  case 433: /* def_list: def_list ',' def_elem  */
#line 470 "./grammar/statements/create.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 22511 "./grammar/grammar_out.cpp"
    break;

  case 434: /* index_name: ColId  */
#line 474 "./grammar/statements/create.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 22517 "./grammar/grammar_out.cpp"
    break;

  case 435: /* TableElement: columnDef  */
#line 478 "./grammar/statements/create.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 22523 "./grammar/grammar_out.cpp"
    break;

  case 436: /* TableElement: TableLikeClause  */
#line 479 "./grammar/statements/create.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 22529 "./grammar/grammar_out.cpp"
    break;

  case 437: /* TableElement: TableConstraint  */
#line 480 "./grammar/statements/create.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 22535 "./grammar/grammar_out.cpp"
    break;

  case 438: /* def_elem: ColLabel '=' def_arg  */
#line 485 "./grammar/statements/create.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (PGNode *) (yyvsp[0].node), (yylsp[-2]));
				}
#line 22543 "./grammar/grammar_out.cpp"
    break;

  case 439: /* def_elem: ColLabel  */
#line 489 "./grammar/statements/create.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[0].str), NULL, (yylsp[0]));
				}
#line 22551 "./grammar/grammar_out.cpp"
    break;

  case 440: /* opt_definition: WITH definition  */
#line 496 "./grammar/statements/create.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 22557 "./grammar/grammar_out.cpp"
    break;

  case 441: /* opt_definition: %empty  */
#line 497 "./grammar/statements/create.y"
                                                                                                { (yyval.list) = NIL; }
#line 22563 "./grammar/grammar_out.cpp"
    break;

  case 442: /* OptTableElementList: TableElementList  */
#line 502 "./grammar/statements/create.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 22569 "./grammar/grammar_out.cpp"
    break;

  case 443: /* OptTableElementList: TableElementList ','  */
#line 503 "./grammar/statements/create.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 22575 "./grammar/grammar_out.cpp"
    break;

  case 444: /* OptTableElementList: %empty  */
#line 504 "./grammar/statements/create.y"
                                                                                        { (yyval.list) = NIL; }
#line 22581 "./grammar/grammar_out.cpp"
    break;

  case 445: /* columnElem: ColId  */
#line 509 "./grammar/statements/create.y"
                                {
					(yyval.node) = (PGNode *) makeString((yyvsp[0].str));
				}
#line 22589 "./grammar/grammar_out.cpp"
    break;

  case 446: /* opt_column_list: '(' columnList ')'  */
#line 516 "./grammar/statements/create.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 22595 "./grammar/grammar_out.cpp"
    break;

  case 447: /* opt_column_list: %empty  */
#line 517 "./grammar/statements/create.y"
                                                                                                { (yyval.list) = NIL; }
#line 22601 "./grammar/grammar_out.cpp"
    break;

  case 448: /* ColQualList: ColQualList ColConstraint  */
#line 522 "./grammar/statements/create.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 22607 "./grammar/grammar_out.cpp"
    break;

  case 449: /* ColQualList: %empty  */
#line 523 "./grammar/statements/create.y"
                                                                                                { (yyval.list) = NIL; }
#line 22613 "./grammar/grammar_out.cpp"
    break;

  case 450: /* key_delete: ON DELETE_P key_action  */
#line 527 "./grammar/statements/create.y"
                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 22619 "./grammar/grammar_out.cpp"
    break;

  case 451: /* reloption_elem: ColLabel '=' def_arg  */
#line 533 "./grammar/statements/create.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (PGNode *) (yyvsp[0].node), (yylsp[-2]));
				}
#line 22627 "./grammar/grammar_out.cpp"
    break;

  case 452: /* reloption_elem: ColLabel  */
#line 537 "./grammar/statements/create.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[0].str), NULL, (yylsp[0]));
				}
#line 22635 "./grammar/grammar_out.cpp"
    break;

  case 453: /* reloption_elem: ColLabel '.' ColLabel '=' def_arg  */
#line 541 "./grammar/statements/create.y"
                                {
					(yyval.defelt) = makeDefElemExtended((yyvsp[-4].str), (yyvsp[-2].str), (PGNode *) (yyvsp[0].node),
											 PG_DEFELEM_UNSPEC, (yylsp[-4]));
				}
#line 22644 "./grammar/grammar_out.cpp"
    break;

  case 454: /* reloption_elem: ColLabel '.' ColLabel  */
#line 546 "./grammar/statements/create.y"
                                {
					(yyval.defelt) = makeDefElemExtended((yyvsp[-2].str), (yyvsp[0].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[-2]));
				}
#line 22652 "./grammar/grammar_out.cpp"
    break;

  case 455: /* columnList: columnElem  */
#line 553 "./grammar/statements/create.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 22658 "./grammar/grammar_out.cpp"
    break;

  case 456: /* columnList: columnList ',' columnElem  */
#line 554 "./grammar/statements/create.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 22664 "./grammar/grammar_out.cpp"
    break;

  case 457: /* columnList_opt_comma: columnList  */
#line 558 "./grammar/statements/create.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 22670 "./grammar/grammar_out.cpp"
    break;

  case 458: /* columnList_opt_comma: columnList ','  */
#line 559 "./grammar/statements/create.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 22676 "./grammar/grammar_out.cpp"
    break;

  case 459: /* func_type: Typename  */
#line 563 "./grammar/statements/create.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 22682 "./grammar/grammar_out.cpp"
    break;

  case 460: /* func_type: type_function_name attrs '%' TYPE_P  */
#line 565 "./grammar/statements/create.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[-3].str)), (yyvsp[-2].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[-3]);
				}
#line 22692 "./grammar/grammar_out.cpp"
    break;

  case 461: /* func_type: SETOF type_function_name attrs '%' TYPE_P  */
#line 571 "./grammar/statements/create.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[-3].str)), (yyvsp[-2].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[-3]);
				}
#line 22703 "./grammar/grammar_out.cpp"
    break;

  case 462: /* ConstraintElem: CHECK_P '(' a_expr ')' ConstraintAttributeSpec  */
#line 582 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[-4]);
					n->raw_expr = (yyvsp[-2].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				}
#line 22720 "./grammar/grammar_out.cpp"
    break;

  case 463: /* ConstraintElem: UNIQUE '(' columnList_opt_comma ')' opt_definition ConstraintAttributeSpec  */
#line 596 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[-5]);
					n->keys = (yyvsp[-3].list);
					n->options = (yyvsp[-1].list);
					n->indexname = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				}
#line 22737 "./grammar/grammar_out.cpp"
    break;

  case 464: /* ConstraintElem: UNIQUE ExistingIndex ConstraintAttributeSpec  */
#line 609 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[-2]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[-1].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				}
#line 22755 "./grammar/grammar_out.cpp"
    break;

  case 465: /* ConstraintElem: PRIMARY KEY '(' columnList_opt_comma ')' opt_definition ConstraintAttributeSpec  */
#line 624 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[-6]);
					n->keys = (yyvsp[-3].list);
					n->options = (yyvsp[-1].list);
					n->indexname = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				}
#line 22772 "./grammar/grammar_out.cpp"
    break;

  case 466: /* ConstraintElem: PRIMARY KEY ExistingIndex ConstraintAttributeSpec  */
#line 637 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[-3]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[-1].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				}
#line 22790 "./grammar/grammar_out.cpp"
    break;

  case 467: /* ConstraintElem: FOREIGN KEY '(' columnList_opt_comma ')' REFERENCES qualified_name opt_column_list key_match key_actions ConstraintAttributeSpec  */
#line 652 "./grammar/statements/create.y"
                                {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[-10]);
					n->pktable			= (yyvsp[-4].range);
					n->fk_attrs			= (yyvsp[-7].list);
					n->pk_attrs			= (yyvsp[-3].list);
					n->fk_matchtype		= (yyvsp[-2].ival);
					n->fk_upd_action	= (char) ((yyvsp[-1].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[-1].ival) & 0xFF);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				}
#line 22812 "./grammar/grammar_out.cpp"
    break;

  case 468: /* TableElementList: TableElement  */
#line 674 "./grammar/statements/create.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 22820 "./grammar/grammar_out.cpp"
    break;

  case 469: /* TableElementList: TableElementList ',' TableElement  */
#line 678 "./grammar/statements/create.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 22828 "./grammar/grammar_out.cpp"
    break;

  case 470: /* key_match: MATCH FULL  */
#line 685 "./grammar/statements/create.y"
                        {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			}
#line 22836 "./grammar/grammar_out.cpp"
    break;

  case 471: /* key_match: MATCH PARTIAL  */
#line 689 "./grammar/statements/create.y"
                        {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[-1]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			}
#line 22848 "./grammar/grammar_out.cpp"
    break;

  case 472: /* key_match: MATCH SIMPLE  */
#line 697 "./grammar/statements/create.y"
                        {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			}
#line 22856 "./grammar/grammar_out.cpp"
    break;

  case 473: /* key_match: %empty  */
#line 701 "./grammar/statements/create.y"
                        {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			}
#line 22864 "./grammar/grammar_out.cpp"
    break;

  case 474: /* TableLikeClause: LIKE qualified_name TableLikeOptionList  */
#line 709 "./grammar/statements/create.y"
                                {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[-1].range);
					n->options = (yyvsp[0].ival);
					(yyval.node) = (PGNode *)n;
				}
#line 22875 "./grammar/grammar_out.cpp"
    break;

  case 475: /* OptTemp: TEMPORARY  */
#line 718 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_RELPERSISTENCE_TEMP; }
#line 22881 "./grammar/grammar_out.cpp"
    break;

  case 476: /* OptTemp: TEMP  */
#line 719 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = PG_RELPERSISTENCE_TEMP; }
#line 22887 "./grammar/grammar_out.cpp"
    break;

  case 477: /* OptTemp: LOCAL TEMPORARY  */
#line 720 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_RELPERSISTENCE_TEMP; }
#line 22893 "./grammar/grammar_out.cpp"
    break;

  case 478: /* OptTemp: LOCAL TEMP  */
#line 721 "./grammar/statements/create.y"
                                                                { (yyval.ival) = PG_RELPERSISTENCE_TEMP; }
#line 22899 "./grammar/grammar_out.cpp"
    break;

  case 479: /* OptTemp: GLOBAL TEMPORARY  */
#line 723 "./grammar/statements/create.y"
                                {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-1]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				}
#line 22910 "./grammar/grammar_out.cpp"
    break;

  case 480: /* OptTemp: GLOBAL TEMP  */
#line 730 "./grammar/statements/create.y"
                                {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-1]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				}
#line 22921 "./grammar/grammar_out.cpp"
    break;

  case 481: /* OptTemp: UNLOGGED  */
#line 736 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; }
#line 22927 "./grammar/grammar_out.cpp"
    break;

  case 482: /* OptTemp: %empty  */
#line 737 "./grammar/statements/create.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
#line 22933 "./grammar/grammar_out.cpp"
    break;

  case 483: /* generated_when: ALWAYS  */
#line 742 "./grammar/statements/create.y"
                                                { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; }
#line 22939 "./grammar/grammar_out.cpp"
    break;

  case 484: /* generated_when: BY DEFAULT  */
#line 743 "./grammar/statements/create.y"
                                        { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; }
#line 22945 "./grammar/grammar_out.cpp"
    break;

  case 487: /* select_with_parens: '(' select_no_parens ')'  */
#line 52 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 22951 "./grammar/grammar_out.cpp"
    break;

  case 488: /* select_with_parens: '(' select_with_parens ')'  */
#line 53 "./grammar/statements/select.y"
                                                                        { (yyval.node) = (yyvsp[-1].node); }
#line 22957 "./grammar/grammar_out.cpp"
    break;

  case 489: /* select_with_parens: '(' VariableShowStmt ')'  */
#line 55 "./grammar/statements/select.y"
                    {
		    	(yyval.node) = (yyvsp[-1].node);
			}
#line 22965 "./grammar/grammar_out.cpp"
    break;

  case 490: /* select_no_parens: simple_select  */
#line 72 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 22971 "./grammar/grammar_out.cpp"
    break;

  case 491: /* select_no_parens: select_clause sort_clause  */
#line 74 "./grammar/statements/select.y"
                                {
					insertSelectOptions((PGSelectStmt *) (yyvsp[-1].node), (yyvsp[0].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-1].node);
				}
#line 22982 "./grammar/grammar_out.cpp"
    break;

  case 492: /* select_no_parens: select_clause opt_sort_clause for_locking_clause opt_select_limit  */
#line 81 "./grammar/statements/select.y"
                                {
					insertSelectOptions((PGSelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[-1].list),
										(PGNode*) list_nth((yyvsp[0].list), 0), (PGNode*) list_nth((yyvsp[0].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 22994 "./grammar/grammar_out.cpp"
    break;

  case 493: /* select_no_parens: select_clause opt_sort_clause select_limit opt_for_locking_clause  */
#line 89 "./grammar/statements/select.y"
                                {
					insertSelectOptions((PGSelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[0].list),
										(PGNode*) list_nth((yyvsp[-1].list), 0), (PGNode*) list_nth((yyvsp[-1].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 23006 "./grammar/grammar_out.cpp"
    break;

  case 494: /* select_no_parens: with_clause select_clause  */
#line 97 "./grammar/statements/select.y"
                                {
					insertSelectOptions((PGSelectStmt *) (yyvsp[0].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[-1].with),
										yyscanner);
					(yyval.node) = (yyvsp[0].node);
				}
#line 23018 "./grammar/grammar_out.cpp"
    break;

  case 495: /* select_no_parens: with_clause select_clause sort_clause  */
#line 105 "./grammar/statements/select.y"
                                {
					insertSelectOptions((PGSelectStmt *) (yyvsp[-1].node), (yyvsp[0].list), NIL,
										NULL, NULL,
										(yyvsp[-2].with),
										yyscanner);
					(yyval.node) = (yyvsp[-1].node);
				}
#line 23030 "./grammar/grammar_out.cpp"
    break;

  case 496: /* select_no_parens: with_clause select_clause opt_sort_clause for_locking_clause opt_select_limit  */
#line 113 "./grammar/statements/select.y"
                                {
					insertSelectOptions((PGSelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[-1].list),
										(PGNode*) list_nth((yyvsp[0].list), 0), (PGNode*) list_nth((yyvsp[0].list), 1),
										(yyvsp[-4].with),
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 23042 "./grammar/grammar_out.cpp"
    break;

  case 497: /* select_no_parens: with_clause select_clause opt_sort_clause select_limit opt_for_locking_clause  */
#line 121 "./grammar/statements/select.y"
                                {
					insertSelectOptions((PGSelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[0].list),
										(PGNode*) list_nth((yyvsp[-1].list), 0), (PGNode*) list_nth((yyvsp[-1].list), 1),
										(yyvsp[-4].with),
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 23054 "./grammar/grammar_out.cpp"
    break;

  case 498: /* select_clause: simple_select  */
#line 131 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 23060 "./grammar/grammar_out.cpp"
    break;

  case 499: /* select_clause: select_with_parens  */
#line 132 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 23066 "./grammar/grammar_out.cpp"
    break;

  case 500: /* opt_select: SELECT opt_all_clause opt_target_list_opt_comma  */
#line 160 "./grammar/statements/select.y"
                        {
				(yyval.list) = (yyvsp[0].list);
			}
#line 23074 "./grammar/grammar_out.cpp"
    break;

  case 501: /* opt_select: %empty  */
#line 164 "./grammar/statements/select.y"
                        {
				PGAStar *star = makeNode(PGAStar);
				(yyval.list) = list_make1(star);
			}
#line 23083 "./grammar/grammar_out.cpp"
    break;

  case 502: /* simple_select: SELECT opt_all_clause opt_target_list_opt_comma into_clause from_clause where_clause group_clause having_clause window_clause qualify_clause sample_clause  */
#line 175 "./grammar/statements/select.y"
                                {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[-8].list);
					n->intoClause = (yyvsp[-7].into);
					n->fromClause = (yyvsp[-6].list);
					n->whereClause = (yyvsp[-5].node);
					n->groupClause = (yyvsp[-4].list);
					n->havingClause = (yyvsp[-3].node);
					n->windowClause = (yyvsp[-2].list);
					n->qualifyClause = (yyvsp[-1].node);
					n->sampleOptions = (yyvsp[0].node);
					(yyval.node) = (PGNode *)n;
				}
#line 23101 "./grammar/grammar_out.cpp"
    break;

  case 503: /* simple_select: SELECT distinct_clause target_list_opt_comma into_clause from_clause where_clause group_clause having_clause window_clause qualify_clause sample_clause  */
#line 191 "./grammar/statements/select.y"
                                {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[-9].list);
					n->targetList = (yyvsp[-8].list);
					n->intoClause = (yyvsp[-7].into);
					n->fromClause = (yyvsp[-6].list);
					n->whereClause = (yyvsp[-5].node);
					n->groupClause = (yyvsp[-4].list);
					n->havingClause = (yyvsp[-3].node);
					n->windowClause = (yyvsp[-2].list);
					n->qualifyClause = (yyvsp[-1].node);
					n->sampleOptions = (yyvsp[0].node);
					(yyval.node) = (PGNode *)n;
				}
#line 23120 "./grammar/grammar_out.cpp"
    break;

  case 504: /* simple_select: FROM from_list opt_select into_clause where_clause group_clause having_clause window_clause qualify_clause sample_clause  */
#line 208 "./grammar/statements/select.y"
                                {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[-7].list);
					n->fromClause = (yyvsp[-8].list);
					n->intoClause = (yyvsp[-6].into);
					n->whereClause = (yyvsp[-5].node);
					n->groupClause = (yyvsp[-4].list);
					n->havingClause = (yyvsp[-3].node);
					n->windowClause = (yyvsp[-2].list);
					n->qualifyClause = (yyvsp[-1].node);
					n->sampleOptions = (yyvsp[0].node);
					n->from_first = true;
					(yyval.node) = (PGNode *)n;
				}
#line 23139 "./grammar/grammar_out.cpp"
    break;

  case 505: /* simple_select: FROM from_list SELECT distinct_clause target_list_opt_comma into_clause where_clause group_clause having_clause window_clause qualify_clause sample_clause  */
#line 226 "./grammar/statements/select.y"
                                {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[-7].list);
					n->distinctClause = (yyvsp[-8].list);
					n->fromClause = (yyvsp[-10].list);
					n->intoClause = (yyvsp[-6].into);
					n->whereClause = (yyvsp[-5].node);
					n->groupClause = (yyvsp[-4].list);
					n->havingClause = (yyvsp[-3].node);
					n->windowClause = (yyvsp[-2].list);
					n->qualifyClause = (yyvsp[-1].node);
					n->sampleOptions = (yyvsp[0].node);
					n->from_first = true;
					(yyval.node) = (PGNode *)n;
				}
#line 23159 "./grammar/grammar_out.cpp"
    break;

  case 506: /* simple_select: values_clause_opt_comma  */
#line 241 "./grammar/statements/select.y"
                                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 23165 "./grammar/grammar_out.cpp"
    break;

  case 507: /* simple_select: TABLE relation_expr  */
#line 243 "./grammar/statements/select.y"
                                {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[0].range));
					(yyval.node) = (PGNode *)n;
				}
#line 23188 "./grammar/grammar_out.cpp"
    break;

  case 508: /* simple_select: select_clause UNION all_or_distinct by_name select_clause  */
#line 262 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeSetOp(PG_SETOP_UNION_BY_NAME, (yyvsp[-2].boolean), (yyvsp[-4].node), (yyvsp[0].node));
				}
#line 23196 "./grammar/grammar_out.cpp"
    break;

  case 509: /* simple_select: select_clause UNION all_or_distinct select_clause  */
#line 266 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 23204 "./grammar/grammar_out.cpp"
    break;

  case 510: /* simple_select: select_clause INTERSECT all_or_distinct select_clause  */
#line 270 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 23212 "./grammar/grammar_out.cpp"
    break;

  case 511: /* simple_select: select_clause EXCEPT all_or_distinct select_clause  */
#line 274 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 23220 "./grammar/grammar_out.cpp"
    break;

  case 512: /* simple_select: pivot_keyword table_ref USING target_list_opt_comma  */
#line 278 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-2].node);
					n->aggrs = (yyvsp[0].list);
					n->location = (yylsp[-3]);
					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23234 "./grammar/grammar_out.cpp"
    break;

  case 513: /* simple_select: pivot_keyword table_ref USING target_list_opt_comma GROUP_P BY name_list_opt_comma_opt_bracket  */
#line 288 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-5].node);
					n->aggrs = (yyvsp[-3].list);
					n->groups = (yyvsp[0].list);
					n->location = (yylsp[-6]);
					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23249 "./grammar/grammar_out.cpp"
    break;

  case 514: /* simple_select: pivot_keyword table_ref GROUP_P BY name_list_opt_comma_opt_bracket  */
#line 299 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-3].node);
					n->groups = (yyvsp[0].list);
					n->location = (yylsp[-4]);
					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23263 "./grammar/grammar_out.cpp"
    break;

  case 515: /* simple_select: pivot_keyword table_ref ON pivot_column_list  */
#line 309 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-2].node);
					n->columns = (yyvsp[0].list);
					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23276 "./grammar/grammar_out.cpp"
    break;

  case 516: /* simple_select: pivot_keyword table_ref ON pivot_column_list GROUP_P BY name_list_opt_comma_opt_bracket  */
#line 318 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-5].node);
					n->columns = (yyvsp[-3].list);
					n->groups = (yyvsp[0].list);
					n->location = (yylsp[-6]);
					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23291 "./grammar/grammar_out.cpp"
    break;

  case 517: /* simple_select: pivot_keyword table_ref ON pivot_column_list USING target_list_opt_comma  */
#line 329 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-4].node);
					n->columns = (yyvsp[-2].list);
					n->aggrs = (yyvsp[0].list);
					n->location = (yylsp[-5]);
					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23306 "./grammar/grammar_out.cpp"
    break;

  case 518: /* simple_select: pivot_keyword table_ref ON pivot_column_list USING target_list_opt_comma GROUP_P BY name_list_opt_comma_opt_bracket  */
#line 340 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-7].node);
					n->columns = (yyvsp[-5].list);
					n->aggrs = (yyvsp[-3].list);
					n->groups = (yyvsp[0].list);
					n->location = (yylsp[-8]);
					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23322 "./grammar/grammar_out.cpp"
    break;

  case 519: /* simple_select: unpivot_keyword table_ref ON target_list_opt_comma INTO NAME_P name value_or_values name_list_opt_comma_opt_bracket  */
#line 352 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-7].node);
					n->unpivots = (yyvsp[0].list);
					n->location = (yylsp[-8]);
					PGPivot *piv = makeNode(PGPivot);
					piv->unpivot_columns = list_make1(makeString((yyvsp[-2].str)));
					piv->pivot_value = (yyvsp[-5].list);
					n->columns = list_make1(piv);

					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23341 "./grammar/grammar_out.cpp"
    break;

  case 520: /* simple_select: unpivot_keyword table_ref ON target_list_opt_comma  */
#line 367 "./grammar/statements/select.y"
                                {
					PGSelectStmt *res = makeNode(PGSelectStmt);
					PGPivotStmt *n = makeNode(PGPivotStmt);
					n->source = (yyvsp[-2].node);
					n->unpivots = list_make1(makeString("value"));
					n->location = (yylsp[-3]);
					PGPivot *piv = makeNode(PGPivot);
					piv->unpivot_columns = list_make1(makeString("name"));
					piv->pivot_value = (yyvsp[0].list);
					n->columns = list_make1(piv);

					res->pivot = n;
					(yyval.node) = (PGNode *)res;
				}
#line 23360 "./grammar/grammar_out.cpp"
    break;

  case 527: /* pivot_column_entry: b_expr  */
#line 397 "./grammar/statements/select.y"
                        {
				PGPivot *n = makeNode(PGPivot);
				n->pivot_columns = list_make1((yyvsp[0].node));
				(yyval.node) = (PGNode *) n;
			}
#line 23370 "./grammar/grammar_out.cpp"
    break;

  case 528: /* pivot_column_entry: b_expr IN_P '(' select_no_parens ')'  */
#line 403 "./grammar/statements/select.y"
                        {
				PGPivot *n = makeNode(PGPivot);
				n->pivot_columns = list_make1((yyvsp[-4].node));
				n->subquery = (yyvsp[-1].node);
				(yyval.node) = (PGNode *) n;
			}
#line 23381 "./grammar/grammar_out.cpp"
    break;

  case 529: /* pivot_column_entry: single_pivot_value  */
#line 409 "./grammar/statements/select.y"
                                                                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 23387 "./grammar/grammar_out.cpp"
    break;

  case 530: /* pivot_column_list_internal: pivot_column_entry  */
#line 413 "./grammar/statements/select.y"
                                                                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 23393 "./grammar/grammar_out.cpp"
    break;

  case 531: /* pivot_column_list_internal: pivot_column_list_internal ',' pivot_column_entry  */
#line 414 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 23399 "./grammar/grammar_out.cpp"
    break;

  case 532: /* pivot_column_list: pivot_column_list_internal  */
#line 418 "./grammar/statements/select.y"
                                                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 23405 "./grammar/grammar_out.cpp"
    break;

  case 533: /* pivot_column_list: pivot_column_list_internal ','  */
#line 419 "./grammar/statements/select.y"
                                                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 23411 "./grammar/grammar_out.cpp"
    break;

  case 534: /* with_clause: WITH cte_list  */
#line 434 "./grammar/statements/select.y"
                        {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[0].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[-1]);
			}
#line 23422 "./grammar/grammar_out.cpp"
    break;

  case 535: /* with_clause: WITH_LA cte_list  */
#line 441 "./grammar/statements/select.y"
                        {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[0].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[-1]);
			}
#line 23433 "./grammar/grammar_out.cpp"
    break;

  case 536: /* with_clause: WITH RECURSIVE cte_list  */
#line 448 "./grammar/statements/select.y"
                        {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[0].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[-2]);
			}
#line 23444 "./grammar/grammar_out.cpp"
    break;

  case 537: /* cte_list: common_table_expr  */
#line 457 "./grammar/statements/select.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 23450 "./grammar/grammar_out.cpp"
    break;

  case 538: /* cte_list: cte_list ',' common_table_expr  */
#line 458 "./grammar/statements/select.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 23456 "./grammar/grammar_out.cpp"
    break;

  case 539: /* common_table_expr: name opt_name_list AS opt_materialized '(' PreparableStmt ')'  */
#line 462 "./grammar/statements/select.y"
                        {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[-6].str);
				n->aliascolnames = (yyvsp[-5].list);
				n->ctematerialized = (yyvsp[-3].ctematerialize);
				n->ctequery = (yyvsp[-1].node);
				n->location = (yylsp[-6]);
				(yyval.node) = (PGNode *) n;
			}
#line 23470 "./grammar/grammar_out.cpp"
    break;

  case 540: /* opt_materialized: MATERIALIZED  */
#line 474 "./grammar/statements/select.y"
                                                                                { (yyval.ctematerialize) = PGCTEMaterializeAlways; }
#line 23476 "./grammar/grammar_out.cpp"
    break;

  case 541: /* opt_materialized: NOT MATERIALIZED  */
#line 475 "./grammar/statements/select.y"
                                                                                { (yyval.ctematerialize) = PGCTEMaterializeNever; }
#line 23482 "./grammar/grammar_out.cpp"
    break;

  case 542: /* opt_materialized: %empty  */
#line 476 "./grammar/statements/select.y"
                                                                                        { (yyval.ctematerialize) = PGCTEMaterializeDefault; }
#line 23488 "./grammar/grammar_out.cpp"
    break;

  case 543: /* into_clause: INTO OptTempTableName  */
#line 481 "./grammar/statements/select.y"
                                {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[0].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				}
#line 23502 "./grammar/grammar_out.cpp"
    break;

  case 544: /* into_clause: %empty  */
#line 491 "./grammar/statements/select.y"
                                { (yyval.into) = NULL; }
#line 23508 "./grammar/grammar_out.cpp"
    break;

  case 545: /* OptTempTableName: TEMPORARY opt_table qualified_name  */
#line 500 "./grammar/statements/select.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				}
#line 23517 "./grammar/grammar_out.cpp"
    break;

  case 546: /* OptTempTableName: TEMP opt_table qualified_name  */
#line 505 "./grammar/statements/select.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				}
#line 23526 "./grammar/grammar_out.cpp"
    break;

  case 547: /* OptTempTableName: LOCAL TEMPORARY opt_table qualified_name  */
#line 510 "./grammar/statements/select.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				}
#line 23535 "./grammar/grammar_out.cpp"
    break;

  case 548: /* OptTempTableName: LOCAL TEMP opt_table qualified_name  */
#line 515 "./grammar/statements/select.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				}
#line 23544 "./grammar/grammar_out.cpp"
    break;

  case 549: /* OptTempTableName: GLOBAL TEMPORARY opt_table qualified_name  */
#line 520 "./grammar/statements/select.y"
                                {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-3]))));
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				}
#line 23556 "./grammar/grammar_out.cpp"
    break;

  case 550: /* OptTempTableName: GLOBAL TEMP opt_table qualified_name  */
#line 528 "./grammar/statements/select.y"
                                {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-3]))));
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				}
#line 23568 "./grammar/grammar_out.cpp"
    break;

  case 551: /* OptTempTableName: UNLOGGED opt_table qualified_name  */
#line 536 "./grammar/statements/select.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				}
#line 23577 "./grammar/grammar_out.cpp"
    break;

  case 552: /* OptTempTableName: TABLE qualified_name  */
#line 541 "./grammar/statements/select.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				}
#line 23586 "./grammar/grammar_out.cpp"
    break;

  case 553: /* OptTempTableName: qualified_name  */
#line 546 "./grammar/statements/select.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				}
#line 23595 "./grammar/grammar_out.cpp"
    break;

  case 554: /* opt_table: TABLE  */
#line 552 "./grammar/statements/select.y"
                                                                                        {}
#line 23601 "./grammar/grammar_out.cpp"
    break;

  case 555: /* opt_table: %empty  */
#line 553 "./grammar/statements/select.y"
                                                                                                {}
#line 23607 "./grammar/grammar_out.cpp"
    break;

  case 556: /* all_or_distinct: ALL  */
#line 557 "./grammar/statements/select.y"
                                                                                                        { (yyval.boolean) = true; }
#line 23613 "./grammar/grammar_out.cpp"
    break;

  case 557: /* all_or_distinct: DISTINCT  */
#line 558 "./grammar/statements/select.y"
                                                                                                { (yyval.boolean) = false; }
#line 23619 "./grammar/grammar_out.cpp"
    break;

  case 558: /* all_or_distinct: %empty  */
#line 559 "./grammar/statements/select.y"
                                                                                                { (yyval.boolean) = false; }
#line 23625 "./grammar/grammar_out.cpp"
    break;

  case 559: /* by_name: BY NAME_P  */
#line 563 "./grammar/statements/select.y"
                                                          { }
#line 23631 "./grammar/grammar_out.cpp"
    break;

  case 560: /* distinct_clause: DISTINCT  */
#line 570 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = list_make1(NIL); }
#line 23637 "./grammar/grammar_out.cpp"
    break;

  case 561: /* distinct_clause: DISTINCT ON '(' expr_list_opt_comma ')'  */
#line 571 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 23643 "./grammar/grammar_out.cpp"
    break;

  case 562: /* opt_all_clause: ALL  */
#line 575 "./grammar/statements/select.y"
                                                                                                        { (yyval.list) = NIL;}
#line 23649 "./grammar/grammar_out.cpp"
    break;

  case 563: /* opt_all_clause: %empty  */
#line 576 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 23655 "./grammar/grammar_out.cpp"
    break;

  case 564: /* opt_ignore_nulls: IGNORE_P NULLS_P  */
#line 580 "./grammar/statements/select.y"
                                                                                        { (yyval.ignorenulls) = PG_IGNORE_NULLS;}
#line 23661 "./grammar/grammar_out.cpp"
    break;

  case 565: /* opt_ignore_nulls: RESPECT_P NULLS_P  */
#line 581 "./grammar/statements/select.y"
                                                                                        { (yyval.ignorenulls) = PG_RESPECT_NULLS;}
#line 23667 "./grammar/grammar_out.cpp"
    break;

  case 566: /* opt_ignore_nulls: %empty  */
#line 582 "./grammar/statements/select.y"
                                                                                                { (yyval.ignorenulls) = PG_DEFAULT_NULLS; }
#line 23673 "./grammar/grammar_out.cpp"
    break;

  case 567: /* opt_sort_clause: sort_clause  */
#line 586 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list);}
#line 23679 "./grammar/grammar_out.cpp"
    break;

  case 568: /* opt_sort_clause: %empty  */
#line 587 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 23685 "./grammar/grammar_out.cpp"
    break;

  case 569: /* sort_clause: ORDER BY sortby_list  */
#line 591 "./grammar/statements/select.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 23691 "./grammar/grammar_out.cpp"
    break;

  case 570: /* sort_clause: ORDER BY ALL opt_asc_desc opt_nulls_order  */
#line 593 "./grammar/statements/select.y"
                                {
					PGSortBy *sort = makeNode(PGSortBy);
					PGAStar *star = makeNode(PGAStar);
					star->columns = true;
					star->location = (yylsp[-2]);
					sort->node = (PGNode *) star;
					sort->sortby_dir = (yyvsp[-1].sortorder);
					sort->sortby_nulls = (yyvsp[0].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				}
#line 23708 "./grammar/grammar_out.cpp"
    break;

  case 571: /* sortby_list: sortby  */
#line 608 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].sortby)); }
#line 23714 "./grammar/grammar_out.cpp"
    break;

  case 572: /* sortby_list: sortby_list ',' sortby  */
#line 609 "./grammar/statements/select.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].sortby)); }
#line 23720 "./grammar/grammar_out.cpp"
    break;

  case 573: /* sortby: a_expr USING qual_all_Op opt_nulls_order  */
#line 613 "./grammar/statements/select.y"
                                {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[-3].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[0].nullorder);
					(yyval.sortby)->useOp = (yyvsp[-1].list);
					(yyval.sortby)->location = (yylsp[-1]);
				}
#line 23733 "./grammar/grammar_out.cpp"
    break;

  case 574: /* sortby: a_expr opt_asc_desc opt_nulls_order  */
#line 622 "./grammar/statements/select.y"
                                {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[-2].node);
					(yyval.sortby)->sortby_dir = (yyvsp[-1].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[0].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				}
#line 23746 "./grammar/grammar_out.cpp"
    break;

  case 575: /* opt_asc_desc: ASC_P  */
#line 632 "./grammar/statements/select.y"
                                                                        { (yyval.sortorder) = PG_SORTBY_ASC; }
#line 23752 "./grammar/grammar_out.cpp"
    break;

  case 576: /* opt_asc_desc: DESC_P  */
#line 633 "./grammar/statements/select.y"
                                                                                { (yyval.sortorder) = PG_SORTBY_DESC; }
#line 23758 "./grammar/grammar_out.cpp"
    break;

  case 577: /* opt_asc_desc: %empty  */
#line 634 "./grammar/statements/select.y"
                                                                                { (yyval.sortorder) = PG_SORTBY_DEFAULT; }
#line 23764 "./grammar/grammar_out.cpp"
    break;

  case 578: /* opt_nulls_order: NULLS_LA FIRST_P  */
#line 637 "./grammar/statements/select.y"
                                                        { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; }
#line 23770 "./grammar/grammar_out.cpp"
    break;

  case 579: /* opt_nulls_order: NULLS_LA LAST_P  */
#line 638 "./grammar/statements/select.y"
                                                                        { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; }
#line 23776 "./grammar/grammar_out.cpp"
    break;

  case 580: /* opt_nulls_order: %empty  */
#line 639 "./grammar/statements/select.y"
                                                                                { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; }
#line 23782 "./grammar/grammar_out.cpp"
    break;

  case 581: /* select_limit: limit_clause offset_clause  */
#line 643 "./grammar/statements/select.y"
                                                                        { (yyval.list) = list_make2((yyvsp[0].node), (yyvsp[-1].node)); }
#line 23788 "./grammar/grammar_out.cpp"
    break;

  case 582: /* select_limit: offset_clause limit_clause  */
#line 644 "./grammar/statements/select.y"
                                                                { (yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].node)); }
#line 23794 "./grammar/grammar_out.cpp"
    break;

  case 583: /* select_limit: limit_clause  */
#line 645 "./grammar/statements/select.y"
                                                                                { (yyval.list) = list_make2(NULL, (yyvsp[0].node)); }
#line 23800 "./grammar/grammar_out.cpp"
    break;

  case 584: /* select_limit: offset_clause  */
#line 646 "./grammar/statements/select.y"
                                                                                { (yyval.list) = list_make2((yyvsp[0].node), NULL); }
#line 23806 "./grammar/grammar_out.cpp"
    break;

  case 585: /* opt_select_limit: select_limit  */
#line 650 "./grammar/statements/select.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 23812 "./grammar/grammar_out.cpp"
    break;

  case 586: /* opt_select_limit: %empty  */
#line 651 "./grammar/statements/select.y"
                                                                                { (yyval.list) = list_make2(NULL,NULL); }
#line 23818 "./grammar/grammar_out.cpp"
    break;

  case 587: /* limit_clause: LIMIT select_limit_value  */
#line 656 "./grammar/statements/select.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 23824 "./grammar/grammar_out.cpp"
    break;

  case 588: /* limit_clause: LIMIT select_limit_value ',' select_offset_value  */
#line 658 "./grammar/statements/select.y"
                                {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[-3]))));
				}
#line 23837 "./grammar/grammar_out.cpp"
    break;

  case 589: /* limit_clause: FETCH first_or_next select_fetch_first_value row_or_rows ONLY  */
#line 674 "./grammar/statements/select.y"
                                { (yyval.node) = (yyvsp[-2].node); }
#line 23843 "./grammar/grammar_out.cpp"
    break;

  case 590: /* limit_clause: FETCH first_or_next row_or_rows ONLY  */
#line 676 "./grammar/statements/select.y"
                                { (yyval.node) = makeIntConst(1, -1); }
#line 23849 "./grammar/grammar_out.cpp"
    break;

  case 591: /* offset_clause: OFFSET select_offset_value  */
#line 681 "./grammar/statements/select.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 23855 "./grammar/grammar_out.cpp"
    break;

  case 592: /* offset_clause: OFFSET select_fetch_first_value row_or_rows  */
#line 684 "./grammar/statements/select.y"
                                { (yyval.node) = (yyvsp[-1].node); }
#line 23861 "./grammar/grammar_out.cpp"
    break;

  case 593: /* sample_value: FCONST  */
#line 689 "./grammar/statements/select.y"
        {
            (yyval.node) = makeFloatConst((yyvsp[0].str), (yylsp[0]));
        }
#line 23869 "./grammar/grammar_out.cpp"
    break;

  case 594: /* sample_value: ICONST  */
#line 693 "./grammar/statements/select.y"
        {
            (yyval.node) = makeIntConst((yyvsp[0].ival), (yylsp[0]));
        }
#line 23877 "./grammar/grammar_out.cpp"
    break;

  case 596: /* sample_count: sample_value '%'  */
#line 704 "./grammar/statements/select.y"
                {
			(yyval.node) = makeSampleSize((yyvsp[-1].node), true);
		}
#line 23885 "./grammar/grammar_out.cpp"
    break;

  case 597: /* sample_count: sample_value PERCENT  */
#line 708 "./grammar/statements/select.y"
                {
			(yyval.node) = makeSampleSize((yyvsp[-1].node), true);
		}
#line 23893 "./grammar/grammar_out.cpp"
    break;

  case 598: /* sample_count: sample_value  */
#line 712 "./grammar/statements/select.y"
                {
			(yyval.node) = makeSampleSize((yyvsp[0].node), false);
		}
#line 23901 "./grammar/grammar_out.cpp"
    break;

  case 599: /* sample_count: sample_value ROWS  */
#line 716 "./grammar/statements/select.y"
                {
			(yyval.node) = makeSampleSize((yyvsp[-1].node), false);
		}
#line 23909 "./grammar/grammar_out.cpp"
    break;

  case 600: /* sample_clause: USING SAMPLE tablesample_entry  */
#line 723 "./grammar/statements/select.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 23917 "./grammar/grammar_out.cpp"
    break;

  case 601: /* sample_clause: %empty  */
#line 727 "./grammar/statements/select.y"
                                { (yyval.node) = NULL; }
#line 23923 "./grammar/grammar_out.cpp"
    break;

  case 602: /* opt_sample_func: ColId  */
#line 734 "./grammar/statements/select.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 23929 "./grammar/grammar_out.cpp"
    break;

  case 603: /* opt_sample_func: %empty  */
#line 735 "./grammar/statements/select.y"
                                                                { (yyval.str) = NULL; }
#line 23935 "./grammar/grammar_out.cpp"
    break;

  case 604: /* tablesample_entry: opt_sample_func '(' sample_count ')' opt_repeatable_clause  */
#line 740 "./grammar/statements/select.y"
                                {
					int seed = (yyvsp[0].ival);
					(yyval.node) = makeSampleOptions((yyvsp[-2].node), (yyvsp[-4].str), &seed, (yylsp[-4]));
				}
#line 23944 "./grammar/grammar_out.cpp"
    break;

  case 605: /* tablesample_entry: sample_count  */
#line 745 "./grammar/statements/select.y"
                {
			(yyval.node) = makeSampleOptions((yyvsp[0].node), NULL, NULL, (yylsp[0]));
		}
#line 23952 "./grammar/grammar_out.cpp"
    break;

  case 606: /* tablesample_entry: sample_count '(' ColId ')'  */
#line 749 "./grammar/statements/select.y"
                {
			(yyval.node) = makeSampleOptions((yyvsp[-3].node), (yyvsp[-1].str), NULL, (yylsp[-3]));
		}
#line 23960 "./grammar/grammar_out.cpp"
    break;

  case 607: /* tablesample_entry: sample_count '(' ColId ',' ICONST ')'  */
#line 753 "./grammar/statements/select.y"
                {
			int seed = (yyvsp[-1].ival);
			(yyval.node) = makeSampleOptions((yyvsp[-5].node), (yyvsp[-3].str), &seed, (yylsp[-5]));
		}
#line 23969 "./grammar/grammar_out.cpp"
    break;

  case 608: /* tablesample_clause: TABLESAMPLE tablesample_entry  */
#line 761 "./grammar/statements/select.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 23977 "./grammar/grammar_out.cpp"
    break;

  case 609: /* opt_tablesample_clause: tablesample_clause  */
#line 767 "./grammar/statements/select.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 23983 "./grammar/grammar_out.cpp"
    break;

  case 610: /* opt_tablesample_clause: %empty  */
#line 768 "./grammar/statements/select.y"
                                                                        { (yyval.node) = NULL; }
#line 23989 "./grammar/grammar_out.cpp"
    break;

  case 611: /* opt_repeatable_clause: REPEATABLE '(' ICONST ')'  */
#line 773 "./grammar/statements/select.y"
                                                        { (yyval.ival) = (yyvsp[-1].ival); }
#line 23995 "./grammar/grammar_out.cpp"
    break;

  case 612: /* opt_repeatable_clause: %empty  */
#line 774 "./grammar/statements/select.y"
                                                                        { (yyval.ival) = -1; }
#line 24001 "./grammar/grammar_out.cpp"
    break;

  case 613: /* select_limit_value: a_expr  */
#line 778 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 24007 "./grammar/grammar_out.cpp"
    break;

  case 614: /* select_limit_value: ALL  */
#line 780 "./grammar/statements/select.y"
                                {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[0]));
				}
#line 24016 "./grammar/grammar_out.cpp"
    break;

  case 615: /* select_limit_value: a_expr '%'  */
#line 785 "./grammar/statements/select.y"
                                { (yyval.node) = makeLimitPercent((yyvsp[-1].node)); }
#line 24022 "./grammar/grammar_out.cpp"
    break;

  case 616: /* select_limit_value: FCONST PERCENT  */
#line 787 "./grammar/statements/select.y"
                                { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[-1].str),(yylsp[-1]))); }
#line 24028 "./grammar/grammar_out.cpp"
    break;

  case 617: /* select_limit_value: ICONST PERCENT  */
#line 789 "./grammar/statements/select.y"
                                { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[-1].ival),(yylsp[-1]))); }
#line 24034 "./grammar/grammar_out.cpp"
    break;

  case 618: /* select_offset_value: a_expr  */
#line 793 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 24040 "./grammar/grammar_out.cpp"
    break;

  case 619: /* select_fetch_first_value: c_expr  */
#line 813 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 24046 "./grammar/grammar_out.cpp"
    break;

  case 620: /* select_fetch_first_value: '+' I_or_F_const  */
#line 815 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 24052 "./grammar/grammar_out.cpp"
    break;

  case 621: /* select_fetch_first_value: '-' I_or_F_const  */
#line 817 "./grammar/statements/select.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 24058 "./grammar/grammar_out.cpp"
    break;

  case 622: /* I_or_F_const: Iconst  */
#line 821 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = makeIntConst((yyvsp[0].ival),(yylsp[0])); }
#line 24064 "./grammar/grammar_out.cpp"
    break;

  case 623: /* I_or_F_const: FCONST  */
#line 822 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = makeFloatConst((yyvsp[0].str),(yylsp[0])); }
#line 24070 "./grammar/grammar_out.cpp"
    break;

  case 624: /* row_or_rows: ROW  */
#line 826 "./grammar/statements/select.y"
                                                                                        { (yyval.ival) = 0; }
#line 24076 "./grammar/grammar_out.cpp"
    break;

  case 625: /* row_or_rows: ROWS  */
#line 827 "./grammar/statements/select.y"
                                                                                                { (yyval.ival) = 0; }
#line 24082 "./grammar/grammar_out.cpp"
    break;

  case 626: /* first_or_next: FIRST_P  */
#line 830 "./grammar/statements/select.y"
                                                                                { (yyval.ival) = 0; }
#line 24088 "./grammar/grammar_out.cpp"
    break;

  case 627: /* first_or_next: NEXT  */
#line 831 "./grammar/statements/select.y"
                                                                                                { (yyval.ival) = 0; }
#line 24094 "./grammar/grammar_out.cpp"
    break;

  case 628: /* group_clause: GROUP_P BY group_by_list_opt_comma  */
#line 856 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 24100 "./grammar/grammar_out.cpp"
    break;

  case 629: /* group_clause: GROUP_P BY ALL  */
#line 858 "./grammar/statements/select.y"
                                {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[0]));
					(yyval.list) = list_make1(node);
				}
#line 24109 "./grammar/grammar_out.cpp"
    break;

  case 630: /* group_clause: %empty  */
#line 862 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 24115 "./grammar/grammar_out.cpp"
    break;

  case 631: /* group_by_list: group_by_item  */
#line 866 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 24121 "./grammar/grammar_out.cpp"
    break;

  case 632: /* group_by_list: group_by_list ',' group_by_item  */
#line 867 "./grammar/statements/select.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list),(yyvsp[0].node)); }
#line 24127 "./grammar/grammar_out.cpp"
    break;

  case 633: /* group_by_list_opt_comma: group_by_list  */
#line 871 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 24133 "./grammar/grammar_out.cpp"
    break;

  case 634: /* group_by_list_opt_comma: group_by_list ','  */
#line 872 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 24139 "./grammar/grammar_out.cpp"
    break;

  case 635: /* group_by_item: a_expr  */
#line 876 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 24145 "./grammar/grammar_out.cpp"
    break;

  case 636: /* group_by_item: empty_grouping_set  */
#line 877 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 24151 "./grammar/grammar_out.cpp"
    break;

  case 637: /* group_by_item: cube_clause  */
#line 878 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 24157 "./grammar/grammar_out.cpp"
    break;

  case 638: /* group_by_item: rollup_clause  */
#line 879 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 24163 "./grammar/grammar_out.cpp"
    break;

  case 639: /* group_by_item: grouping_sets_clause  */
#line 880 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 24169 "./grammar/grammar_out.cpp"
    break;

  case 640: /* empty_grouping_set: '(' ')'  */
#line 885 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[-1]));
				}
#line 24177 "./grammar/grammar_out.cpp"
    break;

  case 641: /* rollup_clause: ROLLUP '(' expr_list_opt_comma ')'  */
#line 898 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[-1].list), (yylsp[-3]));
				}
#line 24185 "./grammar/grammar_out.cpp"
    break;

  case 642: /* cube_clause: CUBE '(' expr_list_opt_comma ')'  */
#line 905 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[-1].list), (yylsp[-3]));
				}
#line 24193 "./grammar/grammar_out.cpp"
    break;

  case 643: /* grouping_sets_clause: GROUPING SETS '(' group_by_list_opt_comma ')'  */
#line 912 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[-1].list), (yylsp[-4]));
				}
#line 24201 "./grammar/grammar_out.cpp"
    break;

  case 644: /* grouping_or_grouping_id: GROUPING  */
#line 918 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = NULL; }
#line 24207 "./grammar/grammar_out.cpp"
    break;

  case 645: /* grouping_or_grouping_id: GROUPING_ID  */
#line 919 "./grammar/statements/select.y"
                                                                                { (yyval.node) = NULL; }
#line 24213 "./grammar/grammar_out.cpp"
    break;

  case 646: /* having_clause: HAVING a_expr  */
#line 923 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 24219 "./grammar/grammar_out.cpp"
    break;

  case 647: /* having_clause: %empty  */
#line 924 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = NULL; }
#line 24225 "./grammar/grammar_out.cpp"
    break;

  case 648: /* qualify_clause: QUALIFY a_expr  */
#line 928 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 24231 "./grammar/grammar_out.cpp"
    break;

  case 649: /* qualify_clause: %empty  */
#line 929 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = NULL; }
#line 24237 "./grammar/grammar_out.cpp"
    break;

  case 650: /* for_locking_clause: for_locking_items  */
#line 933 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 24243 "./grammar/grammar_out.cpp"
    break;

  case 651: /* for_locking_clause: FOR READ_P ONLY  */
#line 934 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 24249 "./grammar/grammar_out.cpp"
    break;

  case 652: /* opt_for_locking_clause: for_locking_clause  */
#line 938 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 24255 "./grammar/grammar_out.cpp"
    break;

  case 653: /* opt_for_locking_clause: %empty  */
#line 939 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = NIL; }
#line 24261 "./grammar/grammar_out.cpp"
    break;

  case 654: /* for_locking_items: for_locking_item  */
#line 943 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 24267 "./grammar/grammar_out.cpp"
    break;

  case 655: /* for_locking_items: for_locking_items for_locking_item  */
#line 944 "./grammar/statements/select.y"
                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 24273 "./grammar/grammar_out.cpp"
    break;

  case 656: /* for_locking_item: for_locking_strength locked_rels_list opt_nowait_or_skip  */
#line 949 "./grammar/statements/select.y"
                                {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[-1].list);
					n->strength = (yyvsp[-2].lockstrength);
					n->waitPolicy = (yyvsp[0].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				}
#line 24285 "./grammar/grammar_out.cpp"
    break;

  case 657: /* for_locking_strength: FOR UPDATE  */
#line 959 "./grammar/statements/select.y"
                                                                                        { (yyval.lockstrength) = LCS_FORUPDATE; }
#line 24291 "./grammar/grammar_out.cpp"
    break;

  case 658: /* for_locking_strength: FOR NO KEY UPDATE  */
#line 960 "./grammar/statements/select.y"
                                                                        { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; }
#line 24297 "./grammar/grammar_out.cpp"
    break;

  case 659: /* for_locking_strength: FOR SHARE  */
#line 961 "./grammar/statements/select.y"
                                                                                { (yyval.lockstrength) = PG_LCS_FORSHARE; }
#line 24303 "./grammar/grammar_out.cpp"
    break;

  case 660: /* for_locking_strength: FOR KEY SHARE  */
#line 962 "./grammar/statements/select.y"
                                                                                { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; }
#line 24309 "./grammar/grammar_out.cpp"
    break;

  case 661: /* locked_rels_list: OF qualified_name_list  */
#line 966 "./grammar/statements/select.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 24315 "./grammar/grammar_out.cpp"
    break;

  case 662: /* locked_rels_list: %empty  */
#line 967 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = NIL; }
#line 24321 "./grammar/grammar_out.cpp"
    break;

  case 663: /* opt_nowait_or_skip: NOWAIT  */
#line 972 "./grammar/statements/select.y"
                                                                                { (yyval.lockwaitpolicy) = LockWaitError; }
#line 24327 "./grammar/grammar_out.cpp"
    break;

  case 664: /* opt_nowait_or_skip: SKIP LOCKED  */
#line 973 "./grammar/statements/select.y"
                                                                        { (yyval.lockwaitpolicy) = PGLockWaitSkip; }
#line 24333 "./grammar/grammar_out.cpp"
    break;

  case 665: /* opt_nowait_or_skip: %empty  */
#line 974 "./grammar/statements/select.y"
                                                                                { (yyval.lockwaitpolicy) = PGLockWaitBlock; }
#line 24339 "./grammar/grammar_out.cpp"
    break;

  case 666: /* values_clause: VALUES '(' expr_list_opt_comma ')'  */
#line 984 "./grammar/statements/select.y"
                                {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[-1].list));
					(yyval.node) = (PGNode *) n;
				}
#line 24349 "./grammar/grammar_out.cpp"
    break;

  case 667: /* values_clause: values_clause ',' '(' expr_list_opt_comma ')'  */
#line 990 "./grammar/statements/select.y"
                                {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[-4].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[-1].list));
					(yyval.node) = (PGNode *) n;
				}
#line 24359 "./grammar/grammar_out.cpp"
    break;

  case 668: /* values_clause_opt_comma: values_clause  */
#line 998 "./grammar/statements/select.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 24365 "./grammar/grammar_out.cpp"
    break;

  case 669: /* values_clause_opt_comma: values_clause ','  */
#line 999 "./grammar/statements/select.y"
                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 24371 "./grammar/grammar_out.cpp"
    break;

  case 670: /* from_clause: FROM from_list_opt_comma  */
#line 1012 "./grammar/statements/select.y"
                                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 24377 "./grammar/grammar_out.cpp"
    break;

  case 671: /* from_clause: %empty  */
#line 1013 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 24383 "./grammar/grammar_out.cpp"
    break;

  case 672: /* from_list: table_ref  */
#line 1017 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 24389 "./grammar/grammar_out.cpp"
    break;

  case 673: /* from_list: from_list ',' table_ref  */
#line 1018 "./grammar/statements/select.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 24395 "./grammar/grammar_out.cpp"
    break;

  case 674: /* from_list_opt_comma: from_list  */
#line 1022 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 24401 "./grammar/grammar_out.cpp"
    break;

  case 675: /* from_list_opt_comma: from_list ','  */
#line 1023 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 24407 "./grammar/grammar_out.cpp"
    break;

  case 676: /* alias_prefix_colon_clause: ColIdOrString ':'  */
#line 1028 "./grammar/statements/select.y"
            {
                (yyval.alias) = makeNode(PGAlias);
                (yyval.alias)->aliasname = (yyvsp[-1].str);
            }
#line 24416 "./grammar/grammar_out.cpp"
    break;

  case 677: /* table_ref: relation_expr opt_alias_clause opt_tablesample_clause  */
#line 1039 "./grammar/statements/select.y"
                                {
					(yyvsp[-2].range)->alias = (yyvsp[-1].alias);
					(yyvsp[-2].range)->sample = (yyvsp[0].node);
					(yyval.node) = (PGNode *) (yyvsp[-2].range);
				}
#line 24426 "./grammar/grammar_out.cpp"
    break;

  case 678: /* table_ref: alias_prefix_colon_clause relation_expr opt_tablesample_clause  */
#line 1045 "./grammar/statements/select.y"
                {
                    (yyvsp[-1].range)->alias = (yyvsp[-2].alias);
                    (yyvsp[-1].range)->sample = (yyvsp[0].node);
                    (yyval.node) = (PGNode *) (yyvsp[-1].range);
                }
#line 24436 "./grammar/grammar_out.cpp"
    break;

  case 679: /* table_ref: func_table func_alias_clause opt_tablesample_clause  */
#line 1051 "./grammar/statements/select.y"
                                {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[-2].node);
					n->alias = (PGAlias*) linitial((yyvsp[-1].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[-1].list));
					n->sample = (yyvsp[0].node);
					(yyval.node) = (PGNode *) n;
				}
#line 24448 "./grammar/grammar_out.cpp"
    break;

  case 680: /* table_ref: alias_prefix_colon_clause func_table opt_tablesample_clause  */
#line 1059 "./grammar/statements/select.y"
                    {
                        PGRangeFunction *n = (PGRangeFunction *) (yyvsp[-1].node);
                        n->alias = (yyvsp[-2].alias);
                        n->sample = (yyvsp[0].node);
                        (yyval.node) = (PGNode *) n;
                    }
#line 24459 "./grammar/grammar_out.cpp"
    break;

  case 681: /* table_ref: values_clause_opt_comma alias_clause opt_tablesample_clause  */
#line 1067 "./grammar/statements/select.y"
                {
                    PGRangeSubselect *n = makeNode(PGRangeSubselect);
                    n->lateral = false;
                    n->subquery = (yyvsp[-2].node);
                    n->alias = (yyvsp[-1].alias);
                    n->sample = (yyvsp[0].node);
                    (yyval.node) = (PGNode *) n;
                }
#line 24472 "./grammar/grammar_out.cpp"
    break;

  case 682: /* table_ref: LATERAL_P func_table func_alias_clause  */
#line 1077 "./grammar/statements/select.y"
                                {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[-1].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[0].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[0].list));
					(yyval.node) = (PGNode *) n;
				}
#line 24484 "./grammar/grammar_out.cpp"
    break;

  case 683: /* table_ref: select_with_parens opt_alias_clause opt_tablesample_clause  */
#line 1085 "./grammar/statements/select.y"
                                {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[-2].node);
					n->alias = (yyvsp[-1].alias);
					n->sample = (yyvsp[0].node);
					(yyval.node) = (PGNode *) n;
				}
#line 24497 "./grammar/grammar_out.cpp"
    break;

  case 684: /* table_ref: alias_prefix_colon_clause select_with_parens opt_tablesample_clause  */
#line 1094 "./grammar/statements/select.y"
                {
                    PGRangeSubselect *n = makeNode(PGRangeSubselect);
                    n->lateral = false;
                    n->subquery = (yyvsp[-1].node);
                    n->alias = (yyvsp[-2].alias);
                    n->sample = (yyvsp[0].node);
                    (yyval.node) = (PGNode *) n;
                }
#line 24510 "./grammar/grammar_out.cpp"
    break;

  case 685: /* table_ref: LATERAL_P select_with_parens opt_alias_clause  */
#line 1103 "./grammar/statements/select.y"
                                {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[-1].node);
					n->alias = (yyvsp[0].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				}
#line 24523 "./grammar/grammar_out.cpp"
    break;

  case 686: /* table_ref: joined_table  */
#line 1112 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) (yyvsp[0].jexpr);
				}
#line 24531 "./grammar/grammar_out.cpp"
    break;

  case 687: /* table_ref: '(' joined_table ')' alias_clause  */
#line 1116 "./grammar/statements/select.y"
                                {
					(yyvsp[-2].jexpr)->alias = (yyvsp[0].alias);
					(yyval.node) = (PGNode *) (yyvsp[-2].jexpr);
				}
#line 24540 "./grammar/grammar_out.cpp"
    break;

  case 688: /* table_ref: alias_prefix_colon_clause '(' joined_table ')'  */
#line 1121 "./grammar/statements/select.y"
                {
                    (yyvsp[-1].jexpr)->alias = (yyvsp[-3].alias);
                    (yyval.node) = (PGNode *) (yyvsp[-1].jexpr);
                }
#line 24549 "./grammar/grammar_out.cpp"
    break;

  case 689: /* table_ref: table_ref PIVOT '(' target_list_opt_comma FOR pivot_value_list opt_pivot_group_by ')' opt_alias_clause  */
#line 1126 "./grammar/statements/select.y"
                                {
					PGPivotExpr *n = makeNode(PGPivotExpr);
					n->source = (yyvsp[-8].node);
					n->aggrs = (yyvsp[-5].list);
					n->pivots = (yyvsp[-3].list);
					n->groups = (yyvsp[-2].list);
					n->alias = (yyvsp[0].alias);
					n->location = (yylsp[-7]);
					(yyval.node) = (PGNode *) n;
				}
#line 24564 "./grammar/grammar_out.cpp"
    break;

  case 690: /* table_ref: table_ref UNPIVOT opt_include_nulls '(' unpivot_header FOR unpivot_value_list ')' opt_alias_clause  */
#line 1137 "./grammar/statements/select.y"
                                {
					PGPivotExpr *n = makeNode(PGPivotExpr);
					n->source = (yyvsp[-8].node);
					n->include_nulls = (yyvsp[-6].boolean);
					n->unpivots = (yyvsp[-4].list);
					n->pivots = (yyvsp[-2].list);
					n->alias = (yyvsp[0].alias);
					n->location = (yylsp[-7]);
					(yyval.node) = (PGNode *) n;
				}
#line 24579 "./grammar/grammar_out.cpp"
    break;

  case 691: /* opt_pivot_group_by: GROUP_P BY name_list_opt_comma  */
#line 1150 "./grammar/statements/select.y"
                                                { (yyval.list) = (yyvsp[0].list); }
#line 24585 "./grammar/grammar_out.cpp"
    break;

  case 692: /* opt_pivot_group_by: %empty  */
#line 1151 "./grammar/statements/select.y"
                                                                { (yyval.list) = NULL; }
#line 24591 "./grammar/grammar_out.cpp"
    break;

  case 693: /* opt_include_nulls: INCLUDE_P NULLS_P  */
#line 1154 "./grammar/statements/select.y"
                                                                { (yyval.boolean) = true; }
#line 24597 "./grammar/grammar_out.cpp"
    break;

  case 694: /* opt_include_nulls: EXCLUDE NULLS_P  */
#line 1155 "./grammar/statements/select.y"
                                                                { (yyval.boolean) = false; }
#line 24603 "./grammar/grammar_out.cpp"
    break;

  case 695: /* opt_include_nulls: %empty  */
#line 1156 "./grammar/statements/select.y"
                                                                { (yyval.boolean) = false; }
#line 24609 "./grammar/grammar_out.cpp"
    break;

  case 696: /* single_pivot_value: b_expr IN_P '(' target_list_opt_comma ')'  */
#line 1160 "./grammar/statements/select.y"
                {
			PGPivot *n = makeNode(PGPivot);
			n->pivot_columns = list_make1((yyvsp[-4].node));
			n->pivot_value = (yyvsp[-1].list);
			(yyval.node) = (PGNode *) n;
		}
#line 24620 "./grammar/grammar_out.cpp"
    break;

  case 697: /* single_pivot_value: b_expr IN_P ColIdOrString  */
#line 1168 "./grammar/statements/select.y"
                {
			PGPivot *n = makeNode(PGPivot);
			n->pivot_columns = list_make1((yyvsp[-2].node));
			n->pivot_enum = (yyvsp[0].str);
			(yyval.node) = (PGNode *) n;
		}
#line 24631 "./grammar/grammar_out.cpp"
    break;

  case 698: /* pivot_header: d_expr  */
#line 1177 "./grammar/statements/select.y"
                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 24637 "./grammar/grammar_out.cpp"
    break;

  case 699: /* pivot_header: indirection_expr  */
#line 1178 "./grammar/statements/select.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 24643 "./grammar/grammar_out.cpp"
    break;

  case 700: /* pivot_header: '(' c_expr_list_opt_comma ')'  */
#line 1179 "./grammar/statements/select.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 24649 "./grammar/grammar_out.cpp"
    break;

  case 701: /* pivot_value: pivot_header IN_P '(' target_list_opt_comma ')'  */
#line 1183 "./grammar/statements/select.y"
                {
			PGPivot *n = makeNode(PGPivot);
			n->pivot_columns = (yyvsp[-4].list);
			n->pivot_value = (yyvsp[-1].list);
			(yyval.node) = (PGNode *) n;
		}
#line 24660 "./grammar/grammar_out.cpp"
    break;

  case 702: /* pivot_value: pivot_header IN_P ColIdOrString  */
#line 1191 "./grammar/statements/select.y"
                {
			PGPivot *n = makeNode(PGPivot);
			n->pivot_columns = (yyvsp[-2].list);
			n->pivot_enum = (yyvsp[0].str);
			(yyval.node) = (PGNode *) n;
		}
#line 24671 "./grammar/grammar_out.cpp"
    break;

  case 703: /* pivot_value_list: pivot_value  */
#line 1200 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 24679 "./grammar/grammar_out.cpp"
    break;

  case 704: /* pivot_value_list: pivot_value_list pivot_value  */
#line 1204 "./grammar/statements/select.y"
                                {
					(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node));
				}
#line 24687 "./grammar/grammar_out.cpp"
    break;

  case 705: /* unpivot_header: ColIdOrString  */
#line 1210 "./grammar/statements/select.y"
                                                          { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 24693 "./grammar/grammar_out.cpp"
    break;

  case 706: /* unpivot_header: '(' name_list_opt_comma ')'  */
#line 1211 "./grammar/statements/select.y"
                                              { (yyval.list) = (yyvsp[-1].list); }
#line 24699 "./grammar/grammar_out.cpp"
    break;

  case 707: /* unpivot_value: unpivot_header IN_P '(' target_list_opt_comma ')'  */
#line 1216 "./grammar/statements/select.y"
                {
			PGPivot *n = makeNode(PGPivot);
			n->unpivot_columns = (yyvsp[-4].list);
			n->pivot_value = (yyvsp[-1].list);
			(yyval.node) = (PGNode *) n;
		}
#line 24710 "./grammar/grammar_out.cpp"
    break;

  case 708: /* unpivot_value_list: unpivot_value  */
#line 1225 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 24718 "./grammar/grammar_out.cpp"
    break;

  case 709: /* unpivot_value_list: unpivot_value_list unpivot_value  */
#line 1229 "./grammar/statements/select.y"
                                {
					(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node));
				}
#line 24726 "./grammar/grammar_out.cpp"
    break;

  case 710: /* joined_table: '(' joined_table ')'  */
#line 1254 "./grammar/statements/select.y"
                                {
					(yyval.jexpr) = (yyvsp[-1].jexpr);
				}
#line 24734 "./grammar/grammar_out.cpp"
    break;

  case 711: /* joined_table: table_ref CROSS JOIN table_ref  */
#line 1258 "./grammar/statements/select.y"
                                {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->joinreftype = PG_JOIN_REGULAR;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[-2]);
					(yyval.jexpr) = n;
				}
#line 24751 "./grammar/grammar_out.cpp"
    break;

  case 712: /* joined_table: table_ref join_type JOIN table_ref join_qual  */
#line 1271 "./grammar/statements/select.y"
                                {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[-3].jtype);
					n->joinreftype = PG_JOIN_REGULAR;
					n->larg = (yyvsp[-4].node);
					n->rarg = (yyvsp[-1].node);
					if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), PGList))
						n->usingClause = (PGList *) (yyvsp[0].node); /* USING clause */
					else
						n->quals = (yyvsp[0].node); /* ON clause */
					n->location = (yylsp[-3]);
					(yyval.jexpr) = n;
				}
#line 24769 "./grammar/grammar_out.cpp"
    break;

  case 713: /* joined_table: table_ref JOIN table_ref join_qual  */
#line 1285 "./grammar/statements/select.y"
                                {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->joinreftype = PG_JOIN_REGULAR;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[-1].node);
					if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), PGList))
						n->usingClause = (PGList *) (yyvsp[0].node); /* USING clause */
					else
						n->quals = (yyvsp[0].node); /* ON clause */
					n->location = (yylsp[-2]);
					(yyval.jexpr) = n;
				}
#line 24788 "./grammar/grammar_out.cpp"
    break;

  case 714: /* joined_table: table_ref NATURAL join_type JOIN table_ref  */
#line 1300 "./grammar/statements/select.y"
                                {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[-2].jtype);
					n->joinreftype = PG_JOIN_NATURAL;
					n->larg = (yyvsp[-4].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[-3]);
					(yyval.jexpr) = n;
				}
#line 24804 "./grammar/grammar_out.cpp"
    break;

  case 715: /* joined_table: table_ref NATURAL JOIN table_ref  */
#line 1312 "./grammar/statements/select.y"
                                {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->joinreftype = PG_JOIN_NATURAL;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[-2]);
					(yyval.jexpr) = n;
				}
#line 24821 "./grammar/grammar_out.cpp"
    break;

  case 716: /* joined_table: table_ref ASOF join_type JOIN table_ref join_qual  */
#line 1325 "./grammar/statements/select.y"
                                {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[-3].jtype);
					n->joinreftype = PG_JOIN_ASOF;
					n->larg = (yyvsp[-5].node);
					n->rarg = (yyvsp[-1].node);
					if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), PGList))
						n->usingClause = (PGList *) (yyvsp[0].node); /* USING clause */
					else
						n->quals = (yyvsp[0].node); /* ON clause */
					n->location = (yylsp[-4]);
					(yyval.jexpr) = n;
				}
#line 24839 "./grammar/grammar_out.cpp"
    break;

  case 717: /* joined_table: table_ref ASOF JOIN table_ref join_qual  */
#line 1339 "./grammar/statements/select.y"
                                {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->joinreftype = PG_JOIN_ASOF;
					n->larg = (yyvsp[-4].node);
					n->rarg = (yyvsp[-1].node);
					if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), PGList))
						n->usingClause = (PGList *) (yyvsp[0].node); /* USING clause */
					else
						n->quals = (yyvsp[0].node); /* ON clause */
					n->location = (yylsp[-3]);
					(yyval.jexpr) = n;
				}
#line 24857 "./grammar/grammar_out.cpp"
    break;

  case 718: /* joined_table: table_ref POSITIONAL JOIN table_ref  */
#line 1353 "./grammar/statements/select.y"
                                {
					/* POSITIONAL JOIN is a coordinated scan */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_POSITION;
					n->joinreftype = PG_JOIN_REGULAR;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[-2]);
					(yyval.jexpr) = n;
				}
#line 24874 "./grammar/grammar_out.cpp"
    break;

  case 719: /* joined_table: table_ref ANTI JOIN table_ref join_qual  */
#line 1366 "./grammar/statements/select.y"
                {
                    /* ANTI JOIN is a filter */
                    PGJoinExpr *n = makeNode(PGJoinExpr);
                    n->jointype = PG_JOIN_ANTI;
                    n->joinreftype = PG_JOIN_REGULAR;
                    n->larg = (yyvsp[-4].node);
                    n->rarg = (yyvsp[-1].node);
                    if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), PGList))
                        n->usingClause = (PGList *) (yyvsp[0].node); /* USING clause */
                    else
                        n->quals = (yyvsp[0].node); /* ON clause */
                    n->location = (yylsp[-3]);
                    (yyval.jexpr) = n;
                }
#line 24893 "./grammar/grammar_out.cpp"
    break;

  case 720: /* joined_table: table_ref SEMI JOIN table_ref join_qual  */
#line 1381 "./grammar/statements/select.y"
               {
                   /* SEMI JOIN is also a filter */
                   PGJoinExpr *n = makeNode(PGJoinExpr);
                   n->jointype = PG_JOIN_SEMI;
                   n->joinreftype = PG_JOIN_REGULAR;
                   n->larg = (yyvsp[-4].node);
                   n->rarg = (yyvsp[-1].node);
                   if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), PGList))
                       n->usingClause = (PGList *) (yyvsp[0].node); /* USING clause */
                   else
                       n->quals = (yyvsp[0].node); /* ON clause */
                   n->location = (yylsp[-3]);
                   n->location = (yylsp[-3]);
                   (yyval.jexpr) = n;
               }
#line 24913 "./grammar/grammar_out.cpp"
    break;

  case 721: /* alias_clause: AS ColIdOrString '(' name_list_opt_comma ')'  */
#line 1400 "./grammar/statements/select.y"
                                {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[-3].str);
					(yyval.alias)->colnames = (yyvsp[-1].list);
				}
#line 24923 "./grammar/grammar_out.cpp"
    break;

  case 722: /* alias_clause: AS ColIdOrString  */
#line 1406 "./grammar/statements/select.y"
                                {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[0].str);
				}
#line 24932 "./grammar/grammar_out.cpp"
    break;

  case 723: /* alias_clause: ColId '(' name_list_opt_comma ')'  */
#line 1411 "./grammar/statements/select.y"
                                {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[-3].str);
					(yyval.alias)->colnames = (yyvsp[-1].list);
				}
#line 24942 "./grammar/grammar_out.cpp"
    break;

  case 724: /* alias_clause: ColId  */
#line 1417 "./grammar/statements/select.y"
                                {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[0].str);
				}
#line 24951 "./grammar/grammar_out.cpp"
    break;

  case 725: /* opt_alias_clause: alias_clause  */
#line 1423 "./grammar/statements/select.y"
                                                                        { (yyval.alias) = (yyvsp[0].alias); }
#line 24957 "./grammar/grammar_out.cpp"
    break;

  case 726: /* opt_alias_clause: %empty  */
#line 1424 "./grammar/statements/select.y"
                                                                                                { (yyval.alias) = NULL; }
#line 24963 "./grammar/grammar_out.cpp"
    break;

  case 727: /* func_alias_clause: alias_clause  */
#line 1433 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make2((yyvsp[0].alias), NIL);
				}
#line 24971 "./grammar/grammar_out.cpp"
    break;

  case 728: /* func_alias_clause: AS '(' TableFuncElementList ')'  */
#line 1437 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make2(NULL, (yyvsp[-1].list));
				}
#line 24979 "./grammar/grammar_out.cpp"
    break;

  case 729: /* func_alias_clause: AS ColIdOrString '(' TableFuncElementList ')'  */
#line 1441 "./grammar/statements/select.y"
                                {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[-3].str);
					(yyval.list) = list_make2(a, (yyvsp[-1].list));
				}
#line 24989 "./grammar/grammar_out.cpp"
    break;

  case 730: /* func_alias_clause: ColId '(' TableFuncElementList ')'  */
#line 1447 "./grammar/statements/select.y"
                                {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[-3].str);
					(yyval.list) = list_make2(a, (yyvsp[-1].list));
				}
#line 24999 "./grammar/grammar_out.cpp"
    break;

  case 731: /* func_alias_clause: %empty  */
#line 1453 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make2(NULL, NIL);
				}
#line 25007 "./grammar/grammar_out.cpp"
    break;

  case 732: /* join_type: FULL join_outer  */
#line 1458 "./grammar/statements/select.y"
                                                                                { (yyval.jtype) = PG_JOIN_FULL; }
#line 25013 "./grammar/grammar_out.cpp"
    break;

  case 733: /* join_type: LEFT join_outer  */
#line 1459 "./grammar/statements/select.y"
                                                                                        { (yyval.jtype) = PG_JOIN_LEFT; }
#line 25019 "./grammar/grammar_out.cpp"
    break;

  case 734: /* join_type: RIGHT join_outer  */
#line 1460 "./grammar/statements/select.y"
                                                                                        { (yyval.jtype) = PG_JOIN_RIGHT; }
#line 25025 "./grammar/grammar_out.cpp"
    break;

  case 735: /* join_type: SEMI  */
#line 1461 "./grammar/statements/select.y"
                                                                                        { (yyval.jtype) = PG_JOIN_SEMI; }
#line 25031 "./grammar/grammar_out.cpp"
    break;

  case 736: /* join_type: ANTI  */
#line 1462 "./grammar/statements/select.y"
                                                                                        { (yyval.jtype) = PG_JOIN_ANTI; }
#line 25037 "./grammar/grammar_out.cpp"
    break;

  case 737: /* join_type: INNER_P  */
#line 1463 "./grammar/statements/select.y"
                                                                                                { (yyval.jtype) = PG_JOIN_INNER; }
#line 25043 "./grammar/grammar_out.cpp"
    break;

  case 738: /* join_outer: OUTER_P  */
#line 1467 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = NULL; }
#line 25049 "./grammar/grammar_out.cpp"
    break;

  case 739: /* join_outer: %empty  */
#line 1468 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = NULL; }
#line 25055 "./grammar/grammar_out.cpp"
    break;

  case 740: /* join_qual: USING '(' name_list_opt_comma ')'  */
#line 1480 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (PGNode *) (yyvsp[-1].list); }
#line 25061 "./grammar/grammar_out.cpp"
    break;

  case 741: /* join_qual: ON a_expr  */
#line 1481 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 25067 "./grammar/grammar_out.cpp"
    break;

  case 742: /* relation_expr: qualified_name  */
#line 1487 "./grammar/statements/select.y"
                                {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				}
#line 25078 "./grammar/grammar_out.cpp"
    break;

  case 743: /* relation_expr: qualified_name '*'  */
#line 1494 "./grammar/statements/select.y"
                                {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[-1].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				}
#line 25089 "./grammar/grammar_out.cpp"
    break;

  case 744: /* relation_expr: ONLY qualified_name  */
#line 1501 "./grammar/statements/select.y"
                                {
					/* no inheritance */
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				}
#line 25100 "./grammar/grammar_out.cpp"
    break;

  case 745: /* relation_expr: ONLY '(' qualified_name ')'  */
#line 1508 "./grammar/statements/select.y"
                                {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[-1].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				}
#line 25111 "./grammar/grammar_out.cpp"
    break;

  case 746: /* func_table: func_expr_windowless opt_ordinality  */
#line 1540 "./grammar/statements/select.y"
                                {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[0].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[-1].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				}
#line 25126 "./grammar/grammar_out.cpp"
    break;

  case 747: /* func_table: ROWS FROM '(' rowsfrom_list ')' opt_ordinality  */
#line 1551 "./grammar/statements/select.y"
                                {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[0].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[-2].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				}
#line 25141 "./grammar/grammar_out.cpp"
    break;

  case 748: /* rowsfrom_item: func_expr_windowless opt_col_def_list  */
#line 1564 "./grammar/statements/select.y"
                                { (yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].list)); }
#line 25147 "./grammar/grammar_out.cpp"
    break;

  case 749: /* rowsfrom_list: rowsfrom_item  */
#line 1568 "./grammar/statements/select.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 25153 "./grammar/grammar_out.cpp"
    break;

  case 750: /* rowsfrom_list: rowsfrom_list ',' rowsfrom_item  */
#line 1569 "./grammar/statements/select.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 25159 "./grammar/grammar_out.cpp"
    break;

  case 751: /* opt_col_def_list: AS '(' TableFuncElementList ')'  */
#line 1572 "./grammar/statements/select.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 25165 "./grammar/grammar_out.cpp"
    break;

  case 752: /* opt_col_def_list: %empty  */
#line 1573 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 25171 "./grammar/grammar_out.cpp"
    break;

  case 753: /* opt_ordinality: WITH_LA ORDINALITY  */
#line 1576 "./grammar/statements/select.y"
                                                                        { (yyval.boolean) = true; }
#line 25177 "./grammar/grammar_out.cpp"
    break;

  case 754: /* opt_ordinality: %empty  */
#line 1577 "./grammar/statements/select.y"
                                                                                                { (yyval.boolean) = false; }
#line 25183 "./grammar/grammar_out.cpp"
    break;

  case 755: /* where_clause: WHERE a_expr  */
#line 1582 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 25189 "./grammar/grammar_out.cpp"
    break;

  case 756: /* where_clause: %empty  */
#line 1583 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = NULL; }
#line 25195 "./grammar/grammar_out.cpp"
    break;

  case 757: /* TableFuncElementList: TableFuncElement  */
#line 1589 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 25203 "./grammar/grammar_out.cpp"
    break;

  case 758: /* TableFuncElementList: TableFuncElementList ',' TableFuncElement  */
#line 1593 "./grammar/statements/select.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 25211 "./grammar/grammar_out.cpp"
    break;

  case 759: /* TableFuncElement: ColIdOrString Typename opt_collate_clause  */
#line 1599 "./grammar/statements/select.y"
                                {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[-2].str);
					n->typeName = (yyvsp[-1].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[0].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[-2]);
					(yyval.node) = (PGNode *)n;
				}
#line 25233 "./grammar/grammar_out.cpp"
    break;

  case 760: /* opt_collate_clause: COLLATE any_name  */
#line 1620 "./grammar/statements/select.y"
                                {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *) n;
				}
#line 25245 "./grammar/grammar_out.cpp"
    break;

  case 761: /* opt_collate_clause: %empty  */
#line 1627 "./grammar/statements/select.y"
                                                                { (yyval.node) = NULL; }
#line 25251 "./grammar/grammar_out.cpp"
    break;

  case 762: /* colid_type_list: ColId Typename  */
#line 1641 "./grammar/statements/select.y"
                             {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[-1].str)), (yyvsp[0].typnam)));
            }
#line 25259 "./grammar/grammar_out.cpp"
    break;

  case 763: /* colid_type_list: colid_type_list ',' ColId Typename  */
#line 1644 "./grammar/statements/select.y"
                                                 {
             (yyval.list) = lappend((yyvsp[-3].list), list_make2(makeString((yyvsp[-1].str)), (yyvsp[0].typnam)));
            }
#line 25267 "./grammar/grammar_out.cpp"
    break;

  case 766: /* opt_Typename: Typename  */
#line 1651 "./grammar/statements/select.y"
                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25273 "./grammar/grammar_out.cpp"
    break;

  case 767: /* opt_Typename: %empty  */
#line 1652 "./grammar/statements/select.y"
                                                                                { (yyval.typnam) = NULL; }
#line 25279 "./grammar/grammar_out.cpp"
    break;

  case 768: /* Typename: SimpleTypename opt_array_bounds  */
#line 1655 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[0].list);
				}
#line 25288 "./grammar/grammar_out.cpp"
    break;

  case 769: /* Typename: SETOF SimpleTypename opt_array_bounds  */
#line 1660 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[0].list);
					(yyval.typnam)->setof = true;
				}
#line 25298 "./grammar/grammar_out.cpp"
    break;

  case 770: /* Typename: SimpleTypename ARRAY '[' Iconst ']'  */
#line 1667 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[-4].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[-1].ival)));
				}
#line 25307 "./grammar/grammar_out.cpp"
    break;

  case 771: /* Typename: SETOF SimpleTypename ARRAY '[' Iconst ']'  */
#line 1672 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[-4].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[-1].ival)));
					(yyval.typnam)->setof = true;
				}
#line 25317 "./grammar/grammar_out.cpp"
    break;

  case 772: /* Typename: SimpleTypename ARRAY  */
#line 1678 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				}
#line 25326 "./grammar/grammar_out.cpp"
    break;

  case 773: /* Typename: SETOF SimpleTypename ARRAY  */
#line 1683 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				}
#line 25336 "./grammar/grammar_out.cpp"
    break;

  case 774: /* Typename: qualified_typename  */
#line 1689 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList((yyvsp[0].list));
				}
#line 25344 "./grammar/grammar_out.cpp"
    break;

  case 775: /* Typename: RowOrStruct '(' colid_type_list ')' opt_array_bounds  */
#line 1693 "./grammar/statements/select.y"
                                {
				   (yyval.typnam) = SystemTypeName("struct");
				   (yyval.typnam)->arrayBounds = (yyvsp[0].list);
				   (yyval.typnam)->typmods = (yyvsp[-2].list);
				   (yyval.typnam)->location = (yylsp[-4]);
               }
#line 25355 "./grammar/grammar_out.cpp"
    break;

  case 776: /* Typename: MAP '(' type_list ')' opt_array_bounds  */
#line 1700 "./grammar/statements/select.y"
                {
				   (yyval.typnam) = SystemTypeName("map");
				   (yyval.typnam)->arrayBounds = (yyvsp[0].list);
				   (yyval.typnam)->typmods = (yyvsp[-2].list);
				   (yyval.typnam)->location = (yylsp[-4]);
				}
#line 25366 "./grammar/grammar_out.cpp"
    break;

  case 777: /* Typename: UNION '(' colid_type_list ')' opt_array_bounds  */
#line 1707 "./grammar/statements/select.y"
                                {
				   (yyval.typnam) = SystemTypeName("union");
				   (yyval.typnam)->arrayBounds = (yyvsp[0].list);
				   (yyval.typnam)->typmods = (yyvsp[-2].list);
				   (yyval.typnam)->location = (yylsp[-4]);
				}
#line 25377 "./grammar/grammar_out.cpp"
    break;

  case 778: /* qualified_typename: IDENT '.' IDENT  */
#line 1716 "./grammar/statements/select.y"
                                                                        { (yyval.list) = list_make2(makeString((yyvsp[-2].str)), makeString((yyvsp[0].str))); }
#line 25383 "./grammar/grammar_out.cpp"
    break;

  case 779: /* qualified_typename: qualified_typename '.' IDENT  */
#line 1717 "./grammar/statements/select.y"
                                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 25389 "./grammar/grammar_out.cpp"
    break;

  case 780: /* opt_array_bounds: opt_array_bounds '[' ']'  */
#line 1722 "./grammar/statements/select.y"
                                        {  (yyval.list) = lappend((yyvsp[-2].list), makeInteger(-1)); }
#line 25395 "./grammar/grammar_out.cpp"
    break;

  case 781: /* opt_array_bounds: opt_array_bounds '[' Iconst ']'  */
#line 1724 "./grammar/statements/select.y"
                                        {  (yyval.list) = lappend((yyvsp[-3].list), makeInteger((yyvsp[-1].ival))); }
#line 25401 "./grammar/grammar_out.cpp"
    break;

  case 782: /* opt_array_bounds: %empty  */
#line 1726 "./grammar/statements/select.y"
                                        {  (yyval.list) = NIL; }
#line 25407 "./grammar/grammar_out.cpp"
    break;

  case 783: /* SimpleTypename: GenericType  */
#line 1730 "./grammar/statements/select.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25413 "./grammar/grammar_out.cpp"
    break;

  case 784: /* SimpleTypename: Numeric  */
#line 1731 "./grammar/statements/select.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25419 "./grammar/grammar_out.cpp"
    break;

  case 785: /* SimpleTypename: Bit  */
#line 1732 "./grammar/statements/select.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25425 "./grammar/grammar_out.cpp"
    break;

  case 786: /* SimpleTypename: Character  */
#line 1733 "./grammar/statements/select.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25431 "./grammar/grammar_out.cpp"
    break;

  case 787: /* SimpleTypename: ConstDatetime  */
#line 1734 "./grammar/statements/select.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25437 "./grammar/grammar_out.cpp"
    break;

  case 788: /* SimpleTypename: ConstInterval opt_interval  */
#line 1736 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->typmods = (yyvsp[0].list);
				}
#line 25446 "./grammar/grammar_out.cpp"
    break;

  case 789: /* SimpleTypename: ConstInterval '(' Iconst ')'  */
#line 1741 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[-3].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
				}
#line 25456 "./grammar/grammar_out.cpp"
    break;

  case 790: /* ConstTypename: Numeric  */
#line 1760 "./grammar/statements/select.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25462 "./grammar/grammar_out.cpp"
    break;

  case 791: /* ConstTypename: ConstBit  */
#line 1761 "./grammar/statements/select.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25468 "./grammar/grammar_out.cpp"
    break;

  case 792: /* ConstTypename: ConstCharacter  */
#line 1762 "./grammar/statements/select.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25474 "./grammar/grammar_out.cpp"
    break;

  case 793: /* ConstTypename: ConstDatetime  */
#line 1763 "./grammar/statements/select.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 25480 "./grammar/grammar_out.cpp"
    break;

  case 794: /* GenericType: type_name_token opt_type_modifiers  */
#line 1775 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = makeTypeName((yyvsp[-1].str));
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25490 "./grammar/grammar_out.cpp"
    break;

  case 795: /* opt_type_modifiers: '(' opt_expr_list_opt_comma ')'  */
#line 1788 "./grammar/statements/select.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 25496 "./grammar/grammar_out.cpp"
    break;

  case 796: /* opt_type_modifiers: %empty  */
#line 1789 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = NIL; }
#line 25502 "./grammar/grammar_out.cpp"
    break;

  case 797: /* Numeric: INT_P  */
#line 1796 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 25511 "./grammar/grammar_out.cpp"
    break;

  case 798: /* Numeric: INTEGER  */
#line 1801 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 25520 "./grammar/grammar_out.cpp"
    break;

  case 799: /* Numeric: SMALLINT  */
#line 1806 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 25529 "./grammar/grammar_out.cpp"
    break;

  case 800: /* Numeric: BIGINT  */
#line 1811 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 25538 "./grammar/grammar_out.cpp"
    break;

  case 801: /* Numeric: REAL  */
#line 1816 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 25547 "./grammar/grammar_out.cpp"
    break;

  case 802: /* Numeric: FLOAT_P opt_float  */
#line 1821 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25556 "./grammar/grammar_out.cpp"
    break;

  case 803: /* Numeric: DOUBLE_P PRECISION  */
#line 1826 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25565 "./grammar/grammar_out.cpp"
    break;

  case 804: /* Numeric: DECIMAL_P opt_type_modifiers  */
#line 1831 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25575 "./grammar/grammar_out.cpp"
    break;

  case 805: /* Numeric: DEC opt_type_modifiers  */
#line 1837 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25585 "./grammar/grammar_out.cpp"
    break;

  case 806: /* Numeric: NUMERIC opt_type_modifiers  */
#line 1843 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25595 "./grammar/grammar_out.cpp"
    break;

  case 807: /* Numeric: BOOLEAN_P  */
#line 1849 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 25604 "./grammar/grammar_out.cpp"
    break;

  case 808: /* opt_float: '(' Iconst ')'  */
#line 1856 "./grammar/statements/select.y"
                                {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[-1].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[-1]))));
					else if ((yyvsp[-1].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[-1].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[-1]))));
				}
#line 25629 "./grammar/grammar_out.cpp"
    break;

  case 809: /* opt_float: %empty  */
#line 1877 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("float4");
				}
#line 25637 "./grammar/grammar_out.cpp"
    break;

  case 810: /* Bit: BitWithLength  */
#line 1887 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 25645 "./grammar/grammar_out.cpp"
    break;

  case 811: /* Bit: BitWithoutLength  */
#line 1891 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 25653 "./grammar/grammar_out.cpp"
    break;

  case 812: /* ConstBit: BitWithLength  */
#line 1899 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 25661 "./grammar/grammar_out.cpp"
    break;

  case 813: /* ConstBit: BitWithoutLength  */
#line 1903 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->typmods = NIL;
				}
#line 25670 "./grammar/grammar_out.cpp"
    break;

  case 814: /* BitWithLength: BIT opt_varying '(' expr_list_opt_comma ')'  */
#line 1911 "./grammar/statements/select.y"
                                {
					const char *typname;

					typname = (yyvsp[-3].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[-1].list);
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 25683 "./grammar/grammar_out.cpp"
    break;

  case 815: /* BitWithoutLength: BIT opt_varying  */
#line 1923 "./grammar/statements/select.y"
                                {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[0].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25701 "./grammar/grammar_out.cpp"
    break;

  case 816: /* Character: CharacterWithLength  */
#line 1944 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 25709 "./grammar/grammar_out.cpp"
    break;

  case 817: /* Character: CharacterWithoutLength  */
#line 1948 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 25717 "./grammar/grammar_out.cpp"
    break;

  case 818: /* ConstCharacter: CharacterWithLength  */
#line 1954 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 25725 "./grammar/grammar_out.cpp"
    break;

  case 819: /* ConstCharacter: CharacterWithoutLength  */
#line 1958 "./grammar/statements/select.y"
                                {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->typmods = NIL;
				}
#line 25740 "./grammar/grammar_out.cpp"
    break;

  case 820: /* CharacterWithLength: character '(' Iconst ')'  */
#line 1971 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName((yyvsp[-3].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.typnam)->location = (yylsp[-3]);
				}
#line 25750 "./grammar/grammar_out.cpp"
    break;

  case 821: /* CharacterWithoutLength: character  */
#line 1979 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName((yyvsp[0].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[0].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 25762 "./grammar/grammar_out.cpp"
    break;

  case 822: /* character: CHARACTER opt_varying  */
#line 1989 "./grammar/statements/select.y"
                                                                                { (yyval.conststr) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
#line 25768 "./grammar/grammar_out.cpp"
    break;

  case 823: /* character: CHAR_P opt_varying  */
#line 1991 "./grammar/statements/select.y"
                                                                                { (yyval.conststr) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
#line 25774 "./grammar/grammar_out.cpp"
    break;

  case 824: /* character: VARCHAR  */
#line 1993 "./grammar/statements/select.y"
                                                                                { (yyval.conststr) = "varchar"; }
#line 25780 "./grammar/grammar_out.cpp"
    break;

  case 825: /* character: NATIONAL CHARACTER opt_varying  */
#line 1995 "./grammar/statements/select.y"
                                                                                { (yyval.conststr) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
#line 25786 "./grammar/grammar_out.cpp"
    break;

  case 826: /* character: NATIONAL CHAR_P opt_varying  */
#line 1997 "./grammar/statements/select.y"
                                                                                { (yyval.conststr) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
#line 25792 "./grammar/grammar_out.cpp"
    break;

  case 827: /* character: NCHAR opt_varying  */
#line 1999 "./grammar/statements/select.y"
                                                                                { (yyval.conststr) = (yyvsp[0].boolean) ? "varchar": "bpchar"; }
#line 25798 "./grammar/grammar_out.cpp"
    break;

  case 828: /* opt_varying: VARYING  */
#line 2003 "./grammar/statements/select.y"
                                                                                                { (yyval.boolean) = true; }
#line 25804 "./grammar/grammar_out.cpp"
    break;

  case 829: /* opt_varying: %empty  */
#line 2004 "./grammar/statements/select.y"
                                                                                                { (yyval.boolean) = false; }
#line 25810 "./grammar/grammar_out.cpp"
    break;

  case 830: /* ConstDatetime: TIMESTAMP '(' Iconst ')' opt_timezone  */
#line 2012 "./grammar/statements/select.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 25823 "./grammar/grammar_out.cpp"
    break;

  case 831: /* ConstDatetime: TIMESTAMP opt_timezone  */
#line 2021 "./grammar/statements/select.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25835 "./grammar/grammar_out.cpp"
    break;

  case 832: /* ConstDatetime: TIME '(' Iconst ')' opt_timezone  */
#line 2029 "./grammar/statements/select.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 25848 "./grammar/grammar_out.cpp"
    break;

  case 833: /* ConstDatetime: TIME opt_timezone  */
#line 2038 "./grammar/statements/select.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 25860 "./grammar/grammar_out.cpp"
    break;

  case 834: /* ConstInterval: INTERVAL  */
#line 2049 "./grammar/statements/select.y"
                                {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 25869 "./grammar/grammar_out.cpp"
    break;

  case 835: /* opt_timezone: WITH_LA TIME ZONE  */
#line 2056 "./grammar/statements/select.y"
                                                                                        { (yyval.boolean) = true; }
#line 25875 "./grammar/grammar_out.cpp"
    break;

  case 836: /* opt_timezone: WITHOUT TIME ZONE  */
#line 2057 "./grammar/statements/select.y"
                                                                                        { (yyval.boolean) = false; }
#line 25881 "./grammar/grammar_out.cpp"
    break;

  case 837: /* opt_timezone: %empty  */
#line 2058 "./grammar/statements/select.y"
                                                                                                { (yyval.boolean) = false; }
#line 25887 "./grammar/grammar_out.cpp"
    break;

  case 864: /* opt_interval: year_keyword  */
#line 2102 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[0]))); }
#line 25893 "./grammar/grammar_out.cpp"
    break;

  case 865: /* opt_interval: month_keyword  */
#line 2104 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[0]))); }
#line 25899 "./grammar/grammar_out.cpp"
    break;

  case 866: /* opt_interval: day_keyword  */
#line 2106 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[0]))); }
#line 25905 "./grammar/grammar_out.cpp"
    break;

  case 867: /* opt_interval: hour_keyword  */
#line 2108 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[0]))); }
#line 25911 "./grammar/grammar_out.cpp"
    break;

  case 868: /* opt_interval: minute_keyword  */
#line 2110 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[0]))); }
#line 25917 "./grammar/grammar_out.cpp"
    break;

  case 869: /* opt_interval: second_keyword  */
#line 2112 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[0]))); }
#line 25923 "./grammar/grammar_out.cpp"
    break;

  case 870: /* opt_interval: millisecond_keyword  */
#line 2114 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[0]))); }
#line 25929 "./grammar/grammar_out.cpp"
    break;

  case 871: /* opt_interval: microsecond_keyword  */
#line 2116 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[0]))); }
#line 25935 "./grammar/grammar_out.cpp"
    break;

  case 872: /* opt_interval: week_keyword  */
#line 2118 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(WEEK), (yylsp[0]))); }
#line 25941 "./grammar/grammar_out.cpp"
    break;

  case 873: /* opt_interval: quarter_keyword  */
#line 2120 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(QUARTER), (yylsp[0]))); }
#line 25947 "./grammar/grammar_out.cpp"
    break;

  case 874: /* opt_interval: decade_keyword  */
#line 2122 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DECADE), (yylsp[0]))); }
#line 25953 "./grammar/grammar_out.cpp"
    break;

  case 875: /* opt_interval: century_keyword  */
#line 2124 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(CENTURY), (yylsp[0]))); }
#line 25959 "./grammar/grammar_out.cpp"
    break;

  case 876: /* opt_interval: millennium_keyword  */
#line 2126 "./grammar/statements/select.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLENNIUM), (yylsp[0]))); }
#line 25965 "./grammar/grammar_out.cpp"
    break;

  case 877: /* opt_interval: year_keyword TO month_keyword  */
#line 2128 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[-2])));
				}
#line 25974 "./grammar/grammar_out.cpp"
    break;

  case 878: /* opt_interval: day_keyword TO hour_keyword  */
#line 2133 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[-2])));
				}
#line 25983 "./grammar/grammar_out.cpp"
    break;

  case 879: /* opt_interval: day_keyword TO minute_keyword  */
#line 2138 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[-2])));
				}
#line 25993 "./grammar/grammar_out.cpp"
    break;

  case 880: /* opt_interval: day_keyword TO second_keyword  */
#line 2144 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[-2])));
				}
#line 26004 "./grammar/grammar_out.cpp"
    break;

  case 881: /* opt_interval: hour_keyword TO minute_keyword  */
#line 2151 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[-2])));
				}
#line 26013 "./grammar/grammar_out.cpp"
    break;

  case 882: /* opt_interval: hour_keyword TO second_keyword  */
#line 2156 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[-2])));
				}
#line 26023 "./grammar/grammar_out.cpp"
    break;

  case 883: /* opt_interval: minute_keyword TO second_keyword  */
#line 2162 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[-2])));
				}
#line 26032 "./grammar/grammar_out.cpp"
    break;

  case 884: /* opt_interval: %empty  */
#line 2167 "./grammar/statements/select.y"
                                { (yyval.list) = NIL; }
#line 26038 "./grammar/grammar_out.cpp"
    break;

  case 885: /* a_expr: c_expr  */
#line 2198 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 26044 "./grammar/grammar_out.cpp"
    break;

  case 886: /* a_expr: a_expr TYPECAST Typename  */
#line 2201 "./grammar/statements/select.y"
                                        { (yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), 0, (yylsp[-1])); }
#line 26050 "./grammar/grammar_out.cpp"
    break;

  case 887: /* a_expr: a_expr COLLATE any_name  */
#line 2203 "./grammar/statements/select.y"
                                {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[-2].node);
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *) n;
				}
#line 26062 "./grammar/grammar_out.cpp"
    break;

  case 888: /* a_expr: a_expr AT TIME ZONE a_expr  */
#line 2211 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[0].node), (yyvsp[-4].node)),
											   (yylsp[-3]));
				}
#line 26072 "./grammar/grammar_out.cpp"
    break;

  case 889: /* a_expr: '+' a_expr  */
#line 2226 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 26078 "./grammar/grammar_out.cpp"
    break;

  case 890: /* a_expr: '-' a_expr  */
#line 2228 "./grammar/statements/select.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 26084 "./grammar/grammar_out.cpp"
    break;

  case 891: /* a_expr: a_expr '+' a_expr  */
#line 2230 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26090 "./grammar/grammar_out.cpp"
    break;

  case 892: /* a_expr: a_expr '-' a_expr  */
#line 2232 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26096 "./grammar/grammar_out.cpp"
    break;

  case 893: /* a_expr: a_expr '*' a_expr  */
#line 2234 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26102 "./grammar/grammar_out.cpp"
    break;

  case 894: /* a_expr: a_expr '/' a_expr  */
#line 2236 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26108 "./grammar/grammar_out.cpp"
    break;

  case 895: /* a_expr: a_expr INTEGER_DIVISION a_expr  */
#line 2238 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "//", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26114 "./grammar/grammar_out.cpp"
    break;

  case 896: /* a_expr: a_expr '%' a_expr  */
#line 2240 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26120 "./grammar/grammar_out.cpp"
    break;

  case 897: /* a_expr: a_expr '^' a_expr  */
#line 2242 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26126 "./grammar/grammar_out.cpp"
    break;

  case 898: /* a_expr: a_expr POWER_OF a_expr  */
#line 2244 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26132 "./grammar/grammar_out.cpp"
    break;

  case 899: /* a_expr: a_expr '<' a_expr  */
#line 2246 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26138 "./grammar/grammar_out.cpp"
    break;

  case 900: /* a_expr: a_expr '>' a_expr  */
#line 2248 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26144 "./grammar/grammar_out.cpp"
    break;

  case 901: /* a_expr: a_expr '=' a_expr  */
#line 2250 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26150 "./grammar/grammar_out.cpp"
    break;

  case 902: /* a_expr: a_expr LESS_EQUALS a_expr  */
#line 2252 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26156 "./grammar/grammar_out.cpp"
    break;

  case 903: /* a_expr: a_expr GREATER_EQUALS a_expr  */
#line 2254 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26162 "./grammar/grammar_out.cpp"
    break;

  case 904: /* a_expr: a_expr NOT_EQUALS a_expr  */
#line 2256 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26168 "./grammar/grammar_out.cpp"
    break;

  case 905: /* a_expr: a_expr qual_Op a_expr  */
#line 2259 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[-1].list), (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26174 "./grammar/grammar_out.cpp"
    break;

  case 906: /* a_expr: qual_Op a_expr  */
#line 2261 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[-1].list), NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 26180 "./grammar/grammar_out.cpp"
    break;

  case 907: /* a_expr: a_expr qual_Op  */
#line 2263 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[0].list), (yyvsp[-1].node), NULL, (yylsp[0])); }
#line 26186 "./grammar/grammar_out.cpp"
    break;

  case 908: /* a_expr: a_expr AND a_expr  */
#line 2266 "./grammar/statements/select.y"
                                { (yyval.node) = makeAndExpr((yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26192 "./grammar/grammar_out.cpp"
    break;

  case 909: /* a_expr: a_expr OR a_expr  */
#line 2268 "./grammar/statements/select.y"
                                { (yyval.node) = makeOrExpr((yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26198 "./grammar/grammar_out.cpp"
    break;

  case 910: /* a_expr: NOT a_expr  */
#line 2270 "./grammar/statements/select.y"
                                { (yyval.node) = makeNotExpr((yyvsp[0].node), (yylsp[-1])); }
#line 26204 "./grammar/grammar_out.cpp"
    break;

  case 911: /* a_expr: NOT_LA a_expr  */
#line 2272 "./grammar/statements/select.y"
                                { (yyval.node) = makeNotExpr((yyvsp[0].node), (yylsp[-1])); }
#line 26210 "./grammar/grammar_out.cpp"
    break;

  case 912: /* a_expr: a_expr GLOB a_expr  */
#line 2274 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
				}
#line 26219 "./grammar/grammar_out.cpp"
    break;

  case 913: /* a_expr: a_expr LIKE a_expr  */
#line 2279 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
				}
#line 26228 "./grammar/grammar_out.cpp"
    break;

  case 914: /* a_expr: a_expr LIKE a_expr ESCAPE a_expr  */
#line 2284 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-3]));
					(yyval.node) = (PGNode *) n;
				}
#line 26239 "./grammar/grammar_out.cpp"
    break;

  case 915: /* a_expr: a_expr NOT_LA LIKE a_expr  */
#line 2291 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2]));
				}
#line 26248 "./grammar/grammar_out.cpp"
    break;

  case 916: /* a_expr: a_expr NOT_LA LIKE a_expr ESCAPE a_expr  */
#line 2296 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[-5].node), (yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (PGNode *) n;
				}
#line 26259 "./grammar/grammar_out.cpp"
    break;

  case 917: /* a_expr: a_expr ILIKE a_expr  */
#line 2303 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
				}
#line 26268 "./grammar/grammar_out.cpp"
    break;

  case 918: /* a_expr: a_expr ILIKE a_expr ESCAPE a_expr  */
#line 2308 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-3]));
					(yyval.node) = (PGNode *) n;
				}
#line 26279 "./grammar/grammar_out.cpp"
    break;

  case 919: /* a_expr: a_expr NOT_LA ILIKE a_expr  */
#line 2315 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2]));
				}
#line 26288 "./grammar/grammar_out.cpp"
    break;

  case 920: /* a_expr: a_expr NOT_LA ILIKE a_expr ESCAPE a_expr  */
#line 2320 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[-5].node), (yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (PGNode *) n;
				}
#line 26299 "./grammar/grammar_out.cpp"
    break;

  case 921: /* a_expr: a_expr SIMILAR TO a_expr  */
#line 2328 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[0].node), makeNullAConst(-1)),
											   (yylsp[-2]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[-3].node), (PGNode *) n, (yylsp[-2]));
				}
#line 26311 "./grammar/grammar_out.cpp"
    break;

  case 922: /* a_expr: a_expr SIMILAR TO a_expr ESCAPE a_expr  */
#line 2336 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[-5].node), (PGNode *) n, (yylsp[-4]));
				}
#line 26323 "./grammar/grammar_out.cpp"
    break;

  case 923: /* a_expr: a_expr NOT_LA SIMILAR TO a_expr  */
#line 2344 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[0].node), makeNullAConst(-1)),
											   (yylsp[-3]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[-4].node), (PGNode *) n, (yylsp[-3]));
				}
#line 26335 "./grammar/grammar_out.cpp"
    break;

  case 924: /* a_expr: a_expr NOT_LA SIMILAR TO a_expr ESCAPE a_expr  */
#line 2352 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-5]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[-6].node), (PGNode *) n, (yylsp[-5]));
				}
#line 26347 "./grammar/grammar_out.cpp"
    break;

  case 925: /* a_expr: a_expr IS NULL_P  */
#line 2370 "./grammar/statements/select.y"
                                {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[-2].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)n;
				}
#line 26359 "./grammar/grammar_out.cpp"
    break;

  case 926: /* a_expr: a_expr ISNULL  */
#line 2378 "./grammar/statements/select.y"
                                {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[-1].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[0]);
					(yyval.node) = (PGNode *)n;
				}
#line 26371 "./grammar/grammar_out.cpp"
    break;

  case 927: /* a_expr: a_expr IS NOT NULL_P  */
#line 2386 "./grammar/statements/select.y"
                                {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[-3].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[-2]);
					(yyval.node) = (PGNode *)n;
				}
#line 26383 "./grammar/grammar_out.cpp"
    break;

  case 928: /* a_expr: a_expr NOT NULL_P  */
#line 2394 "./grammar/statements/select.y"
                                {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[-2].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)n;
				}
#line 26395 "./grammar/grammar_out.cpp"
    break;

  case 929: /* a_expr: a_expr NOTNULL  */
#line 2402 "./grammar/statements/select.y"
                                {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[-1].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[0]);
					(yyval.node) = (PGNode *)n;
				}
#line 26407 "./grammar/grammar_out.cpp"
    break;

  case 930: /* a_expr: a_expr LAMBDA_ARROW a_expr  */
#line 2410 "./grammar/statements/select.y"
                        {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[-2].node);
				n->rhs = (yyvsp[0].node);
				n->location = (yylsp[-1]);
				(yyval.node) = (PGNode *) n;
			}
#line 26419 "./grammar/grammar_out.cpp"
    break;

  case 931: /* a_expr: a_expr DOUBLE_ARROW a_expr  */
#line 2418 "./grammar/statements/select.y"
                        {
							(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "->>", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
			}
#line 26427 "./grammar/grammar_out.cpp"
    break;

  case 932: /* a_expr: row OVERLAPS row  */
#line 2422 "./grammar/statements/select.y"
                                {
					if (list_length((yyvsp[-2].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[-2]))));
					if (list_length((yyvsp[0].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[0]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[-2].list), (yyvsp[0].list)),
											   (yylsp[-1]));
				}
#line 26447 "./grammar/grammar_out.cpp"
    break;

  case 933: /* a_expr: a_expr IS TRUE_P  */
#line 2438 "./grammar/statements/select.y"
                                {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[-2].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)b;
				}
#line 26459 "./grammar/grammar_out.cpp"
    break;

  case 934: /* a_expr: a_expr IS NOT TRUE_P  */
#line 2446 "./grammar/statements/select.y"
                                {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[-2]);
					(yyval.node) = (PGNode *)b;
				}
#line 26471 "./grammar/grammar_out.cpp"
    break;

  case 935: /* a_expr: a_expr IS FALSE_P  */
#line 2454 "./grammar/statements/select.y"
                                {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[-2].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)b;
				}
#line 26483 "./grammar/grammar_out.cpp"
    break;

  case 936: /* a_expr: a_expr IS NOT FALSE_P  */
#line 2462 "./grammar/statements/select.y"
                                {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[-2]);
					(yyval.node) = (PGNode *)b;
				}
#line 26495 "./grammar/grammar_out.cpp"
    break;

  case 937: /* a_expr: a_expr IS UNKNOWN  */
#line 2470 "./grammar/statements/select.y"
                                {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[-2].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)b;
				}
#line 26507 "./grammar/grammar_out.cpp"
    break;

  case 938: /* a_expr: a_expr IS NOT UNKNOWN  */
#line 2478 "./grammar/statements/select.y"
                                {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[-2]);
					(yyval.node) = (PGNode *)b;
				}
#line 26519 "./grammar/grammar_out.cpp"
    break;

  case 939: /* a_expr: a_expr IS DISTINCT FROM a_expr  */
#line 2486 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[-4].node), (yyvsp[0].node), (yylsp[-3]));
				}
#line 26527 "./grammar/grammar_out.cpp"
    break;

  case 940: /* a_expr: a_expr IS NOT DISTINCT FROM a_expr  */
#line 2490 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4]));
				}
#line 26535 "./grammar/grammar_out.cpp"
    break;

  case 941: /* a_expr: a_expr IS OF '(' type_list ')'  */
#line 2494 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[-5].node), (PGNode *) (yyvsp[-1].list), (yylsp[-4]));
				}
#line 26543 "./grammar/grammar_out.cpp"
    break;

  case 942: /* a_expr: a_expr IS NOT OF '(' type_list ')'  */
#line 2498 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[-6].node), (PGNode *) (yyvsp[-1].list), (yylsp[-5]));
				}
#line 26551 "./grammar/grammar_out.cpp"
    break;

  case 943: /* a_expr: a_expr BETWEEN opt_asymmetric b_expr AND a_expr  */
#line 2502 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[-5].node),
												   (PGNode *) list_make2((yyvsp[-2].node), (yyvsp[0].node)),
												   (yylsp[-4]));
				}
#line 26563 "./grammar/grammar_out.cpp"
    break;

  case 944: /* a_expr: a_expr NOT_LA BETWEEN opt_asymmetric b_expr AND a_expr  */
#line 2510 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[-6].node),
												   (PGNode *) list_make2((yyvsp[-2].node), (yyvsp[0].node)),
												   (yylsp[-5]));
				}
#line 26575 "./grammar/grammar_out.cpp"
    break;

  case 945: /* a_expr: a_expr BETWEEN SYMMETRIC b_expr AND a_expr  */
#line 2518 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[-5].node),
												   (PGNode *) list_make2((yyvsp[-2].node), (yyvsp[0].node)),
												   (yylsp[-4]));
				}
#line 26587 "./grammar/grammar_out.cpp"
    break;

  case 946: /* a_expr: a_expr NOT_LA BETWEEN SYMMETRIC b_expr AND a_expr  */
#line 2526 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[-6].node),
												   (PGNode *) list_make2((yyvsp[-2].node), (yyvsp[0].node)),
												   (yylsp[-5]));
				}
#line 26599 "./grammar/grammar_out.cpp"
    break;

  case 947: /* a_expr: a_expr IN_P in_expr  */
#line 2534 "./grammar/statements/select.y"
                                {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[0].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[0].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[-2].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[-1]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
					}
				}
#line 26623 "./grammar/grammar_out.cpp"
    break;

  case 948: /* a_expr: a_expr NOT_LA IN_P in_expr  */
#line 2554 "./grammar/statements/select.y"
                                {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[0].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[0].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[-3].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[-2]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[-2]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2]));
					}
				}
#line 26649 "./grammar/grammar_out.cpp"
    break;

  case 949: /* a_expr: a_expr subquery_Op sub_type select_with_parens  */
#line 2576 "./grammar/statements/select.y"
                                {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[-1].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[-3].node);
					n->operName = (yyvsp[-2].list);
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[-2]);
					(yyval.node) = (PGNode *)n;
				}
#line 26664 "./grammar/grammar_out.cpp"
    break;

  case 950: /* a_expr: a_expr subquery_Op sub_type '(' a_expr ')'  */
#line 2587 "./grammar/statements/select.y"
                                {
					if ((yyvsp[-3].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[-4].list), (yyvsp[-5].node), (yyvsp[-1].node), (yylsp[-4]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[-4].list), (yyvsp[-5].node), (yyvsp[-1].node), (yylsp[-4]));
				}
#line 26675 "./grammar/grammar_out.cpp"
    break;

  case 951: /* a_expr: DEFAULT  */
#line 2594 "./grammar/statements/select.y"
                                {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[0]);
					(yyval.node) = (PGNode *)n;
				}
#line 26693 "./grammar/grammar_out.cpp"
    break;

  case 952: /* a_expr: '*' COLUMNS '(' a_expr ')'  */
#line 2608 "./grammar/statements/select.y"
                                {
					PGAStar *star = makeNode(PGAStar);
					star->expr = (yyvsp[-1].node);
					star->columns = true;
					star->unpacked = true;
					star->location = (yylsp[-4]);
					(yyval.node) = (PGNode *) star;
				}
#line 26706 "./grammar/grammar_out.cpp"
    break;

  case 953: /* a_expr: COLUMNS '(' a_expr ')'  */
#line 2617 "./grammar/statements/select.y"
                                {
					PGAStar *star = makeNode(PGAStar);
					star->expr = (yyvsp[-1].node);
					star->columns = true;
					star->location = (yylsp[-3]);
					(yyval.node) = (PGNode *) star;
				}
#line 26718 "./grammar/grammar_out.cpp"
    break;

  case 954: /* a_expr: '*' opt_except_list opt_replace_list opt_rename_list  */
#line 2625 "./grammar/statements/select.y"
                                {
					PGAStar *star = makeNode(PGAStar);
					star->except_list = (yyvsp[-2].list);
					star->replace_list = (yyvsp[-1].list);
					star->rename_list = (yyvsp[0].list);
					star->location = (yylsp[-3]);
					(yyval.node) = (PGNode *) star;
				}
#line 26731 "./grammar/grammar_out.cpp"
    break;

  case 955: /* a_expr: ColId '.' '*' opt_except_list opt_replace_list opt_rename_list  */
#line 2634 "./grammar/statements/select.y"
                                {
					PGAStar *star = makeNode(PGAStar);
					star->relation = (yyvsp[-5].str);
					star->except_list = (yyvsp[-2].list);
					star->replace_list = (yyvsp[-1].list);
					star->rename_list = (yyvsp[0].list);
					star->location = (yylsp[-5]);
					(yyval.node) = (PGNode *) star;
				}
#line 26745 "./grammar/grammar_out.cpp"
    break;

  case 956: /* b_expr: c_expr  */
#line 2655 "./grammar/statements/select.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 26751 "./grammar/grammar_out.cpp"
    break;

  case 957: /* b_expr: b_expr TYPECAST Typename  */
#line 2657 "./grammar/statements/select.y"
                                { (yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), 0, (yylsp[-1])); }
#line 26757 "./grammar/grammar_out.cpp"
    break;

  case 958: /* b_expr: '+' b_expr  */
#line 2659 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 26763 "./grammar/grammar_out.cpp"
    break;

  case 959: /* b_expr: '-' b_expr  */
#line 2661 "./grammar/statements/select.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 26769 "./grammar/grammar_out.cpp"
    break;

  case 960: /* b_expr: b_expr '+' b_expr  */
#line 2663 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26775 "./grammar/grammar_out.cpp"
    break;

  case 961: /* b_expr: b_expr '-' b_expr  */
#line 2665 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26781 "./grammar/grammar_out.cpp"
    break;

  case 962: /* b_expr: b_expr '*' b_expr  */
#line 2667 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26787 "./grammar/grammar_out.cpp"
    break;

  case 963: /* b_expr: b_expr '/' b_expr  */
#line 2669 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26793 "./grammar/grammar_out.cpp"
    break;

  case 964: /* b_expr: b_expr INTEGER_DIVISION b_expr  */
#line 2671 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "//", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26799 "./grammar/grammar_out.cpp"
    break;

  case 965: /* b_expr: b_expr '%' b_expr  */
#line 2673 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26805 "./grammar/grammar_out.cpp"
    break;

  case 966: /* b_expr: b_expr '^' b_expr  */
#line 2675 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26811 "./grammar/grammar_out.cpp"
    break;

  case 967: /* b_expr: b_expr POWER_OF b_expr  */
#line 2677 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26817 "./grammar/grammar_out.cpp"
    break;

  case 968: /* b_expr: b_expr '<' b_expr  */
#line 2679 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26823 "./grammar/grammar_out.cpp"
    break;

  case 969: /* b_expr: b_expr '>' b_expr  */
#line 2681 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26829 "./grammar/grammar_out.cpp"
    break;

  case 970: /* b_expr: b_expr '=' b_expr  */
#line 2683 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26835 "./grammar/grammar_out.cpp"
    break;

  case 971: /* b_expr: b_expr LESS_EQUALS b_expr  */
#line 2685 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26841 "./grammar/grammar_out.cpp"
    break;

  case 972: /* b_expr: b_expr GREATER_EQUALS b_expr  */
#line 2687 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26847 "./grammar/grammar_out.cpp"
    break;

  case 973: /* b_expr: b_expr NOT_EQUALS b_expr  */
#line 2689 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26853 "./grammar/grammar_out.cpp"
    break;

  case 974: /* b_expr: b_expr qual_Op b_expr  */
#line 2691 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[-1].list), (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 26859 "./grammar/grammar_out.cpp"
    break;

  case 975: /* b_expr: qual_Op b_expr  */
#line 2693 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[-1].list), NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 26865 "./grammar/grammar_out.cpp"
    break;

  case 976: /* b_expr: b_expr qual_Op  */
#line 2695 "./grammar/statements/select.y"
                                { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[0].list), (yyvsp[-1].node), NULL, (yylsp[0])); }
#line 26871 "./grammar/grammar_out.cpp"
    break;

  case 977: /* b_expr: b_expr IS DISTINCT FROM b_expr  */
#line 2697 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[-4].node), (yyvsp[0].node), (yylsp[-3]));
				}
#line 26879 "./grammar/grammar_out.cpp"
    break;

  case 978: /* b_expr: b_expr IS NOT DISTINCT FROM b_expr  */
#line 2701 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4]));
				}
#line 26887 "./grammar/grammar_out.cpp"
    break;

  case 979: /* b_expr: b_expr IS OF '(' type_list ')'  */
#line 2705 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[-5].node), (PGNode *) (yyvsp[-1].list), (yylsp[-4]));
				}
#line 26895 "./grammar/grammar_out.cpp"
    break;

  case 980: /* b_expr: b_expr IS NOT OF '(' type_list ')'  */
#line 2709 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[-6].node), (PGNode *) (yyvsp[-1].list), (yylsp[-5]));
				}
#line 26903 "./grammar/grammar_out.cpp"
    break;

  case 982: /* c_expr: indirection_expr_or_a_expr opt_extended_indirection  */
#line 2724 "./grammar/statements/select.y"
                                {
					if ((yyvsp[0].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) (yyvsp[-1].node);
						n->indirection = check_indirection((yyvsp[0].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) (yyvsp[-1].node);
				}
#line 26919 "./grammar/grammar_out.cpp"
    break;

  case 983: /* d_expr: columnref_opt_indirection  */
#line 2737 "./grammar/statements/select.y"
                                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 26925 "./grammar/grammar_out.cpp"
    break;

  case 984: /* d_expr: AexprConst  */
#line 2738 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 26931 "./grammar/grammar_out.cpp"
    break;

  case 985: /* d_expr: select_with_parens  */
#line 2740 "./grammar/statements/select.y"
                                {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[0]);
					(yyval.node) = (PGNode *)n;
				}
#line 26946 "./grammar/grammar_out.cpp"
    break;

  case 986: /* d_expr: select_with_parens indirection  */
#line 2751 "./grammar/statements/select.y"
                                {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[-1].node);
					n->location = (yylsp[-1]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				}
#line 26974 "./grammar/grammar_out.cpp"
    break;

  case 987: /* d_expr: EXISTS select_with_parens  */
#line 2775 "./grammar/statements/select.y"
                                {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *)n;
				}
#line 26989 "./grammar/grammar_out.cpp"
    break;

  case 988: /* d_expr: grouping_or_grouping_id '(' expr_list_opt_comma ')'  */
#line 2786 "./grammar/statements/select.y"
                          {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[-1].list);
				  g->location = (yylsp[-3]);
				  (yyval.node) = (PGNode *)g;
			  }
#line 27000 "./grammar/grammar_out.cpp"
    break;

  case 989: /* indirection_expr_or_a_expr: '(' a_expr ')'  */
#line 2796 "./grammar/statements/select.y"
                                {
					(yyval.node) = (yyvsp[-1].node);
				}
#line 27008 "./grammar/grammar_out.cpp"
    break;

  case 990: /* indirection_expr_or_a_expr: indirection_expr  */
#line 2800 "./grammar/statements/select.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 27016 "./grammar/grammar_out.cpp"
    break;

  case 991: /* indirection_expr_or_a_expr: row  */
#line 2803 "./grammar/statements/select.y"
                              {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[0].list), (yylsp[0]));
				(yyval.node) = (PGNode *) n;
			}
#line 27025 "./grammar/grammar_out.cpp"
    break;

  case 992: /* param_expr: '?'  */
#line 2811 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeParamRef(0, (yylsp[0]));
				}
#line 27033 "./grammar/grammar_out.cpp"
    break;

  case 993: /* param_expr: PARAM  */
#line 2815 "./grammar/statements/select.y"
                                {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[0].ival);
					p->location = (yylsp[0]);
					(yyval.node) = (PGNode *) p;
				}
#line 27044 "./grammar/grammar_out.cpp"
    break;

  case 994: /* param_expr: '$' ColLabel  */
#line 2822 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeNamedParamRef((yyvsp[0].str), (yylsp[-1]));
				}
#line 27052 "./grammar/grammar_out.cpp"
    break;

  case 1002: /* indirection_expr: ARRAY select_with_parens  */
#line 2836 "./grammar/statements/select.y"
                                {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_ARRAY_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NULL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[0]);
					(yyval.node) = (PGNode *)n;
				}
#line 27067 "./grammar/grammar_out.cpp"
    break;

  case 1003: /* indirection_expr: ARRAY '[' opt_expr_list_opt_comma ']'  */
#line 2846 "./grammar/statements/select.y"
                                                                {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[-1].list), (yylsp[-3]));
				(yyval.node) = (PGNode *) n;
			}
#line 27077 "./grammar/grammar_out.cpp"
    break;

  case 1004: /* indirection_expr: '#' ICONST  */
#line 2852 "./grammar/statements/select.y"
                                {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[0].ival);
					n->location = (yylsp[-1]);
					(yyval.node) = (PGNode *) n;
				}
#line 27088 "./grammar/grammar_out.cpp"
    break;

  case 1005: /* list_expr: '[' opt_expr_list_opt_comma ']'  */
#line 2860 "./grammar/statements/select.y"
                                            {
                PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[-1].list), (yylsp[-1]));
                (yyval.node) = (PGNode *) n;
            }
#line 27097 "./grammar/grammar_out.cpp"
    break;

  case 1006: /* struct_expr: '{' dict_arguments_opt_comma '}'  */
#line 2867 "./grammar/statements/select.y"
                                {
					PGFuncCall *f = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[-1].list), (yylsp[-1]));
					(yyval.node) = (PGNode *) f;
				}
#line 27106 "./grammar/grammar_out.cpp"
    break;

  case 1007: /* map_expr: MAP '{' opt_map_arguments_opt_comma '}'  */
#line 2874 "./grammar/statements/select.y"
                {
                    PGList *key_list = NULL;
                    PGList *value_list = NULL;
                    PGListCell *lc;
                    PGList *entry_list = (yyvsp[-1].list);
                    foreach(lc, entry_list)
                    {
                        PGList *l = (PGList *) lc->data.ptr_value;
                        key_list = lappend(key_list, (PGNode *) l->head->data.ptr_value);
                        value_list = lappend(value_list, (PGNode *) l->tail->data.ptr_value);
                    }
                    PGNode *keys   = (PGNode *) makeFuncCall(SystemFuncName("list_value"), key_list, (yylsp[-1]));
                    PGNode *values = (PGNode *) makeFuncCall(SystemFuncName("list_value"), value_list, (yylsp[-1]));
                    PGFuncCall *f = makeFuncCall(SystemFuncName("map"), list_make2(keys, values), (yylsp[-1]));
                    (yyval.node) = (PGNode *) f;
                }
#line 27127 "./grammar/grammar_out.cpp"
    break;

  case 1008: /* func_application: func_name '(' ')'  */
#line 2894 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[-2].list), NIL, (yylsp[-2]));
				}
#line 27135 "./grammar/grammar_out.cpp"
    break;

  case 1009: /* func_application: func_name '(' func_arg_list opt_sort_clause opt_ignore_nulls ')'  */
#line 2898 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall((yyvsp[-5].list), (yyvsp[-3].list), (yylsp[-5]));
					n->agg_order = (yyvsp[-2].list);
					n->agg_ignore_nulls = (yyvsp[-1].ignorenulls);
					(yyval.node) = (PGNode *)n;
				}
#line 27146 "./grammar/grammar_out.cpp"
    break;

  case 1010: /* func_application: func_name '(' VARIADIC func_arg_expr opt_sort_clause opt_ignore_nulls ')'  */
#line 2905 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall((yyvsp[-6].list), list_make1((yyvsp[-3].node)), (yylsp[-6]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[-2].list);
					n->agg_ignore_nulls = (yyvsp[-1].ignorenulls);
					(yyval.node) = (PGNode *)n;
				}
#line 27158 "./grammar/grammar_out.cpp"
    break;

  case 1011: /* func_application: func_name '(' func_arg_list ',' VARIADIC func_arg_expr opt_sort_clause opt_ignore_nulls ')'  */
#line 2913 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall((yyvsp[-8].list), lappend((yyvsp[-6].list), (yyvsp[-3].node)), (yylsp[-8]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[-2].list);
					n->agg_ignore_nulls = (yyvsp[-1].ignorenulls);
					(yyval.node) = (PGNode *)n;
				}
#line 27170 "./grammar/grammar_out.cpp"
    break;

  case 1012: /* func_application: func_name '(' ALL func_arg_list opt_sort_clause opt_ignore_nulls ')'  */
#line 2921 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall((yyvsp[-6].list), (yyvsp[-3].list), (yylsp[-6]));
					n->agg_order = (yyvsp[-2].list);
					n->agg_ignore_nulls = (yyvsp[-1].ignorenulls);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				}
#line 27185 "./grammar/grammar_out.cpp"
    break;

  case 1013: /* func_application: func_name '(' DISTINCT func_arg_list opt_sort_clause opt_ignore_nulls ')'  */
#line 2932 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = makeFuncCall((yyvsp[-6].list), (yyvsp[-3].list), (yylsp[-6]));
					n->agg_order = (yyvsp[-2].list);
					n->agg_ignore_nulls = (yyvsp[-1].ignorenulls);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				}
#line 27197 "./grammar/grammar_out.cpp"
    break;

  case 1014: /* func_expr: func_application within_group_clause filter_clause export_clause over_clause  */
#line 2952 "./grammar/statements/select.y"
                                {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[-4].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[-3].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[-3]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[-3]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[-3]))));
						n->agg_order = (yyvsp[-3].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[-2].node);
					n->export_state = (yyvsp[-1].boolean);
					n->over = (yyvsp[0].windef);
					(yyval.node) = (PGNode *) n;
				}
#line 27237 "./grammar/grammar_out.cpp"
    break;

  case 1015: /* func_expr: func_expr_common_subexpr  */
#line 2988 "./grammar/statements/select.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 27243 "./grammar/grammar_out.cpp"
    break;

  case 1016: /* func_expr_windowless: func_application  */
#line 2998 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 27249 "./grammar/grammar_out.cpp"
    break;

  case 1017: /* func_expr_windowless: func_expr_common_subexpr  */
#line 2999 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 27255 "./grammar/grammar_out.cpp"
    break;

  case 1018: /* func_expr_common_subexpr: COLLATION FOR '(' a_expr ')'  */
#line 3007 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[-1].node)),
											   (yylsp[-4]));
				}
#line 27265 "./grammar/grammar_out.cpp"
    break;

  case 1019: /* func_expr_common_subexpr: CAST '(' a_expr AS Typename ')'  */
#line 3013 "./grammar/statements/select.y"
                                { (yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[-1].typnam), 0, (yylsp[-5])); }
#line 27271 "./grammar/grammar_out.cpp"
    break;

  case 1020: /* func_expr_common_subexpr: TRY_CAST '(' a_expr AS Typename ')'  */
#line 3015 "./grammar/statements/select.y"
                                { (yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[-1].typnam), 1, (yylsp[-5])); }
#line 27277 "./grammar/grammar_out.cpp"
    break;

  case 1021: /* func_expr_common_subexpr: EXTRACT '(' extract_list ')'  */
#line 3017 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 27285 "./grammar/grammar_out.cpp"
    break;

  case 1022: /* func_expr_common_subexpr: OVERLAY '(' overlay_list ')'  */
#line 3021 "./grammar/statements/select.y"
                                {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 27298 "./grammar/grammar_out.cpp"
    break;

  case 1023: /* func_expr_common_subexpr: POSITION '(' position_list ')'  */
#line 3030 "./grammar/statements/select.y"
                                {
					/* position(A in B) is converted to position_inverse(A, B) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("__internal_position_operator"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 27307 "./grammar/grammar_out.cpp"
    break;

  case 1024: /* func_expr_common_subexpr: SUBSTRING '(' substr_list ')'  */
#line 3035 "./grammar/statements/select.y"
                                {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 27318 "./grammar/grammar_out.cpp"
    break;

  case 1025: /* func_expr_common_subexpr: TREAT '(' a_expr AS Typename ')'  */
#line 3042 "./grammar/statements/select.y"
                                {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[-1].typnam)->names))->val.str),
												list_make1((yyvsp[-3].node)),
												(yylsp[-5]));
				}
#line 27337 "./grammar/grammar_out.cpp"
    break;

  case 1026: /* func_expr_common_subexpr: TRIM '(' BOTH trim_list ')'  */
#line 3057 "./grammar/statements/select.y"
                                {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 27348 "./grammar/grammar_out.cpp"
    break;

  case 1027: /* func_expr_common_subexpr: TRIM '(' LEADING trim_list ')'  */
#line 3064 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 27356 "./grammar/grammar_out.cpp"
    break;

  case 1028: /* func_expr_common_subexpr: TRIM '(' TRAILING trim_list ')'  */
#line 3068 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 27364 "./grammar/grammar_out.cpp"
    break;

  case 1029: /* func_expr_common_subexpr: TRIM '(' trim_list ')'  */
#line 3072 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 27372 "./grammar/grammar_out.cpp"
    break;

  case 1030: /* func_expr_common_subexpr: NULLIF '(' a_expr ',' a_expr ')'  */
#line 3076 "./grammar/statements/select.y"
                                {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[-3].node), (yyvsp[-1].node), (yylsp[-5]));
				}
#line 27380 "./grammar/grammar_out.cpp"
    break;

  case 1031: /* func_expr_common_subexpr: COALESCE '(' expr_list_opt_comma ')'  */
#line 3080 "./grammar/statements/select.y"
                                {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[-1].list);
					c->location = (yylsp[-3]);
					(yyval.node) = (PGNode *)c;
				}
#line 27391 "./grammar/grammar_out.cpp"
    break;

  case 1032: /* list_comprehension_lhs: columnrefList  */
#line 3090 "./grammar/statements/select.y"
                {
			PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[0].list), (yylsp[0]));
			(yyval.node) = (PGNode *) n;
		}
#line 27400 "./grammar/grammar_out.cpp"
    break;

  case 1033: /* list_comprehension: '[' a_expr FOR list_comprehension_lhs IN_P a_expr ']'  */
#line 3098 "./grammar/statements/select.y"
                                {
					PGLambdaFunction *lambda = makeNode(PGLambdaFunction);
					lambda->lhs = (yyvsp[-3].node);
					lambda->rhs = (yyvsp[-5].node);
					lambda->location = (yylsp[-6]);
					PGFuncCall *n = makeFuncCall(SystemFuncName("list_apply"), list_make2((yyvsp[-1].node), lambda), (yylsp[-6]));
					(yyval.node) = (PGNode *) n;
				}
#line 27413 "./grammar/grammar_out.cpp"
    break;

  case 1034: /* list_comprehension: '[' a_expr FOR list_comprehension_lhs IN_P c_expr IF_P a_expr ']'  */
#line 3107 "./grammar/statements/select.y"
                                {
					PGLambdaFunction *lambda = makeNode(PGLambdaFunction);
					lambda->lhs = (yyvsp[-5].node);
					lambda->rhs = (yyvsp[-7].node);
					lambda->location = (yylsp[-8]);

					PGLambdaFunction *lambda_filter = makeNode(PGLambdaFunction);
					lambda_filter->lhs = (yyvsp[-5].node);
					lambda_filter->rhs = (yyvsp[-1].node);
					lambda_filter->location = (yylsp[-1]);
					PGFuncCall *filter = makeFuncCall(SystemFuncName("list_filter"), list_make2((yyvsp[-3].node), lambda_filter), (yylsp[-8]));
					PGFuncCall *n = makeFuncCall(SystemFuncName("list_apply"), list_make2(filter, lambda), (yylsp[-8]));
					(yyval.node) = (PGNode *) n;
				}
#line 27432 "./grammar/grammar_out.cpp"
    break;

  case 1035: /* within_group_clause: WITHIN GROUP_P '(' sort_clause ')'  */
#line 3128 "./grammar/statements/select.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 27438 "./grammar/grammar_out.cpp"
    break;

  case 1036: /* within_group_clause: %empty  */
#line 3129 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 27444 "./grammar/grammar_out.cpp"
    break;

  case 1037: /* filter_clause: FILTER '(' WHERE a_expr ')'  */
#line 3133 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 27450 "./grammar/grammar_out.cpp"
    break;

  case 1038: /* filter_clause: FILTER '(' a_expr ')'  */
#line 3134 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 27456 "./grammar/grammar_out.cpp"
    break;

  case 1039: /* filter_clause: %empty  */
#line 3135 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = NULL; }
#line 27462 "./grammar/grammar_out.cpp"
    break;

  case 1040: /* export_clause: EXPORT_STATE  */
#line 3139 "./grammar/statements/select.y"
                                                                                { (yyval.boolean) = true; }
#line 27468 "./grammar/grammar_out.cpp"
    break;

  case 1041: /* export_clause: %empty  */
#line 3140 "./grammar/statements/select.y"
                                                                                                { (yyval.boolean) = false; }
#line 27474 "./grammar/grammar_out.cpp"
    break;

  case 1042: /* window_clause: WINDOW window_definition_list  */
#line 3147 "./grammar/statements/select.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 27480 "./grammar/grammar_out.cpp"
    break;

  case 1043: /* window_clause: %empty  */
#line 3148 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 27486 "./grammar/grammar_out.cpp"
    break;

  case 1044: /* window_definition_list: window_definition  */
#line 3152 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].windef)); }
#line 27492 "./grammar/grammar_out.cpp"
    break;

  case 1045: /* window_definition_list: window_definition_list ',' window_definition  */
#line 3154 "./grammar/statements/select.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].windef)); }
#line 27498 "./grammar/grammar_out.cpp"
    break;

  case 1046: /* window_definition: ColId AS window_specification  */
#line 3159 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = (yyvsp[0].windef);
					n->name = (yyvsp[-2].str);
					(yyval.windef) = n;
				}
#line 27508 "./grammar/grammar_out.cpp"
    break;

  case 1047: /* over_clause: OVER window_specification  */
#line 3167 "./grammar/statements/select.y"
                                { (yyval.windef) = (yyvsp[0].windef); }
#line 27514 "./grammar/grammar_out.cpp"
    break;

  case 1048: /* over_clause: OVER ColId  */
#line 3169 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[0].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[0]);
					(yyval.windef) = n;
				}
#line 27531 "./grammar/grammar_out.cpp"
    break;

  case 1049: /* over_clause: %empty  */
#line 3182 "./grammar/statements/select.y"
                                { (yyval.windef) = NULL; }
#line 27537 "./grammar/grammar_out.cpp"
    break;

  case 1050: /* window_specification: '(' opt_existing_window_name opt_partition_clause opt_sort_clause opt_frame_clause ')'  */
#line 3187 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[-4].str);
					n->partitionClause = (yyvsp[-3].list);
					n->orderClause = (yyvsp[-2].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[-1].windef)->frameOptions;
					n->startOffset = (yyvsp[-1].windef)->startOffset;
					n->endOffset = (yyvsp[-1].windef)->endOffset;
					n->location = (yylsp[-5]);
					(yyval.windef) = n;
				}
#line 27555 "./grammar/grammar_out.cpp"
    break;

  case 1051: /* opt_existing_window_name: ColId  */
#line 3212 "./grammar/statements/select.y"
                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 27561 "./grammar/grammar_out.cpp"
    break;

  case 1052: /* opt_existing_window_name: %empty  */
#line 3213 "./grammar/statements/select.y"
                                                                                        { (yyval.str) = NULL; }
#line 27567 "./grammar/grammar_out.cpp"
    break;

  case 1053: /* opt_partition_clause: PARTITION BY expr_list  */
#line 3216 "./grammar/statements/select.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 27573 "./grammar/grammar_out.cpp"
    break;

  case 1054: /* opt_partition_clause: %empty  */
#line 3217 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 27579 "./grammar/grammar_out.cpp"
    break;

  case 1055: /* opt_frame_clause: RANGE frame_extent opt_window_exclusion_clause  */
#line 3226 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = (yyvsp[-1].windef);

					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					n->frameOptions |= (yyvsp[0].ival);
					(yyval.windef) = n;
				}
#line 27591 "./grammar/grammar_out.cpp"
    break;

  case 1056: /* opt_frame_clause: ROWS frame_extent opt_window_exclusion_clause  */
#line 3234 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = (yyvsp[-1].windef);

					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					n->frameOptions |= (yyvsp[0].ival);
					(yyval.windef) = n;
				}
#line 27603 "./grammar/grammar_out.cpp"
    break;

  case 1057: /* opt_frame_clause: GROUPS frame_extent opt_window_exclusion_clause  */
#line 3242 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = (yyvsp[-1].windef);

					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_GROUPS;
					n->frameOptions |= (yyvsp[0].ival);
					(yyval.windef) = n;
				}
#line 27615 "./grammar/grammar_out.cpp"
    break;

  case 1058: /* opt_frame_clause: %empty  */
#line 3250 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = makeNode(PGWindowDef);

					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 27628 "./grammar/grammar_out.cpp"
    break;

  case 1059: /* frame_extent: frame_bound  */
#line 3261 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = (yyvsp[0].windef);

					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[0]))));
					if (n->frameOptions & FRAMEOPTION_START_OFFSET_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[0]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				}
#line 27650 "./grammar/grammar_out.cpp"
    break;

  case 1060: /* frame_extent: BETWEEN frame_bound AND frame_bound  */
#line 3279 "./grammar/statements/select.y"
                                {
					PGWindowDef *n1 = (yyvsp[-2].windef);
					PGWindowDef *n2 = (yyvsp[0].windef);

					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[-2]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[0]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_OFFSET_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[0]))));
					if ((frameOptions & FRAMEOPTION_START_OFFSET_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_OFFSET_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[0]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				}
#line 27692 "./grammar/grammar_out.cpp"
    break;

  case 1061: /* frame_bound: UNBOUNDED PRECEDING  */
#line 3325 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = makeNode(PGWindowDef);

					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 27705 "./grammar/grammar_out.cpp"
    break;

  case 1062: /* frame_bound: UNBOUNDED FOLLOWING  */
#line 3334 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = makeNode(PGWindowDef);

					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 27718 "./grammar/grammar_out.cpp"
    break;

  case 1063: /* frame_bound: CURRENT_P ROW  */
#line 3343 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = makeNode(PGWindowDef);

					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 27731 "./grammar/grammar_out.cpp"
    break;

  case 1064: /* frame_bound: a_expr PRECEDING  */
#line 3352 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = makeNode(PGWindowDef);

					n->frameOptions = FRAMEOPTION_START_OFFSET_PRECEDING;
					n->startOffset = (yyvsp[-1].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 27744 "./grammar/grammar_out.cpp"
    break;

  case 1065: /* frame_bound: a_expr FOLLOWING  */
#line 3361 "./grammar/statements/select.y"
                                {
					PGWindowDef *n = makeNode(PGWindowDef);

					n->frameOptions = FRAMEOPTION_START_OFFSET_FOLLOWING;
					n->startOffset = (yyvsp[-1].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 27757 "./grammar/grammar_out.cpp"
    break;

  case 1066: /* opt_window_exclusion_clause: EXCLUDE CURRENT_P ROW  */
#line 3372 "./grammar/statements/select.y"
                                                { (yyval.ival) = FRAMEOPTION_EXCLUDE_CURRENT_ROW; }
#line 27763 "./grammar/grammar_out.cpp"
    break;

  case 1067: /* opt_window_exclusion_clause: EXCLUDE GROUP_P  */
#line 3373 "./grammar/statements/select.y"
                                                        { (yyval.ival) = FRAMEOPTION_EXCLUDE_GROUP; }
#line 27769 "./grammar/grammar_out.cpp"
    break;

  case 1068: /* opt_window_exclusion_clause: EXCLUDE TIES  */
#line 3374 "./grammar/statements/select.y"
                                                        { (yyval.ival) = FRAMEOPTION_EXCLUDE_TIES; }
#line 27775 "./grammar/grammar_out.cpp"
    break;

  case 1069: /* opt_window_exclusion_clause: EXCLUDE NO OTHERS  */
#line 3375 "./grammar/statements/select.y"
                                                        { (yyval.ival) = 0; }
#line 27781 "./grammar/grammar_out.cpp"
    break;

  case 1070: /* opt_window_exclusion_clause: %empty  */
#line 3376 "./grammar/statements/select.y"
                                                                { (yyval.ival) = 0; }
#line 27787 "./grammar/grammar_out.cpp"
    break;

  case 1071: /* qualified_row: ROW '(' expr_list_opt_comma ')'  */
#line 3390 "./grammar/statements/select.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 27793 "./grammar/grammar_out.cpp"
    break;

  case 1072: /* qualified_row: ROW '(' ')'  */
#line 3391 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = NIL; }
#line 27799 "./grammar/grammar_out.cpp"
    break;

  case 1073: /* row: qualified_row  */
#line 3394 "./grammar/statements/select.y"
                                                                                { (yyval.list) = (yyvsp[0].list);}
#line 27805 "./grammar/grammar_out.cpp"
    break;

  case 1074: /* row: '(' expr_list ',' a_expr ')'  */
#line 3395 "./grammar/statements/select.y"
                                                                        { (yyval.list) = lappend((yyvsp[-3].list), (yyvsp[-1].node)); }
#line 27811 "./grammar/grammar_out.cpp"
    break;

  case 1075: /* dict_arg: ColIdOrString ':' a_expr  */
#line 3399 "./grammar/statements/select.y"
                                                                                {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[-2].str);
		na->arg = (PGExpr *) (yyvsp[0].node);
		na->argnumber = -1;
		na->location = (yylsp[-2]);
		(yyval.node) = (PGNode *) na;
	}
#line 27824 "./grammar/grammar_out.cpp"
    break;

  case 1076: /* dict_arguments: dict_arg  */
#line 3409 "./grammar/statements/select.y"
                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 27830 "./grammar/grammar_out.cpp"
    break;

  case 1077: /* dict_arguments: dict_arguments ',' dict_arg  */
#line 3410 "./grammar/statements/select.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 27836 "./grammar/grammar_out.cpp"
    break;

  case 1078: /* dict_arguments_opt_comma: dict_arguments  */
#line 3414 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 27842 "./grammar/grammar_out.cpp"
    break;

  case 1079: /* dict_arguments_opt_comma: dict_arguments ','  */
#line 3415 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 27848 "./grammar/grammar_out.cpp"
    break;

  case 1080: /* map_arg: a_expr ':' a_expr  */
#line 3420 "./grammar/statements/select.y"
                        {
				(yyval.list) = list_make2((yyvsp[-2].node), (yyvsp[0].node));
			}
#line 27856 "./grammar/grammar_out.cpp"
    break;

  case 1081: /* map_arguments: map_arg  */
#line 3426 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 27862 "./grammar/grammar_out.cpp"
    break;

  case 1082: /* map_arguments: map_arguments ',' map_arg  */
#line 3427 "./grammar/statements/select.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 27868 "./grammar/grammar_out.cpp"
    break;

  case 1083: /* map_arguments_opt_comma: map_arguments  */
#line 3432 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 27874 "./grammar/grammar_out.cpp"
    break;

  case 1084: /* map_arguments_opt_comma: map_arguments ','  */
#line 3433 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 27880 "./grammar/grammar_out.cpp"
    break;

  case 1085: /* opt_map_arguments_opt_comma: map_arguments_opt_comma  */
#line 3438 "./grammar/statements/select.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 27886 "./grammar/grammar_out.cpp"
    break;

  case 1086: /* opt_map_arguments_opt_comma: %empty  */
#line 3439 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = NULL; }
#line 27892 "./grammar/grammar_out.cpp"
    break;

  case 1087: /* sub_type: ANY  */
#line 3442 "./grammar/statements/select.y"
                                                                                                { (yyval.subquerytype) = PG_ANY_SUBLINK; }
#line 27898 "./grammar/grammar_out.cpp"
    break;

  case 1088: /* sub_type: SOME  */
#line 3443 "./grammar/statements/select.y"
                                                                                                { (yyval.subquerytype) = PG_ANY_SUBLINK; }
#line 27904 "./grammar/grammar_out.cpp"
    break;

  case 1089: /* sub_type: ALL  */
#line 3444 "./grammar/statements/select.y"
                                                                                                { (yyval.subquerytype) = PG_ALL_SUBLINK; }
#line 27910 "./grammar/grammar_out.cpp"
    break;

  case 1090: /* all_Op: Op  */
#line 3447 "./grammar/statements/select.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 27916 "./grammar/grammar_out.cpp"
    break;

  case 1091: /* all_Op: MathOp  */
#line 3448 "./grammar/statements/select.y"
                                                                                                { (yyval.str) = (char*) (yyvsp[0].conststr); }
#line 27922 "./grammar/grammar_out.cpp"
    break;

  case 1092: /* MathOp: '+'  */
#line 3451 "./grammar/statements/select.y"
                                                                                        { (yyval.conststr) = "+"; }
#line 27928 "./grammar/grammar_out.cpp"
    break;

  case 1093: /* MathOp: '-'  */
#line 3452 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = "-"; }
#line 27934 "./grammar/grammar_out.cpp"
    break;

  case 1094: /* MathOp: '*'  */
#line 3453 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = "*"; }
#line 27940 "./grammar/grammar_out.cpp"
    break;

  case 1095: /* MathOp: '/'  */
#line 3454 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = "/"; }
#line 27946 "./grammar/grammar_out.cpp"
    break;

  case 1096: /* MathOp: INTEGER_DIVISION  */
#line 3455 "./grammar/statements/select.y"
                                                                                        { (yyval.conststr) = "//"; }
#line 27952 "./grammar/grammar_out.cpp"
    break;

  case 1097: /* MathOp: '%'  */
#line 3456 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = "%"; }
#line 27958 "./grammar/grammar_out.cpp"
    break;

  case 1098: /* MathOp: '^'  */
#line 3457 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = "^"; }
#line 27964 "./grammar/grammar_out.cpp"
    break;

  case 1099: /* MathOp: POWER_OF  */
#line 3458 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = "**"; }
#line 27970 "./grammar/grammar_out.cpp"
    break;

  case 1100: /* MathOp: '<'  */
#line 3459 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = "<"; }
#line 27976 "./grammar/grammar_out.cpp"
    break;

  case 1101: /* MathOp: '>'  */
#line 3460 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = ">"; }
#line 27982 "./grammar/grammar_out.cpp"
    break;

  case 1102: /* MathOp: '='  */
#line 3461 "./grammar/statements/select.y"
                                                                                                { (yyval.conststr) = "="; }
#line 27988 "./grammar/grammar_out.cpp"
    break;

  case 1103: /* MathOp: LESS_EQUALS  */
#line 3462 "./grammar/statements/select.y"
                                                                                        { (yyval.conststr) = "<="; }
#line 27994 "./grammar/grammar_out.cpp"
    break;

  case 1104: /* MathOp: GREATER_EQUALS  */
#line 3463 "./grammar/statements/select.y"
                                                                                        { (yyval.conststr) = ">="; }
#line 28000 "./grammar/grammar_out.cpp"
    break;

  case 1105: /* MathOp: NOT_EQUALS  */
#line 3464 "./grammar/statements/select.y"
                                                                                        { (yyval.conststr) = "<>"; }
#line 28006 "./grammar/grammar_out.cpp"
    break;

  case 1106: /* qual_Op: Op  */
#line 3468 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 28012 "./grammar/grammar_out.cpp"
    break;

  case 1107: /* qual_Op: OPERATOR '(' any_operator ')'  */
#line 3470 "./grammar/statements/select.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 28018 "./grammar/grammar_out.cpp"
    break;

  case 1108: /* qual_all_Op: all_Op  */
#line 3475 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 28024 "./grammar/grammar_out.cpp"
    break;

  case 1109: /* qual_all_Op: OPERATOR '(' any_operator ')'  */
#line 3477 "./grammar/statements/select.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 28030 "./grammar/grammar_out.cpp"
    break;

  case 1110: /* subquery_Op: all_Op  */
#line 3482 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 28036 "./grammar/grammar_out.cpp"
    break;

  case 1111: /* subquery_Op: OPERATOR '(' any_operator ')'  */
#line 3484 "./grammar/statements/select.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 28042 "./grammar/grammar_out.cpp"
    break;

  case 1112: /* subquery_Op: LIKE  */
#line 3486 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString("~~")); }
#line 28048 "./grammar/grammar_out.cpp"
    break;

  case 1113: /* subquery_Op: NOT_LA LIKE  */
#line 3488 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString("!~~")); }
#line 28054 "./grammar/grammar_out.cpp"
    break;

  case 1114: /* subquery_Op: GLOB  */
#line 3490 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString("~~~")); }
#line 28060 "./grammar/grammar_out.cpp"
    break;

  case 1115: /* subquery_Op: NOT_LA GLOB  */
#line 3492 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString("!~~~")); }
#line 28066 "./grammar/grammar_out.cpp"
    break;

  case 1116: /* subquery_Op: ILIKE  */
#line 3494 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString("~~*")); }
#line 28072 "./grammar/grammar_out.cpp"
    break;

  case 1117: /* subquery_Op: NOT_LA ILIKE  */
#line 3496 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString("!~~*")); }
#line 28078 "./grammar/grammar_out.cpp"
    break;

  case 1118: /* any_operator: all_Op  */
#line 3510 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 28084 "./grammar/grammar_out.cpp"
    break;

  case 1119: /* any_operator: ColId '.' any_operator  */
#line 3512 "./grammar/statements/select.y"
                                        { (yyval.list) = lcons(makeString((yyvsp[-2].str)), (yyvsp[0].list)); }
#line 28090 "./grammar/grammar_out.cpp"
    break;

  case 1120: /* c_expr_list: c_expr  */
#line 3517 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 28098 "./grammar/grammar_out.cpp"
    break;

  case 1121: /* c_expr_list: c_expr_list ',' c_expr  */
#line 3521 "./grammar/statements/select.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 28106 "./grammar/grammar_out.cpp"
    break;

  case 1122: /* c_expr_list_opt_comma: c_expr_list  */
#line 3528 "./grammar/statements/select.y"
                                {
					(yyval.list) = (yyvsp[0].list);
				}
#line 28114 "./grammar/grammar_out.cpp"
    break;

  case 1123: /* c_expr_list_opt_comma: c_expr_list ','  */
#line 3533 "./grammar/statements/select.y"
                                {
					(yyval.list) = (yyvsp[-1].list);
				}
#line 28122 "./grammar/grammar_out.cpp"
    break;

  case 1124: /* expr_list: a_expr  */
#line 3539 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 28130 "./grammar/grammar_out.cpp"
    break;

  case 1125: /* expr_list: expr_list ',' a_expr  */
#line 3543 "./grammar/statements/select.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 28138 "./grammar/grammar_out.cpp"
    break;

  case 1126: /* expr_list_opt_comma: expr_list  */
#line 3550 "./grammar/statements/select.y"
                                {
					(yyval.list) = (yyvsp[0].list);
				}
#line 28146 "./grammar/grammar_out.cpp"
    break;

  case 1127: /* expr_list_opt_comma: expr_list ','  */
#line 3555 "./grammar/statements/select.y"
                                {
					(yyval.list) = (yyvsp[-1].list);
				}
#line 28154 "./grammar/grammar_out.cpp"
    break;

  case 1128: /* opt_expr_list_opt_comma: expr_list_opt_comma  */
#line 3562 "./grammar/statements/select.y"
                                {
					(yyval.list) = (yyvsp[0].list);
				}
#line 28162 "./grammar/grammar_out.cpp"
    break;

  case 1129: /* opt_expr_list_opt_comma: %empty  */
#line 3566 "./grammar/statements/select.y"
                                {
					(yyval.list) = NULL;
				}
#line 28170 "./grammar/grammar_out.cpp"
    break;

  case 1130: /* func_arg_list: func_arg_expr  */
#line 3575 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 28178 "./grammar/grammar_out.cpp"
    break;

  case 1131: /* func_arg_list: func_arg_list ',' func_arg_expr  */
#line 3579 "./grammar/statements/select.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 28186 "./grammar/grammar_out.cpp"
    break;

  case 1132: /* func_arg_expr: a_expr  */
#line 3585 "./grammar/statements/select.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 28194 "./grammar/grammar_out.cpp"
    break;

  case 1133: /* func_arg_expr: param_name COLON_EQUALS a_expr  */
#line 3589 "./grammar/statements/select.y"
                                {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[-2].str);
					na->arg = (PGExpr *) (yyvsp[0].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[-2]);
					(yyval.node) = (PGNode *) na;
				}
#line 28207 "./grammar/grammar_out.cpp"
    break;

  case 1134: /* func_arg_expr: param_name EQUALS_GREATER a_expr  */
#line 3598 "./grammar/statements/select.y"
                                {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[-2].str);
					na->arg = (PGExpr *) (yyvsp[0].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[-2]);
					(yyval.node) = (PGNode *) na;
				}
#line 28220 "./grammar/grammar_out.cpp"
    break;

  case 1135: /* type_list: Typename  */
#line 3608 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].typnam)); }
#line 28226 "./grammar/grammar_out.cpp"
    break;

  case 1136: /* type_list: type_list ',' Typename  */
#line 3609 "./grammar/statements/select.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].typnam)); }
#line 28232 "./grammar/grammar_out.cpp"
    break;

  case 1137: /* extract_list: extract_arg FROM a_expr  */
#line 3614 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make2(makeStringConst((yyvsp[-2].str), (yylsp[-2])), (yyvsp[0].node));
				}
#line 28240 "./grammar/grammar_out.cpp"
    break;

  case 1138: /* extract_list: %empty  */
#line 3617 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 28246 "./grammar/grammar_out.cpp"
    break;

  case 1139: /* extract_arg: IDENT  */
#line 3624 "./grammar/statements/select.y"
                                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28252 "./grammar/grammar_out.cpp"
    break;

  case 1140: /* extract_arg: year_keyword  */
#line 3625 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "year"; }
#line 28258 "./grammar/grammar_out.cpp"
    break;

  case 1141: /* extract_arg: month_keyword  */
#line 3626 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "month"; }
#line 28264 "./grammar/grammar_out.cpp"
    break;

  case 1142: /* extract_arg: day_keyword  */
#line 3627 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "day"; }
#line 28270 "./grammar/grammar_out.cpp"
    break;

  case 1143: /* extract_arg: hour_keyword  */
#line 3628 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "hour"; }
#line 28276 "./grammar/grammar_out.cpp"
    break;

  case 1144: /* extract_arg: minute_keyword  */
#line 3629 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "minute"; }
#line 28282 "./grammar/grammar_out.cpp"
    break;

  case 1145: /* extract_arg: second_keyword  */
#line 3630 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "second"; }
#line 28288 "./grammar/grammar_out.cpp"
    break;

  case 1146: /* extract_arg: millisecond_keyword  */
#line 3631 "./grammar/statements/select.y"
                                                                                                { (yyval.str) = (char*) "millisecond"; }
#line 28294 "./grammar/grammar_out.cpp"
    break;

  case 1147: /* extract_arg: microsecond_keyword  */
#line 3632 "./grammar/statements/select.y"
                                                                                                { (yyval.str) = (char*) "microsecond"; }
#line 28300 "./grammar/grammar_out.cpp"
    break;

  case 1148: /* extract_arg: week_keyword  */
#line 3633 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "week"; }
#line 28306 "./grammar/grammar_out.cpp"
    break;

  case 1149: /* extract_arg: quarter_keyword  */
#line 3634 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "quarter"; }
#line 28312 "./grammar/grammar_out.cpp"
    break;

  case 1150: /* extract_arg: decade_keyword  */
#line 3635 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "decade"; }
#line 28318 "./grammar/grammar_out.cpp"
    break;

  case 1151: /* extract_arg: century_keyword  */
#line 3636 "./grammar/statements/select.y"
                                                                                                        { (yyval.str) = (char*) "century"; }
#line 28324 "./grammar/grammar_out.cpp"
    break;

  case 1152: /* extract_arg: millennium_keyword  */
#line 3637 "./grammar/statements/select.y"
                                                                                                { (yyval.str) = (char*) "millennium"; }
#line 28330 "./grammar/grammar_out.cpp"
    break;

  case 1153: /* extract_arg: Sconst  */
#line 3638 "./grammar/statements/select.y"
                                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28336 "./grammar/grammar_out.cpp"
    break;

  case 1154: /* overlay_list: a_expr overlay_placing substr_from substr_for  */
#line 3649 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make4((yyvsp[-3].node), (yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 28344 "./grammar/grammar_out.cpp"
    break;

  case 1155: /* overlay_list: a_expr overlay_placing substr_from  */
#line 3653 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 28352 "./grammar/grammar_out.cpp"
    break;

  case 1156: /* overlay_placing: PLACING a_expr  */
#line 3660 "./grammar/statements/select.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 28358 "./grammar/grammar_out.cpp"
    break;

  case 1157: /* position_list: b_expr IN_P b_expr  */
#line 3666 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = list_make2((yyvsp[-2].node), (yyvsp[0].node)); }
#line 28364 "./grammar/grammar_out.cpp"
    break;

  case 1158: /* position_list: %empty  */
#line 3667 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 28370 "./grammar/grammar_out.cpp"
    break;

  case 1159: /* substr_list: a_expr substr_from substr_for  */
#line 3684 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 28378 "./grammar/grammar_out.cpp"
    break;

  case 1160: /* substr_list: a_expr substr_for substr_from  */
#line 3688 "./grammar/statements/select.y"
                                {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[0].node), (yyvsp[-1].node));
				}
#line 28387 "./grammar/grammar_out.cpp"
    break;

  case 1161: /* substr_list: a_expr substr_from  */
#line 3693 "./grammar/statements/select.y"
                                {
					(yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].node));
				}
#line 28395 "./grammar/grammar_out.cpp"
    break;

  case 1162: /* substr_list: a_expr substr_for  */
#line 3697 "./grammar/statements/select.y"
                                {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[-1].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[0].node),
												 SystemTypeName("int4"), 0, -1));
				}
#line 28414 "./grammar/grammar_out.cpp"
    break;

  case 1163: /* substr_list: expr_list  */
#line 3712 "./grammar/statements/select.y"
                                {
					(yyval.list) = (yyvsp[0].list);
				}
#line 28422 "./grammar/grammar_out.cpp"
    break;

  case 1164: /* substr_list: %empty  */
#line 3716 "./grammar/statements/select.y"
                                { (yyval.list) = NIL; }
#line 28428 "./grammar/grammar_out.cpp"
    break;

  case 1165: /* substr_from: FROM a_expr  */
#line 3720 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 28434 "./grammar/grammar_out.cpp"
    break;

  case 1166: /* substr_for: FOR a_expr  */
#line 3723 "./grammar/statements/select.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 28440 "./grammar/grammar_out.cpp"
    break;

  case 1167: /* trim_list: a_expr FROM expr_list_opt_comma  */
#line 3726 "./grammar/statements/select.y"
                                                                                { (yyval.list) = lappend((yyvsp[0].list), (yyvsp[-2].node)); }
#line 28446 "./grammar/grammar_out.cpp"
    break;

  case 1168: /* trim_list: FROM expr_list_opt_comma  */
#line 3727 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 28452 "./grammar/grammar_out.cpp"
    break;

  case 1169: /* trim_list: expr_list_opt_comma  */
#line 3728 "./grammar/statements/select.y"
                                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 28458 "./grammar/grammar_out.cpp"
    break;

  case 1170: /* in_expr: select_with_parens  */
#line 3732 "./grammar/statements/select.y"
                                {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[0].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				}
#line 28469 "./grammar/grammar_out.cpp"
    break;

  case 1171: /* in_expr: '(' expr_list_opt_comma ')'  */
#line 3738 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (PGNode *)(yyvsp[-1].list); }
#line 28475 "./grammar/grammar_out.cpp"
    break;

  case 1173: /* in_expr: indirection_expr  */
#line 3740 "./grammar/statements/select.y"
                                           { (yyval.node) = (PGNode *)(yyvsp[0].node); }
#line 28481 "./grammar/grammar_out.cpp"
    break;

  case 1174: /* case_expr: CASE case_arg when_clause_list case_default END_P  */
#line 3751 "./grammar/statements/select.y"
                                {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[-3].node);
					c->args = (yyvsp[-2].list);
					c->defresult = (PGExpr *) (yyvsp[-1].node);
					c->location = (yylsp[-4]);
					(yyval.node) = (PGNode *)c;
				}
#line 28495 "./grammar/grammar_out.cpp"
    break;

  case 1175: /* when_clause_list: when_clause  */
#line 3764 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 28501 "./grammar/grammar_out.cpp"
    break;

  case 1176: /* when_clause_list: when_clause_list when_clause  */
#line 3765 "./grammar/statements/select.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 28507 "./grammar/grammar_out.cpp"
    break;

  case 1177: /* when_clause: WHEN a_expr THEN a_expr  */
#line 3770 "./grammar/statements/select.y"
                                {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[-2].node);
					w->result = (PGExpr *) (yyvsp[0].node);
					w->location = (yylsp[-3]);
					(yyval.node) = (PGNode *)w;
				}
#line 28519 "./grammar/grammar_out.cpp"
    break;

  case 1178: /* case_default: ELSE a_expr  */
#line 3780 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 28525 "./grammar/grammar_out.cpp"
    break;

  case 1179: /* case_default: %empty  */
#line 3781 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = NULL; }
#line 28531 "./grammar/grammar_out.cpp"
    break;

  case 1180: /* case_arg: a_expr  */
#line 3784 "./grammar/statements/select.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 28537 "./grammar/grammar_out.cpp"
    break;

  case 1181: /* case_arg: %empty  */
#line 3785 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = NULL; }
#line 28543 "./grammar/grammar_out.cpp"
    break;

  case 1182: /* columnrefList: columnref  */
#line 3789 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 28549 "./grammar/grammar_out.cpp"
    break;

  case 1183: /* columnrefList: columnrefList ',' columnref  */
#line 3790 "./grammar/statements/select.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 28555 "./grammar/grammar_out.cpp"
    break;

  case 1184: /* columnref: ColId  */
#line 3794 "./grammar/statements/select.y"
                {
			(yyval.node) = makeColumnRef((yyvsp[0].str), NIL, (yylsp[0]), yyscanner);
		}
#line 28563 "./grammar/grammar_out.cpp"
    break;

  case 1185: /* columnref_opt_indirection: ColId  */
#line 3800 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeColumnRef((yyvsp[0].str), NIL, (yylsp[0]), yyscanner);
				}
#line 28571 "./grammar/grammar_out.cpp"
    break;

  case 1186: /* columnref_opt_indirection: ColId indirection  */
#line 3804 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeColumnRef((yyvsp[-1].str), (yyvsp[0].list), (yylsp[-1]), yyscanner);
				}
#line 28579 "./grammar/grammar_out.cpp"
    break;

  case 1187: /* indirection_el: '[' a_expr ']'  */
#line 3811 "./grammar/statements/select.y"
                                {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[-1].node);
					(yyval.node) = (PGNode *) ai;
				}
#line 28591 "./grammar/grammar_out.cpp"
    break;

  case 1188: /* indirection_el: '[' opt_slice_bound ':' opt_slice_bound ']'  */
#line 3819 "./grammar/statements/select.y"
                                {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[-3].node);
					ai->uidx = (yyvsp[-1].node);
					(yyval.node) = (PGNode *) ai;
				}
#line 28603 "./grammar/grammar_out.cpp"
    break;

  case 1189: /* indirection_el: '[' opt_slice_bound ':' opt_slice_bound ':' opt_slice_bound ']'  */
#line 3826 "./grammar/statements/select.y"
                                                                                          {
				    	PGAIndices *ai = makeNode(PGAIndices);
				    	ai->is_slice = true;
				    	ai->lidx = (yyvsp[-5].node);
				    	ai->uidx = (yyvsp[-3].node);
				    	ai->step = (yyvsp[-1].node);
				    	(yyval.node) = (PGNode *) ai;
				}
#line 28616 "./grammar/grammar_out.cpp"
    break;

  case 1190: /* indirection_el: '[' opt_slice_bound ':' '-' ':' opt_slice_bound ']'  */
#line 3834 "./grammar/statements/select.y"
                                                                              {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[-5].node);
					ai->step = (yyvsp[-1].node);
					(yyval.node) = (PGNode *) ai;
				}
#line 28628 "./grammar/grammar_out.cpp"
    break;

  case 1191: /* opt_slice_bound: a_expr  */
#line 3844 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 28634 "./grammar/grammar_out.cpp"
    break;

  case 1192: /* opt_slice_bound: %empty  */
#line 3845 "./grammar/statements/select.y"
                                                                                                { (yyval.node) = NULL; }
#line 28640 "./grammar/grammar_out.cpp"
    break;

  case 1193: /* opt_indirection: %empty  */
#line 3850 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 28646 "./grammar/grammar_out.cpp"
    break;

  case 1194: /* opt_indirection: opt_indirection indirection_el  */
#line 3851 "./grammar/statements/select.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 28652 "./grammar/grammar_out.cpp"
    break;

  case 1195: /* opt_func_arguments: %empty  */
#line 3855 "./grammar/statements/select.y"
                                                { (yyval.list) = NULL; }
#line 28658 "./grammar/grammar_out.cpp"
    break;

  case 1196: /* opt_func_arguments: '(' ')'  */
#line 3856 "./grammar/statements/select.y"
                                                        { (yyval.list) = list_make1(NULL); }
#line 28664 "./grammar/grammar_out.cpp"
    break;

  case 1197: /* opt_func_arguments: '(' func_arg_list ')'  */
#line 3857 "./grammar/statements/select.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 28670 "./grammar/grammar_out.cpp"
    break;

  case 1198: /* extended_indirection_el: '.' attr_name opt_func_arguments  */
#line 3862 "./grammar/statements/select.y"
                                {
					if ((yyvsp[0].list)) {
						PGFuncCall *n = makeFuncCall(list_make1(makeString((yyvsp[-1].str))), (yyvsp[0].list)->head->data.ptr_value ? (yyvsp[0].list) : NULL, (yylsp[-1]));
						(yyval.node) = (PGNode *) n;
					} else {
						(yyval.node) = (PGNode *) makeString((yyvsp[-1].str));
					}
				}
#line 28683 "./grammar/grammar_out.cpp"
    break;

  case 1199: /* extended_indirection_el: '[' a_expr ']'  */
#line 3871 "./grammar/statements/select.y"
                                {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[-1].node);
					(yyval.node) = (PGNode *) ai;
				}
#line 28695 "./grammar/grammar_out.cpp"
    break;

  case 1200: /* extended_indirection_el: '[' opt_slice_bound ':' opt_slice_bound ']'  */
#line 3879 "./grammar/statements/select.y"
                                {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[-3].node);
					ai->uidx = (yyvsp[-1].node);
					(yyval.node) = (PGNode *) ai;
				}
#line 28707 "./grammar/grammar_out.cpp"
    break;

  case 1201: /* extended_indirection_el: '[' opt_slice_bound ':' opt_slice_bound ':' opt_slice_bound ']'  */
#line 3886 "./grammar/statements/select.y"
                                                                                          {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[-5].node);
					ai->uidx = (yyvsp[-3].node);
					ai->step = (yyvsp[-1].node);
                 			(yyval.node) = (PGNode *) ai;
                		}
#line 28720 "./grammar/grammar_out.cpp"
    break;

  case 1202: /* extended_indirection_el: '[' opt_slice_bound ':' '-' ':' opt_slice_bound ']'  */
#line 3895 "./grammar/statements/select.y"
                                                                              {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[-5].node);
					ai->step = (yyvsp[-1].node);
					(yyval.node) = (PGNode *) ai;
				}
#line 28732 "./grammar/grammar_out.cpp"
    break;

  case 1203: /* opt_extended_indirection: %empty  */
#line 3910 "./grammar/statements/select.y"
                                                                                                                                { (yyval.list) = NIL; }
#line 28738 "./grammar/grammar_out.cpp"
    break;

  case 1204: /* opt_extended_indirection: opt_extended_indirection extended_indirection_el  */
#line 3911 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 28744 "./grammar/grammar_out.cpp"
    break;

  case 1207: /* opt_target_list_opt_comma: target_list_opt_comma  */
#line 3927 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 28750 "./grammar/grammar_out.cpp"
    break;

  case 1208: /* opt_target_list_opt_comma: %empty  */
#line 3928 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = NIL; }
#line 28756 "./grammar/grammar_out.cpp"
    break;

  case 1209: /* target_list: target_el  */
#line 3932 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 28762 "./grammar/grammar_out.cpp"
    break;

  case 1210: /* target_list: target_list ',' target_el  */
#line 3933 "./grammar/statements/select.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
#line 28768 "./grammar/grammar_out.cpp"
    break;

  case 1211: /* target_list_opt_comma: target_list  */
#line 3937 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 28774 "./grammar/grammar_out.cpp"
    break;

  case 1212: /* target_list_opt_comma: target_list ','  */
#line 3938 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 28780 "./grammar/grammar_out.cpp"
    break;

  case 1213: /* target_el: a_expr AS ColLabelOrString  */
#line 3942 "./grammar/statements/select.y"
                                {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[-2].node);
					(yyval.target)->location = (yylsp[-2]);
				}
#line 28792 "./grammar/grammar_out.cpp"
    break;

  case 1214: /* target_el: a_expr IDENT  */
#line 3958 "./grammar/statements/select.y"
                                {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[-1].node);
					(yyval.target)->location = (yylsp[-1]);
				}
#line 28804 "./grammar/grammar_out.cpp"
    break;

  case 1215: /* target_el: a_expr  */
#line 3966 "./grammar/statements/select.y"
                                {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[0].node);
					(yyval.target)->location = (yylsp[0]);
				}
#line 28816 "./grammar/grammar_out.cpp"
    break;

  case 1216: /* target_el: ColId ':' a_expr  */
#line 3974 "./grammar/statements/select.y"
                                {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[-2].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[0].node);
					(yyval.target)->location = (yylsp[-2]);
				}
#line 28828 "./grammar/grammar_out.cpp"
    break;

  case 1217: /* except_list: EXCLUDE '(' except_name_list_opt_comma ')'  */
#line 3983 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 28834 "./grammar/grammar_out.cpp"
    break;

  case 1218: /* except_list: EXCLUDE except_name  */
#line 3984 "./grammar/statements/select.y"
                                                                                                                        { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 28840 "./grammar/grammar_out.cpp"
    break;

  case 1219: /* except_name: ColIdOrString  */
#line 3989 "./grammar/statements/select.y"
                        {
				(yyval.list) = list_make1((yyvsp[0].str));
			}
#line 28848 "./grammar/grammar_out.cpp"
    break;

  case 1220: /* except_name: except_name '.' ColIdOrString  */
#line 3993 "./grammar/statements/select.y"
                        {
				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].str));
			}
#line 28856 "./grammar/grammar_out.cpp"
    break;

  case 1221: /* except_name_list: except_name  */
#line 3999 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 28862 "./grammar/grammar_out.cpp"
    break;

  case 1222: /* except_name_list: except_name_list ',' except_name  */
#line 4001 "./grammar/statements/select.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 28868 "./grammar/grammar_out.cpp"
    break;

  case 1223: /* except_name_list_opt_comma: except_name_list  */
#line 4005 "./grammar/statements/select.y"
                                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 28874 "./grammar/grammar_out.cpp"
    break;

  case 1224: /* except_name_list_opt_comma: except_name_list ','  */
#line 4006 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 28880 "./grammar/grammar_out.cpp"
    break;

  case 1225: /* opt_except_list: except_list  */
#line 4010 "./grammar/statements/select.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 28886 "./grammar/grammar_out.cpp"
    break;

  case 1226: /* opt_except_list: %empty  */
#line 4011 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NULL; }
#line 28892 "./grammar/grammar_out.cpp"
    break;

  case 1227: /* replace_list_el: a_expr AS ColId  */
#line 4014 "./grammar/statements/select.y"
                                                                        { (yyval.list) = list_make2((yyvsp[-2].node), makeString((yyvsp[0].str))); }
#line 28898 "./grammar/grammar_out.cpp"
    break;

  case 1228: /* replace_list: replace_list_el  */
#line 4018 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 28904 "./grammar/grammar_out.cpp"
    break;

  case 1229: /* replace_list: replace_list ',' replace_list_el  */
#line 4019 "./grammar/statements/select.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 28910 "./grammar/grammar_out.cpp"
    break;

  case 1230: /* replace_list_opt_comma: replace_list  */
#line 4023 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 28916 "./grammar/grammar_out.cpp"
    break;

  case 1231: /* replace_list_opt_comma: replace_list ','  */
#line 4024 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 28922 "./grammar/grammar_out.cpp"
    break;

  case 1232: /* opt_replace_list: REPLACE '(' replace_list_opt_comma ')'  */
#line 4027 "./grammar/statements/select.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 28928 "./grammar/grammar_out.cpp"
    break;

  case 1233: /* opt_replace_list: REPLACE replace_list_el  */
#line 4028 "./grammar/statements/select.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 28934 "./grammar/grammar_out.cpp"
    break;

  case 1234: /* opt_replace_list: %empty  */
#line 4029 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NULL; }
#line 28940 "./grammar/grammar_out.cpp"
    break;

  case 1235: /* rename_list_el: ColId AS ColId  */
#line 4032 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = list_make2((yyvsp[-2].str), (yyvsp[0].str)); }
#line 28946 "./grammar/grammar_out.cpp"
    break;

  case 1236: /* rename_list: rename_list_el  */
#line 4036 "./grammar/statements/select.y"
                                                                                                        { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 28952 "./grammar/grammar_out.cpp"
    break;

  case 1237: /* rename_list: rename_list ',' rename_list_el  */
#line 4037 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 28958 "./grammar/grammar_out.cpp"
    break;

  case 1238: /* rename_list_opt_comma: rename_list  */
#line 4041 "./grammar/statements/select.y"
                                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 28964 "./grammar/grammar_out.cpp"
    break;

  case 1239: /* rename_list_opt_comma: rename_list ','  */
#line 4042 "./grammar/statements/select.y"
                                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 28970 "./grammar/grammar_out.cpp"
    break;

  case 1240: /* opt_rename_list: RENAME '(' rename_list_opt_comma ')'  */
#line 4044 "./grammar/statements/select.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 28976 "./grammar/grammar_out.cpp"
    break;

  case 1241: /* opt_rename_list: RENAME rename_list_el  */
#line 4045 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 28982 "./grammar/grammar_out.cpp"
    break;

  case 1242: /* opt_rename_list: %empty  */
#line 4046 "./grammar/statements/select.y"
                                                                                                                { (yyval.list) = NULL; }
#line 28988 "./grammar/grammar_out.cpp"
    break;

  case 1243: /* qualified_name_list: qualified_name  */
#line 4056 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].range)); }
#line 28994 "./grammar/grammar_out.cpp"
    break;

  case 1244: /* qualified_name_list: qualified_name_list ',' qualified_name  */
#line 4057 "./grammar/statements/select.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].range)); }
#line 29000 "./grammar/grammar_out.cpp"
    break;

  case 1245: /* name_list: name  */
#line 4062 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 29006 "./grammar/grammar_out.cpp"
    break;

  case 1246: /* name_list: name_list ',' name  */
#line 4064 "./grammar/statements/select.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 29012 "./grammar/grammar_out.cpp"
    break;

  case 1247: /* name_list_opt_comma: name_list  */
#line 4069 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 29018 "./grammar/grammar_out.cpp"
    break;

  case 1248: /* name_list_opt_comma: name_list ','  */
#line 4070 "./grammar/statements/select.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 29024 "./grammar/grammar_out.cpp"
    break;

  case 1249: /* name_list_opt_comma_opt_bracket: name_list_opt_comma  */
#line 4074 "./grammar/statements/select.y"
                                                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 29030 "./grammar/grammar_out.cpp"
    break;

  case 1250: /* name_list_opt_comma_opt_bracket: '(' name_list_opt_comma ')'  */
#line 4075 "./grammar/statements/select.y"
                                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 29036 "./grammar/grammar_out.cpp"
    break;

  case 1251: /* name: ColIdOrString  */
#line 4078 "./grammar/statements/select.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 29042 "./grammar/grammar_out.cpp"
    break;

  case 1252: /* func_name: function_name_token  */
#line 4090 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 29048 "./grammar/grammar_out.cpp"
    break;

  case 1253: /* func_name: ColId indirection  */
#line 4093 "./grammar/statements/select.y"
                                        {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)),
											 yyscanner);
					}
#line 29057 "./grammar/grammar_out.cpp"
    break;

  case 1254: /* AexprConst: Iconst  */
#line 4104 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeIntConst((yyvsp[0].ival), (yylsp[0]));
				}
#line 29065 "./grammar/grammar_out.cpp"
    break;

  case 1255: /* AexprConst: FCONST  */
#line 4108 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeFloatConst((yyvsp[0].str), (yylsp[0]));
				}
#line 29073 "./grammar/grammar_out.cpp"
    break;

  case 1256: /* AexprConst: Sconst opt_indirection  */
#line 4112 "./grammar/statements/select.y"
                                {
					if ((yyvsp[0].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[-1].str), (yylsp[-1]));
						n->indirection = check_indirection((yyvsp[0].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[-1].str), (yylsp[-1]));
				}
#line 29089 "./grammar/grammar_out.cpp"
    break;

  case 1257: /* AexprConst: BCONST  */
#line 4124 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeBitStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 29097 "./grammar/grammar_out.cpp"
    break;

  case 1258: /* AexprConst: XCONST  */
#line 4128 "./grammar/statements/select.y"
                                {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 29110 "./grammar/grammar_out.cpp"
    break;

  case 1259: /* AexprConst: func_name Sconst  */
#line 4137 "./grammar/statements/select.y"
                                {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[-1].list));
					t->location = (yylsp[-1]);
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
				}
#line 29121 "./grammar/grammar_out.cpp"
    break;

  case 1260: /* AexprConst: func_name '(' func_arg_list opt_sort_clause opt_ignore_nulls ')' Sconst  */
#line 4144 "./grammar/statements/select.y"
                                {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[-6].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[-4].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[-3].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[-3]))));
					if ((yyvsp[-2].ignorenulls) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[-2]))));


					t->typmods = (yyvsp[-4].list);
					t->location = (yylsp[-6]);
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
				}
#line 29163 "./grammar/grammar_out.cpp"
    break;

  case 1261: /* AexprConst: ConstTypename Sconst  */
#line 4182 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), (yyvsp[-1].typnam));
				}
#line 29171 "./grammar/grammar_out.cpp"
    break;

  case 1262: /* AexprConst: ConstInterval '(' a_expr ')' opt_interval  */
#line 4186 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeIntervalNode((yyvsp[-2].node), (yylsp[-2]), (yyvsp[0].list));
				}
#line 29179 "./grammar/grammar_out.cpp"
    break;

  case 1263: /* AexprConst: ConstInterval Iconst opt_interval  */
#line 4190 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeIntervalNode((yyvsp[-1].ival), (yylsp[-1]), (yyvsp[0].list));
				}
#line 29187 "./grammar/grammar_out.cpp"
    break;

  case 1264: /* AexprConst: ConstInterval Sconst opt_interval  */
#line 4194 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeIntervalNode((yyvsp[-1].str), (yylsp[-1]), (yyvsp[0].list));
				}
#line 29195 "./grammar/grammar_out.cpp"
    break;

  case 1265: /* AexprConst: TRUE_P  */
#line 4198 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeBoolAConst(true, (yylsp[0]));
				}
#line 29203 "./grammar/grammar_out.cpp"
    break;

  case 1266: /* AexprConst: FALSE_P  */
#line 4202 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeBoolAConst(false, (yylsp[0]));
				}
#line 29211 "./grammar/grammar_out.cpp"
    break;

  case 1267: /* AexprConst: NULL_P  */
#line 4206 "./grammar/statements/select.y"
                                {
					(yyval.node) = makeNullAConst((yylsp[0]));
				}
#line 29219 "./grammar/grammar_out.cpp"
    break;

  case 1268: /* Iconst: ICONST  */
#line 4211 "./grammar/statements/select.y"
                                                                                        { (yyval.ival) = (yyvsp[0].ival); }
#line 29225 "./grammar/grammar_out.cpp"
    break;

  case 1269: /* type_function_name: IDENT  */
#line 4228 "./grammar/statements/select.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 29231 "./grammar/grammar_out.cpp"
    break;

  case 1270: /* type_function_name: unreserved_keyword  */
#line 4229 "./grammar/statements/select.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 29237 "./grammar/grammar_out.cpp"
    break;

  case 1271: /* type_function_name: type_func_name_keyword  */
#line 4230 "./grammar/statements/select.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 29243 "./grammar/grammar_out.cpp"
    break;

  case 1272: /* function_name_token: IDENT  */
#line 4233 "./grammar/statements/select.y"
                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 29249 "./grammar/grammar_out.cpp"
    break;

  case 1273: /* function_name_token: unreserved_keyword  */
#line 4234 "./grammar/statements/select.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 29255 "./grammar/grammar_out.cpp"
    break;

  case 1274: /* function_name_token: func_name_keyword  */
#line 4235 "./grammar/statements/select.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 29261 "./grammar/grammar_out.cpp"
    break;

  case 1275: /* type_name_token: IDENT  */
#line 4238 "./grammar/statements/select.y"
                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 29267 "./grammar/grammar_out.cpp"
    break;

  case 1276: /* type_name_token: unreserved_keyword  */
#line 4239 "./grammar/statements/select.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 29273 "./grammar/grammar_out.cpp"
    break;

  case 1277: /* type_name_token: type_name_keyword  */
#line 4240 "./grammar/statements/select.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 29279 "./grammar/grammar_out.cpp"
    break;

  case 1278: /* any_name: ColId  */
#line 4243 "./grammar/statements/select.y"
                                                                { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 29285 "./grammar/grammar_out.cpp"
    break;

  case 1279: /* any_name: ColId attrs  */
#line 4244 "./grammar/statements/select.y"
                                                                { (yyval.list) = lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)); }
#line 29291 "./grammar/grammar_out.cpp"
    break;

  case 1280: /* attrs: '.' attr_name  */
#line 4248 "./grammar/statements/select.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 29297 "./grammar/grammar_out.cpp"
    break;

  case 1281: /* attrs: attrs '.' attr_name  */
#line 4250 "./grammar/statements/select.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 29303 "./grammar/grammar_out.cpp"
    break;

  case 1282: /* opt_name_list: '(' name_list_opt_comma ')'  */
#line 4254 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 29309 "./grammar/grammar_out.cpp"
    break;

  case 1283: /* opt_name_list: %empty  */
#line 4255 "./grammar/statements/select.y"
                                                                                                { (yyval.list) = NIL; }
#line 29315 "./grammar/grammar_out.cpp"
    break;

  case 1285: /* ColLabelOrString: ColLabel  */
#line 4262 "./grammar/statements/select.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 29321 "./grammar/grammar_out.cpp"
    break;

  case 1286: /* ColLabelOrString: SCONST  */
#line 4263 "./grammar/statements/select.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 29327 "./grammar/grammar_out.cpp"
    break;

  case 1287: /* UpdateExtensionsStmt: opt_with_clause UPDATE EXTENSIONS opt_column_list  */
#line 8 "./grammar/statements/update_extensions.y"
                                {
					PGUpdateExtensionsStmt *n = makeNode(PGUpdateExtensionsStmt);
					n->extensions = (yyvsp[0].list);

					if ((yyvsp[-3].with)) {
                          ereport(ERROR,
                                  (errcode(PG_ERRCODE_SYNTAX_ERROR),
                                   errmsg("Providing a with clause with an UPDATE EXTENSIONS statement is not allowed"),
                                   parser_errposition((yylsp[-3]))));
                          break;
                    }

					(yyval.node) = (PGNode *)n;
				}
#line 29346 "./grammar/grammar_out.cpp"
    break;

  case 1288: /* VariableShowStmt: show_or_describe SelectStmt  */
#line 3 "./grammar/statements/variable_show.y"
                                                    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[0].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			}
#line 29358 "./grammar/grammar_out.cpp"
    break;

  case 1289: /* VariableShowStmt: SUMMARIZE SelectStmt  */
#line 10 "./grammar/statements/variable_show.y"
                                        {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[0].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			}
#line 29370 "./grammar/grammar_out.cpp"
    break;

  case 1290: /* VariableShowStmt: SUMMARIZE qualified_name  */
#line 18 "./grammar/statements/variable_show.y"
                        {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->relation = (yyvsp[0].range);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			}
#line 29381 "./grammar/grammar_out.cpp"
    break;

  case 1291: /* VariableShowStmt: show_or_describe qualified_name  */
#line 25 "./grammar/statements/variable_show.y"
                        {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->relation = (yyvsp[0].range);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			}
#line 29392 "./grammar/grammar_out.cpp"
    break;

  case 1292: /* VariableShowStmt: show_or_describe TIME ZONE  */
#line 32 "./grammar/statements/variable_show.y"
                        {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->set = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			}
#line 29403 "./grammar/grammar_out.cpp"
    break;

  case 1293: /* VariableShowStmt: show_or_describe TRANSACTION ISOLATION LEVEL  */
#line 39 "./grammar/statements/variable_show.y"
                        {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->set = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			}
#line 29414 "./grammar/grammar_out.cpp"
    break;

  case 1294: /* VariableShowStmt: show_or_describe ALL opt_tables  */
#line 46 "./grammar/statements/variable_show.y"
                        {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->set = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			}
#line 29425 "./grammar/grammar_out.cpp"
    break;

  case 1295: /* VariableShowStmt: show_or_describe  */
#line 53 "./grammar/statements/variable_show.y"
                        {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->set = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			}
#line 29436 "./grammar/grammar_out.cpp"
    break;

  case 1302: /* var_name: ColId  */
#line 67 "./grammar/statements/variable_show.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 29442 "./grammar/grammar_out.cpp"
    break;

  case 1303: /* var_name: var_name '.' ColId  */
#line 69 "./grammar/statements/variable_show.y"
                                { (yyval.str) = psprintf("%s.%s", (yyvsp[-2].str), (yyvsp[0].str)); }
#line 29448 "./grammar/grammar_out.cpp"
    break;

  case 1304: /* CreateSecretStmt: CREATE_P opt_persist SECRET opt_secret_name opt_storage_specifier '(' copy_generic_opt_list ')'  */
#line 8 "./grammar/statements/create_secret.y"
                                {
					PGCreateSecretStmt *n = makeNode(PGCreateSecretStmt);
					n->persist_type = (yyvsp[-6].str);
					n->secret_name = (yyvsp[-4].str);
					n->secret_storage = (yyvsp[-3].str);
					n->options = (yyvsp[-1].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 29462 "./grammar/grammar_out.cpp"
    break;

  case 1305: /* CreateSecretStmt: CREATE_P opt_persist SECRET IF_P NOT EXISTS opt_secret_name opt_storage_specifier '(' copy_generic_opt_list ')'  */
#line 18 "./grammar/statements/create_secret.y"
                                {
					PGCreateSecretStmt *n = makeNode(PGCreateSecretStmt);
					n->persist_type = (yyvsp[-9].str);
					n->secret_name = (yyvsp[-4].str);
					n->secret_storage = (yyvsp[-3].str);
					n->options = (yyvsp[-1].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 29476 "./grammar/grammar_out.cpp"
    break;

  case 1306: /* CreateSecretStmt: CREATE_P OR REPLACE opt_persist SECRET opt_secret_name opt_storage_specifier '(' copy_generic_opt_list ')'  */
#line 28 "./grammar/statements/create_secret.y"
                                {
					PGCreateSecretStmt *n = makeNode(PGCreateSecretStmt);
					n->persist_type = (yyvsp[-6].str);
					n->secret_name = (yyvsp[-4].str);
					n->secret_storage = (yyvsp[-3].str);
					n->options = (yyvsp[-1].list);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 29490 "./grammar/grammar_out.cpp"
    break;

  case 1307: /* opt_secret_name: %empty  */
#line 40 "./grammar/statements/create_secret.y"
                    { (yyval.str) = NULL; }
#line 29496 "./grammar/grammar_out.cpp"
    break;

  case 1308: /* opt_secret_name: ColId  */
#line 41 "./grammar/statements/create_secret.y"
                { (yyval.str) = (yyvsp[0].str); }
#line 29502 "./grammar/grammar_out.cpp"
    break;

  case 1309: /* opt_persist: %empty  */
#line 45 "./grammar/statements/create_secret.y"
                                                    { (yyval.str) = pstrdup("default"); }
#line 29508 "./grammar/grammar_out.cpp"
    break;

  case 1310: /* opt_persist: TEMPORARY  */
#line 46 "./grammar/statements/create_secret.y"
                                                    { (yyval.str) = pstrdup("temporary"); }
#line 29514 "./grammar/grammar_out.cpp"
    break;

  case 1311: /* opt_persist: PERSISTENT  */
#line 47 "./grammar/statements/create_secret.y"
                                                    { (yyval.str) = pstrdup("persistent"); }
#line 29520 "./grammar/grammar_out.cpp"
    break;

  case 1312: /* opt_storage_specifier: %empty  */
#line 51 "./grammar/statements/create_secret.y"
                                                    { (yyval.str) = pstrdup(""); }
#line 29526 "./grammar/grammar_out.cpp"
    break;

  case 1313: /* opt_storage_specifier: IN_P IDENT  */
#line 52 "./grammar/statements/create_secret.y"
                                                    { (yyval.str) = (yyvsp[0].str); }
#line 29532 "./grammar/grammar_out.cpp"
    break;

  case 1314: /* LoadStmt: LOAD file_name  */
#line 8 "./grammar/statements/load.y"
                                {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[0].str);
					n->repository = NULL;
					n->repo_is_alias = false;
					n->version = NULL;
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				}
#line 29546 "./grammar/grammar_out.cpp"
    break;

  case 1315: /* LoadStmt: opt_force INSTALL file_name opt_ext_version  */
#line 17 "./grammar/statements/load.y"
                                                                            {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[-1].str);
                    n->repository = NULL;
                    n->repo_is_alias = false;
                    n->version = (yyvsp[0].str);
                    n->load_type = (yyvsp[-3].loadinstalltype);
                    (yyval.node) = (PGNode *)n;
				}
#line 29560 "./grammar/grammar_out.cpp"
    break;

  case 1316: /* LoadStmt: opt_force INSTALL file_name FROM ColId opt_ext_version  */
#line 26 "./grammar/statements/load.y"
                                                                                       {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->repository = (yyvsp[-1].str);
                    n->repo_is_alias = true;
                    n->filename = (yyvsp[-3].str);
                    n->version = (yyvsp[0].str);
                    n->load_type = (yyvsp[-5].loadinstalltype);
                    (yyval.node) = (PGNode *)n;
				}
#line 29574 "./grammar/grammar_out.cpp"
    break;

  case 1317: /* LoadStmt: opt_force INSTALL file_name FROM Sconst opt_ext_version  */
#line 35 "./grammar/statements/load.y"
                                                                                        {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[-3].str);
                    n->repository = (yyvsp[-1].str);
                    n->repo_is_alias = false;
                    n->version = (yyvsp[0].str);
                    n->load_type = (yyvsp[-5].loadinstalltype);
                    (yyval.node) = (PGNode *)n;
				}
#line 29588 "./grammar/grammar_out.cpp"
    break;

  case 1318: /* opt_force: %empty  */
#line 46 "./grammar/statements/load.y"
                                                                                { (yyval.loadinstalltype) = PG_LOAD_TYPE_INSTALL; }
#line 29594 "./grammar/grammar_out.cpp"
    break;

  case 1319: /* opt_force: FORCE  */
#line 47 "./grammar/statements/load.y"
                                                { (yyval.loadinstalltype) = PG_LOAD_TYPE_FORCE_INSTALL; }
#line 29600 "./grammar/grammar_out.cpp"
    break;

  case 1320: /* file_name: Sconst  */
#line 49 "./grammar/statements/load.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 29606 "./grammar/grammar_out.cpp"
    break;

  case 1321: /* file_name: ColId  */
#line 50 "./grammar/statements/load.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 29612 "./grammar/grammar_out.cpp"
    break;

  case 1322: /* opt_ext_version: %empty  */
#line 53 "./grammar/statements/load.y"
                                                { (yyval.str) = NULL; }
#line 29618 "./grammar/grammar_out.cpp"
    break;

  case 1323: /* opt_ext_version: VERSION_P Sconst  */
#line 54 "./grammar/statements/load.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 29624 "./grammar/grammar_out.cpp"
    break;

  case 1324: /* opt_ext_version: VERSION_P ColId  */
#line 55 "./grammar/statements/load.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 29630 "./grammar/grammar_out.cpp"
    break;

  case 1325: /* DropStmt: DROP drop_type_any_name IF_P EXISTS any_name_list opt_drop_behavior  */
#line 10 "./grammar/statements/drop.y"
                                {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[-4].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				}
#line 29644 "./grammar/grammar_out.cpp"
    break;

  case 1326: /* DropStmt: DROP drop_type_any_name any_name_list opt_drop_behavior  */
#line 20 "./grammar/statements/drop.y"
                                {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[-2].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				}
#line 29658 "./grammar/grammar_out.cpp"
    break;

  case 1327: /* DropStmt: DROP drop_type_name IF_P EXISTS name_list opt_drop_behavior  */
#line 30 "./grammar/statements/drop.y"
                                {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[-4].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				}
#line 29672 "./grammar/grammar_out.cpp"
    break;

  case 1328: /* DropStmt: DROP drop_type_name name_list opt_drop_behavior  */
#line 40 "./grammar/statements/drop.y"
                                {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[-2].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				}
#line 29686 "./grammar/grammar_out.cpp"
    break;

  case 1329: /* DropStmt: DROP drop_type_name_on_any_name name ON any_name opt_drop_behavior  */
#line 50 "./grammar/statements/drop.y"
                                {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[-4].objtype);
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				}
#line 29700 "./grammar/grammar_out.cpp"
    break;

  case 1330: /* DropStmt: DROP drop_type_name_on_any_name IF_P EXISTS name ON any_name opt_drop_behavior  */
#line 60 "./grammar/statements/drop.y"
                                {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[-6].objtype);
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				}
#line 29714 "./grammar/grammar_out.cpp"
    break;

  case 1331: /* drop_type_any_name: TABLE  */
#line 73 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_TABLE; }
#line 29720 "./grammar/grammar_out.cpp"
    break;

  case 1332: /* drop_type_any_name: SEQUENCE  */
#line 74 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_SEQUENCE; }
#line 29726 "./grammar/grammar_out.cpp"
    break;

  case 1333: /* drop_type_any_name: FUNCTION  */
#line 75 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_FUNCTION; }
#line 29732 "./grammar/grammar_out.cpp"
    break;

  case 1334: /* drop_type_any_name: MACRO  */
#line 76 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_FUNCTION; }
#line 29738 "./grammar/grammar_out.cpp"
    break;

  case 1335: /* drop_type_any_name: MACRO TABLE  */
#line 77 "./grammar/statements/drop.y"
                                                                { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; }
#line 29744 "./grammar/grammar_out.cpp"
    break;

  case 1336: /* drop_type_any_name: VIEW  */
#line 78 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_VIEW; }
#line 29750 "./grammar/grammar_out.cpp"
    break;

  case 1337: /* drop_type_any_name: MATERIALIZED VIEW  */
#line 79 "./grammar/statements/drop.y"
                                                                                        { (yyval.objtype) = PG_OBJECT_MATVIEW; }
#line 29756 "./grammar/grammar_out.cpp"
    break;

  case 1338: /* drop_type_any_name: INDEX  */
#line 80 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_INDEX; }
#line 29762 "./grammar/grammar_out.cpp"
    break;

  case 1339: /* drop_type_any_name: FOREIGN TABLE  */
#line 81 "./grammar/statements/drop.y"
                                                                                        { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; }
#line 29768 "./grammar/grammar_out.cpp"
    break;

  case 1340: /* drop_type_any_name: COLLATION  */
#line 82 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_COLLATION; }
#line 29774 "./grammar/grammar_out.cpp"
    break;

  case 1341: /* drop_type_any_name: CONVERSION_P  */
#line 83 "./grammar/statements/drop.y"
                                                                                        { (yyval.objtype) = PG_OBJECT_CONVERSION; }
#line 29780 "./grammar/grammar_out.cpp"
    break;

  case 1342: /* drop_type_any_name: SCHEMA  */
#line 84 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_SCHEMA; }
#line 29786 "./grammar/grammar_out.cpp"
    break;

  case 1343: /* drop_type_any_name: STATISTICS  */
#line 85 "./grammar/statements/drop.y"
                                                                                        { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; }
#line 29792 "./grammar/grammar_out.cpp"
    break;

  case 1344: /* drop_type_any_name: TEXT_P SEARCH PARSER  */
#line 86 "./grammar/statements/drop.y"
                                                                                { (yyval.objtype) = PG_OBJECT_TSPARSER; }
#line 29798 "./grammar/grammar_out.cpp"
    break;

  case 1345: /* drop_type_any_name: TEXT_P SEARCH DICTIONARY  */
#line 87 "./grammar/statements/drop.y"
                                                                                { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; }
#line 29804 "./grammar/grammar_out.cpp"
    break;

  case 1346: /* drop_type_any_name: TEXT_P SEARCH TEMPLATE  */
#line 88 "./grammar/statements/drop.y"
                                                                                { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; }
#line 29810 "./grammar/grammar_out.cpp"
    break;

  case 1347: /* drop_type_any_name: TEXT_P SEARCH CONFIGURATION  */
#line 89 "./grammar/statements/drop.y"
                                                                        { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; }
#line 29816 "./grammar/grammar_out.cpp"
    break;

  case 1348: /* drop_type_any_name: TYPE_P  */
#line 90 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_TYPE; }
#line 29822 "./grammar/grammar_out.cpp"
    break;

  case 1349: /* drop_type_name: ACCESS METHOD  */
#line 95 "./grammar/statements/drop.y"
                                                                                        { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; }
#line 29828 "./grammar/grammar_out.cpp"
    break;

  case 1350: /* drop_type_name: EVENT TRIGGER  */
#line 96 "./grammar/statements/drop.y"
                                                                                        { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; }
#line 29834 "./grammar/grammar_out.cpp"
    break;

  case 1351: /* drop_type_name: EXTENSION  */
#line 97 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_EXTENSION; }
#line 29840 "./grammar/grammar_out.cpp"
    break;

  case 1352: /* drop_type_name: FOREIGN DATA_P WRAPPER  */
#line 98 "./grammar/statements/drop.y"
                                                                                { (yyval.objtype) = PG_OBJECT_FDW; }
#line 29846 "./grammar/grammar_out.cpp"
    break;

  case 1353: /* drop_type_name: PUBLICATION  */
#line 99 "./grammar/statements/drop.y"
                                                                                        { (yyval.objtype) = PG_OBJECT_PUBLICATION; }
#line 29852 "./grammar/grammar_out.cpp"
    break;

  case 1354: /* drop_type_name: SERVER  */
#line 100 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; }
#line 29858 "./grammar/grammar_out.cpp"
    break;

  case 1355: /* any_name_list: any_name  */
#line 105 "./grammar/statements/drop.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 29864 "./grammar/grammar_out.cpp"
    break;

  case 1356: /* any_name_list: any_name_list ',' any_name  */
#line 106 "./grammar/statements/drop.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 29870 "./grammar/grammar_out.cpp"
    break;

  case 1357: /* opt_drop_behavior: CASCADE  */
#line 111 "./grammar/statements/drop.y"
                                                                        { (yyval.dbehavior) = PG_DROP_CASCADE; }
#line 29876 "./grammar/grammar_out.cpp"
    break;

  case 1358: /* opt_drop_behavior: RESTRICT  */
#line 112 "./grammar/statements/drop.y"
                                                                        { (yyval.dbehavior) = PG_DROP_RESTRICT; }
#line 29882 "./grammar/grammar_out.cpp"
    break;

  case 1359: /* opt_drop_behavior: %empty  */
#line 113 "./grammar/statements/drop.y"
                                                                { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ }
#line 29888 "./grammar/grammar_out.cpp"
    break;

  case 1360: /* drop_type_name_on_any_name: POLICY  */
#line 118 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_POLICY; }
#line 29894 "./grammar/grammar_out.cpp"
    break;

  case 1361: /* drop_type_name_on_any_name: RULE  */
#line 119 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_RULE; }
#line 29900 "./grammar/grammar_out.cpp"
    break;

  case 1362: /* drop_type_name_on_any_name: TRIGGER  */
#line 120 "./grammar/statements/drop.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_TRIGGER; }
#line 29906 "./grammar/grammar_out.cpp"
    break;

  case 1363: /* AlterTableStmt: ALTER TABLE relation_expr alter_table_cmds  */
#line 10 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 29919 "./grammar/grammar_out.cpp"
    break;

  case 1364: /* AlterTableStmt: ALTER TABLE IF_P EXISTS relation_expr alter_table_cmds  */
#line 19 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 29932 "./grammar/grammar_out.cpp"
    break;

  case 1365: /* AlterTableStmt: ALTER INDEX qualified_name alter_table_cmds  */
#line 28 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 29945 "./grammar/grammar_out.cpp"
    break;

  case 1366: /* AlterTableStmt: ALTER INDEX IF_P EXISTS qualified_name alter_table_cmds  */
#line 37 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 29958 "./grammar/grammar_out.cpp"
    break;

  case 1367: /* AlterTableStmt: ALTER SEQUENCE qualified_name alter_table_cmds  */
#line 46 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 29971 "./grammar/grammar_out.cpp"
    break;

  case 1368: /* AlterTableStmt: ALTER SEQUENCE IF_P EXISTS qualified_name alter_table_cmds  */
#line 55 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 29984 "./grammar/grammar_out.cpp"
    break;

  case 1369: /* AlterTableStmt: ALTER VIEW qualified_name alter_table_cmds  */
#line 64 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 29997 "./grammar/grammar_out.cpp"
    break;

  case 1370: /* AlterTableStmt: ALTER VIEW IF_P EXISTS qualified_name alter_table_cmds  */
#line 73 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 30010 "./grammar/grammar_out.cpp"
    break;

  case 1371: /* alter_identity_column_option_list: alter_identity_column_option  */
#line 86 "./grammar/statements/alter_table.y"
                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 30016 "./grammar/grammar_out.cpp"
    break;

  case 1372: /* alter_identity_column_option_list: alter_identity_column_option_list alter_identity_column_option  */
#line 88 "./grammar/statements/alter_table.y"
                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 30022 "./grammar/grammar_out.cpp"
    break;

  case 1373: /* alter_column_default: SET DEFAULT a_expr  */
#line 93 "./grammar/statements/alter_table.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30028 "./grammar/grammar_out.cpp"
    break;

  case 1374: /* alter_column_default: DROP DEFAULT  */
#line 94 "./grammar/statements/alter_table.y"
                                                                { (yyval.node) = NULL; }
#line 30034 "./grammar/grammar_out.cpp"
    break;

  case 1375: /* alter_identity_column_option: RESTART  */
#line 100 "./grammar/statements/alter_table.y"
                                {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[0]));
				}
#line 30042 "./grammar/grammar_out.cpp"
    break;

  case 1376: /* alter_identity_column_option: RESTART opt_with NumericOnly  */
#line 104 "./grammar/statements/alter_table.y"
                                {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[0].value), (yylsp[-2]));
				}
#line 30050 "./grammar/grammar_out.cpp"
    break;

  case 1377: /* alter_identity_column_option: SET SeqOptElem  */
#line 108 "./grammar/statements/alter_table.y"
                                {
					if (strcmp((yyvsp[0].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[0].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[0].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[0].defelt)->defname),
								 parser_errposition((yylsp[0]))));
					(yyval.defelt) = (yyvsp[0].defelt);
				}
#line 30065 "./grammar/grammar_out.cpp"
    break;

  case 1378: /* alter_identity_column_option: SET GENERATED generated_when  */
#line 119 "./grammar/statements/alter_table.y"
                                {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[0].ival)), (yylsp[-2]));
				}
#line 30073 "./grammar/grammar_out.cpp"
    break;

  case 1379: /* alter_generic_option_list: alter_generic_option_elem  */
#line 127 "./grammar/statements/alter_table.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 30081 "./grammar/grammar_out.cpp"
    break;

  case 1380: /* alter_generic_option_list: alter_generic_option_list ',' alter_generic_option_elem  */
#line 131 "./grammar/statements/alter_table.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 30089 "./grammar/grammar_out.cpp"
    break;

  case 1381: /* alter_table_cmd: ADD_P columnDef  */
#line 140 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[0].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 30101 "./grammar/grammar_out.cpp"
    break;

  case 1382: /* alter_table_cmd: ADD_P IF_P NOT EXISTS columnDef  */
#line 149 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[0].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 30113 "./grammar/grammar_out.cpp"
    break;

  case 1383: /* alter_table_cmd: ADD_P COLUMN columnDef  */
#line 158 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[0].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 30125 "./grammar/grammar_out.cpp"
    break;

  case 1384: /* alter_table_cmd: ADD_P COLUMN IF_P NOT EXISTS columnDef  */
#line 167 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[0].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 30137 "./grammar/grammar_out.cpp"
    break;

  case 1385: /* alter_table_cmd: ALTER opt_column ColId alter_column_default  */
#line 176 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[-1].str);
					n->def = (yyvsp[0].node);
					(yyval.node) = (PGNode *)n;
				}
#line 30149 "./grammar/grammar_out.cpp"
    break;

  case 1386: /* alter_table_cmd: ALTER opt_column ColId DROP NOT NULL_P  */
#line 185 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[-3].str);
					(yyval.node) = (PGNode *)n;
				}
#line 30160 "./grammar/grammar_out.cpp"
    break;

  case 1387: /* alter_table_cmd: ALTER opt_column ColId SET NOT NULL_P  */
#line 193 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[-3].str);
					(yyval.node) = (PGNode *)n;
				}
#line 30171 "./grammar/grammar_out.cpp"
    break;

  case 1388: /* alter_table_cmd: ALTER opt_column ColId SET STATISTICS SignedIconst  */
#line 201 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[-3].str);
					n->def = (PGNode *) makeInteger((yyvsp[0].ival));
					(yyval.node) = (PGNode *)n;
				}
#line 30183 "./grammar/grammar_out.cpp"
    break;

  case 1389: /* alter_table_cmd: ALTER opt_column ColId SET reloptions  */
#line 210 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[-2].str);
					n->def = (PGNode *) (yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 30195 "./grammar/grammar_out.cpp"
    break;

  case 1390: /* alter_table_cmd: ALTER opt_column ColId RESET reloptions  */
#line 219 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[-2].str);
					n->def = (PGNode *) (yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 30207 "./grammar/grammar_out.cpp"
    break;

  case 1391: /* alter_table_cmd: ALTER opt_column ColId SET STORAGE ColId  */
#line 228 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[-3].str);
					n->def = (PGNode *) makeString((yyvsp[0].str));
					(yyval.node) = (PGNode *)n;
				}
#line 30219 "./grammar/grammar_out.cpp"
    break;

  case 1392: /* alter_table_cmd: ALTER opt_column ColId ADD_P GENERATED generated_when AS IDENTITY_P OptParenthesizedSeqOptList  */
#line 237 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[-3].ival);
					c->options = (yyvsp[0].list);
					c->location = (yylsp[-4]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[-6].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				}
#line 30239 "./grammar/grammar_out.cpp"
    break;

  case 1393: /* alter_table_cmd: ALTER opt_column ColId alter_identity_column_option_list  */
#line 254 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[-1].str);
					n->def = (PGNode *) (yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 30251 "./grammar/grammar_out.cpp"
    break;

  case 1394: /* alter_table_cmd: ALTER opt_column ColId DROP IDENTITY_P  */
#line 263 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[-2].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 30263 "./grammar/grammar_out.cpp"
    break;

  case 1395: /* alter_table_cmd: ALTER opt_column ColId DROP IDENTITY_P IF_P EXISTS  */
#line 272 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[-4].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 30275 "./grammar/grammar_out.cpp"
    break;

  case 1396: /* alter_table_cmd: DROP opt_column IF_P EXISTS ColId opt_drop_behavior  */
#line 281 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 30288 "./grammar/grammar_out.cpp"
    break;

  case 1397: /* alter_table_cmd: DROP opt_column ColId opt_drop_behavior  */
#line 291 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 30301 "./grammar/grammar_out.cpp"
    break;

  case 1398: /* alter_table_cmd: ALTER opt_column ColId opt_set_data TYPE_P opt_Typename opt_collate_clause alter_using  */
#line 304 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[-5].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[-2].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[-1].node);
					def->raw_default = (yyvsp[0].node);
					def->location = (yylsp[-5]);
					(yyval.node) = (PGNode *)n;
				}
#line 30319 "./grammar/grammar_out.cpp"
    break;

  case 1399: /* alter_table_cmd: ALTER opt_column ColId alter_generic_options  */
#line 319 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[-1].str);
					n->def = (PGNode *) (yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 30331 "./grammar/grammar_out.cpp"
    break;

  case 1400: /* alter_table_cmd: ADD_P TableConstraint  */
#line 328 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[0].node);
					(yyval.node) = (PGNode *)n;
				}
#line 30342 "./grammar/grammar_out.cpp"
    break;

  case 1401: /* alter_table_cmd: ALTER CONSTRAINT name ConstraintAttributeSpec  */
#line 336 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[-1].str);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				}
#line 30360 "./grammar/grammar_out.cpp"
    break;

  case 1402: /* alter_table_cmd: VALIDATE CONSTRAINT name  */
#line 351 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 30371 "./grammar/grammar_out.cpp"
    break;

  case 1403: /* alter_table_cmd: DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
#line 359 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 30384 "./grammar/grammar_out.cpp"
    break;

  case 1404: /* alter_table_cmd: DROP CONSTRAINT name opt_drop_behavior  */
#line 369 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 30397 "./grammar/grammar_out.cpp"
    break;

  case 1405: /* alter_table_cmd: SET LOGGED  */
#line 379 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				}
#line 30407 "./grammar/grammar_out.cpp"
    break;

  case 1406: /* alter_table_cmd: SET UNLOGGED  */
#line 386 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				}
#line 30417 "./grammar/grammar_out.cpp"
    break;

  case 1407: /* alter_table_cmd: SET reloptions  */
#line 393 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 30428 "./grammar/grammar_out.cpp"
    break;

  case 1408: /* alter_table_cmd: RESET reloptions  */
#line 401 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 30439 "./grammar/grammar_out.cpp"
    break;

  case 1409: /* alter_table_cmd: alter_generic_options  */
#line 408 "./grammar/statements/alter_table.y"
                                {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[0].list);
					(yyval.node) = (PGNode *) n;
				}
#line 30450 "./grammar/grammar_out.cpp"
    break;

  case 1410: /* alter_using: USING a_expr  */
#line 418 "./grammar/statements/alter_table.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30456 "./grammar/grammar_out.cpp"
    break;

  case 1411: /* alter_using: %empty  */
#line 419 "./grammar/statements/alter_table.y"
                                                                { (yyval.node) = NULL; }
#line 30462 "./grammar/grammar_out.cpp"
    break;

  case 1412: /* alter_generic_option_elem: generic_option_elem  */
#line 425 "./grammar/statements/alter_table.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
				}
#line 30470 "./grammar/grammar_out.cpp"
    break;

  case 1413: /* alter_generic_option_elem: SET generic_option_elem  */
#line 429 "./grammar/statements/alter_table.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				}
#line 30479 "./grammar/grammar_out.cpp"
    break;

  case 1414: /* alter_generic_option_elem: ADD_P generic_option_elem  */
#line 434 "./grammar/statements/alter_table.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				}
#line 30488 "./grammar/grammar_out.cpp"
    break;

  case 1415: /* alter_generic_option_elem: DROP generic_option_name  */
#line 439 "./grammar/statements/alter_table.y"
                                {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[0].str), NULL, DEFELEM_DROP, (yylsp[0]));
				}
#line 30496 "./grammar/grammar_out.cpp"
    break;

  case 1416: /* alter_table_cmds: alter_table_cmd  */
#line 446 "./grammar/statements/alter_table.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 30502 "./grammar/grammar_out.cpp"
    break;

  case 1417: /* alter_table_cmds: alter_table_cmds ',' alter_table_cmd  */
#line 447 "./grammar/statements/alter_table.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 30508 "./grammar/grammar_out.cpp"
    break;

  case 1418: /* alter_generic_options: OPTIONS '(' alter_generic_option_list ')'  */
#line 452 "./grammar/statements/alter_table.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 30514 "./grammar/grammar_out.cpp"
    break;

  case 1419: /* opt_set_data: SET DATA_P  */
#line 456 "./grammar/statements/alter_table.y"
                                                                                { (yyval.ival) = 1; }
#line 30520 "./grammar/grammar_out.cpp"
    break;

  case 1420: /* opt_set_data: SET  */
#line 457 "./grammar/statements/alter_table.y"
                                                                                                { (yyval.ival) = 0; }
#line 30526 "./grammar/grammar_out.cpp"
    break;

  case 1421: /* opt_set_data: %empty  */
#line 458 "./grammar/statements/alter_table.y"
                                                                                                { (yyval.ival) = 0; }
#line 30532 "./grammar/grammar_out.cpp"
    break;

  case 1422: /* CommentOnStmt: COMMENT ON comment_on_type_any_name qualified_name IS comment_value  */
#line 8 "./grammar/statements/comment_on.y"
                                {
					PGCommentOnStmt *n = makeNode(PGCommentOnStmt);
					n->object_type = (yyvsp[-3].objtype);
					n->name = (yyvsp[-2].range);
					n->value = (yyvsp[0].node);
					(yyval.node) = (PGNode *)n;
				}
#line 30544 "./grammar/grammar_out.cpp"
    break;

  case 1423: /* CommentOnStmt: COMMENT ON COLUMN a_expr IS comment_value  */
#line 16 "./grammar/statements/comment_on.y"
                {
                    PGCommentOnStmt *n = makeNode(PGCommentOnStmt);
                    n->object_type = PG_OBJECT_COLUMN;
                    n->column_expr = (yyvsp[-2].node);
                    n->value = (yyvsp[0].node);
                    (yyval.node) = (PGNode *)n;
                }
#line 30556 "./grammar/grammar_out.cpp"
    break;

  case 1424: /* comment_value: Sconst  */
#line 26 "./grammar/statements/comment_on.y"
                                                                { (yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0])); }
#line 30562 "./grammar/grammar_out.cpp"
    break;

  case 1425: /* comment_value: NULL_P  */
#line 27 "./grammar/statements/comment_on.y"
                                                                            { (yyval.node) = makeNullAConst((yylsp[0])); }
#line 30568 "./grammar/grammar_out.cpp"
    break;

  case 1426: /* comment_on_type_any_name: TABLE  */
#line 30 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_TABLE; }
#line 30574 "./grammar/grammar_out.cpp"
    break;

  case 1427: /* comment_on_type_any_name: SEQUENCE  */
#line 31 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_SEQUENCE; }
#line 30580 "./grammar/grammar_out.cpp"
    break;

  case 1428: /* comment_on_type_any_name: FUNCTION  */
#line 32 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_FUNCTION; }
#line 30586 "./grammar/grammar_out.cpp"
    break;

  case 1429: /* comment_on_type_any_name: MACRO  */
#line 33 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_FUNCTION; }
#line 30592 "./grammar/grammar_out.cpp"
    break;

  case 1430: /* comment_on_type_any_name: MACRO TABLE  */
#line 34 "./grammar/statements/comment_on.y"
                                                                { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; }
#line 30598 "./grammar/grammar_out.cpp"
    break;

  case 1431: /* comment_on_type_any_name: VIEW  */
#line 35 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_VIEW; }
#line 30604 "./grammar/grammar_out.cpp"
    break;

  case 1432: /* comment_on_type_any_name: DATABASE  */
#line 36 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_DATABASE; }
#line 30610 "./grammar/grammar_out.cpp"
    break;

  case 1433: /* comment_on_type_any_name: INDEX  */
#line 37 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_INDEX; }
#line 30616 "./grammar/grammar_out.cpp"
    break;

  case 1434: /* comment_on_type_any_name: SCHEMA  */
#line 38 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_SCHEMA; }
#line 30622 "./grammar/grammar_out.cpp"
    break;

  case 1435: /* comment_on_type_any_name: TYPE_P  */
#line 39 "./grammar/statements/comment_on.y"
                                                                                                { (yyval.objtype) = PG_OBJECT_TYPE; }
#line 30628 "./grammar/grammar_out.cpp"
    break;

  case 1436: /* ExportStmt: EXPORT_P DATABASE Sconst copy_options  */
#line 8 "./grammar/statements/export.y"
                                {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->database = NULL;
					n->filename = (yyvsp[-1].str);
					n->options = NIL;
					if ((yyvsp[0].list)) {
						n->options = list_concat(n->options, (yyvsp[0].list));
					}
					(yyval.node) = (PGNode *)n;
				}
#line 30643 "./grammar/grammar_out.cpp"
    break;

  case 1437: /* ExportStmt: EXPORT_P DATABASE ColId TO Sconst copy_options  */
#line 20 "./grammar/statements/export.y"
                                {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->database = (yyvsp[-3].str);
					n->filename = (yyvsp[-1].str);
					n->options = NIL;
					if ((yyvsp[0].list)) {
						n->options = list_concat(n->options, (yyvsp[0].list));
					}
					(yyval.node) = (PGNode *)n;
				}
#line 30658 "./grammar/grammar_out.cpp"
    break;

  case 1438: /* ImportStmt: IMPORT_P DATABASE Sconst  */
#line 34 "./grammar/statements/export.y"
                                {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 30668 "./grammar/grammar_out.cpp"
    break;

  case 1439: /* VariableResetStmt: RESET reset_rest  */
#line 3 "./grammar/statements/variable_reset.y"
                        {
				(yyvsp[0].vsetstmt)->scope = VAR_SET_SCOPE_DEFAULT;
				(yyval.node) = (PGNode *) (yyvsp[0].vsetstmt);
			}
#line 30677 "./grammar/grammar_out.cpp"
    break;

  case 1440: /* VariableResetStmt: RESET LOCAL reset_rest  */
#line 8 "./grammar/statements/variable_reset.y"
                                {
					(yyvsp[0].vsetstmt)->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) (yyvsp[0].vsetstmt);
				}
#line 30686 "./grammar/grammar_out.cpp"
    break;

  case 1441: /* VariableResetStmt: RESET SESSION reset_rest  */
#line 13 "./grammar/statements/variable_reset.y"
                                {
					(yyvsp[0].vsetstmt)->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) (yyvsp[0].vsetstmt);
				}
#line 30695 "./grammar/grammar_out.cpp"
    break;

  case 1442: /* VariableResetStmt: RESET GLOBAL reset_rest  */
#line 18 "./grammar/statements/variable_reset.y"
                                {
					(yyvsp[0].vsetstmt)->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) (yyvsp[0].vsetstmt);
				}
#line 30704 "./grammar/grammar_out.cpp"
    break;

  case 1443: /* VariableResetStmt: RESET VARIABLE_P reset_rest  */
#line 23 "./grammar/statements/variable_reset.y"
                                {
					(yyvsp[0].vsetstmt)->scope = VAR_SET_SCOPE_VARIABLE;
					(yyval.node) = (PGNode *) (yyvsp[0].vsetstmt);
				}
#line 30713 "./grammar/grammar_out.cpp"
    break;

  case 1444: /* generic_reset: var_name  */
#line 32 "./grammar/statements/variable_reset.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[0].str);
					(yyval.vsetstmt) = n;
				}
#line 30724 "./grammar/grammar_out.cpp"
    break;

  case 1445: /* generic_reset: ALL  */
#line 39 "./grammar/statements/variable_reset.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				}
#line 30734 "./grammar/grammar_out.cpp"
    break;

  case 1446: /* reset_rest: generic_reset  */
#line 48 "./grammar/statements/variable_reset.y"
                                                                                        { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
#line 30740 "./grammar/grammar_out.cpp"
    break;

  case 1447: /* reset_rest: TIME ZONE  */
#line 50 "./grammar/statements/variable_reset.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				}
#line 30751 "./grammar/grammar_out.cpp"
    break;

  case 1448: /* reset_rest: TRANSACTION ISOLATION LEVEL  */
#line 57 "./grammar/statements/variable_reset.y"
                                {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				}
#line 30762 "./grammar/grammar_out.cpp"
    break;

  case 1449: /* DeallocateStmt: DEALLOCATE name  */
#line 8 "./grammar/statements/deallocate.y"
                                        {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[0].str);
						(yyval.node) = (PGNode *) n;
					}
#line 30772 "./grammar/grammar_out.cpp"
    break;

  case 1450: /* DeallocateStmt: DEALLOCATE PREPARE name  */
#line 14 "./grammar/statements/deallocate.y"
                                        {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[0].str);
						(yyval.node) = (PGNode *) n;
					}
#line 30782 "./grammar/grammar_out.cpp"
    break;

  case 1451: /* DeallocateStmt: DEALLOCATE ALL  */
#line 20 "./grammar/statements/deallocate.y"
                                        {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					}
#line 30792 "./grammar/grammar_out.cpp"
    break;

  case 1452: /* DeallocateStmt: DEALLOCATE PREPARE ALL  */
#line 26 "./grammar/statements/deallocate.y"
                                        {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					}
#line 30802 "./grammar/grammar_out.cpp"
    break;

  case 1453: /* IndexStmt: CREATE_P opt_unique INDEX opt_concurrently opt_index_name ON qualified_name access_method_clause '(' index_params ')' opt_reloptions where_clause  */
#line 11 "./grammar/statements/index.y"
                                {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[-11].boolean);
					n->concurrent = (yyvsp[-9].boolean);
					n->idxname = (yyvsp[-8].str);
					n->relation = (yyvsp[-6].range);
					n->accessMethod = (yyvsp[-5].str);
					n->indexParams = (yyvsp[-3].list);
					n->options = (yyvsp[-1].list);
					n->whereClause = (yyvsp[0].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 30829 "./grammar/grammar_out.cpp"
    break;

  case 1454: /* IndexStmt: CREATE_P opt_unique INDEX opt_concurrently IF_P NOT EXISTS index_name ON qualified_name access_method_clause '(' index_params ')' opt_reloptions where_clause  */
#line 36 "./grammar/statements/index.y"
                                {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[-14].boolean);
					n->concurrent = (yyvsp[-12].boolean);
					n->idxname = (yyvsp[-8].str);
					n->relation = (yyvsp[-6].range);
					n->accessMethod = (yyvsp[-5].str);
					n->indexParams = (yyvsp[-3].list);
					n->options = (yyvsp[-1].list);
					n->whereClause = (yyvsp[0].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 30856 "./grammar/grammar_out.cpp"
    break;

  case 1455: /* access_method: ColId  */
#line 62 "./grammar/statements/index.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 30862 "./grammar/grammar_out.cpp"
    break;

  case 1456: /* access_method_clause: USING access_method  */
#line 66 "./grammar/statements/index.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 30868 "./grammar/grammar_out.cpp"
    break;

  case 1457: /* access_method_clause: %empty  */
#line 67 "./grammar/statements/index.y"
                                                                                                { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; }
#line 30874 "./grammar/grammar_out.cpp"
    break;

  case 1458: /* opt_concurrently: CONCURRENTLY  */
#line 72 "./grammar/statements/index.y"
                                                                                        { (yyval.boolean) = true; }
#line 30880 "./grammar/grammar_out.cpp"
    break;

  case 1459: /* opt_concurrently: %empty  */
#line 73 "./grammar/statements/index.y"
                                                                                                { (yyval.boolean) = false; }
#line 30886 "./grammar/grammar_out.cpp"
    break;

  case 1460: /* opt_index_name: index_name  */
#line 78 "./grammar/statements/index.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 30892 "./grammar/grammar_out.cpp"
    break;

  case 1461: /* opt_index_name: %empty  */
#line 79 "./grammar/statements/index.y"
                                                                                                { (yyval.str) = NULL; }
#line 30898 "./grammar/grammar_out.cpp"
    break;

  case 1462: /* opt_reloptions: WITH reloptions  */
#line 83 "./grammar/statements/index.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 30904 "./grammar/grammar_out.cpp"
    break;

  case 1463: /* opt_reloptions: %empty  */
#line 84 "./grammar/statements/index.y"
                                                                                                { (yyval.list) = NIL; }
#line 30910 "./grammar/grammar_out.cpp"
    break;

  case 1464: /* opt_unique: UNIQUE  */
#line 89 "./grammar/statements/index.y"
                                                                                                { (yyval.boolean) = true; }
#line 30916 "./grammar/grammar_out.cpp"
    break;

  case 1465: /* opt_unique: %empty  */
#line 90 "./grammar/statements/index.y"
                                                                                                { (yyval.boolean) = false; }
#line 30922 "./grammar/grammar_out.cpp"
    break;

  case 1466: /* AttachStmt: ATTACH opt_database Sconst opt_database_alias copy_options  */
#line 8 "./grammar/statements/attach.y"
                                {
					PGAttachStmt *n = makeNode(PGAttachStmt);
					n->path = (yyvsp[-2].str);
					n->name = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 30935 "./grammar/grammar_out.cpp"
    break;

  case 1467: /* AttachStmt: ATTACH IF_P NOT EXISTS opt_database Sconst opt_database_alias copy_options  */
#line 17 "./grammar/statements/attach.y"
                                {
					PGAttachStmt *n = makeNode(PGAttachStmt);
					n->path = (yyvsp[-2].str);
					n->name = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				}
#line 30948 "./grammar/grammar_out.cpp"
    break;

  case 1468: /* DetachStmt: DETACH ColLabel  */
#line 29 "./grammar/statements/attach.y"
                                {
					PGDetachStmt *n = makeNode(PGDetachStmt);
					n->missing_ok = false;
					n->db_name = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 30959 "./grammar/grammar_out.cpp"
    break;

  case 1469: /* DetachStmt: DETACH DATABASE ColLabel  */
#line 36 "./grammar/statements/attach.y"
                                {
					PGDetachStmt *n = makeNode(PGDetachStmt);
					n->missing_ok = false;
					n->db_name = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 30970 "./grammar/grammar_out.cpp"
    break;

  case 1470: /* DetachStmt: DETACH DATABASE IF_P EXISTS ColLabel  */
#line 43 "./grammar/statements/attach.y"
                                {
					PGDetachStmt *n = makeNode(PGDetachStmt);
					n->missing_ok = true;
					n->db_name = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 30981 "./grammar/grammar_out.cpp"
    break;

  case 1471: /* opt_database: DATABASE  */
#line 51 "./grammar/statements/attach.y"
                                                                                {}
#line 30987 "./grammar/grammar_out.cpp"
    break;

  case 1472: /* opt_database: %empty  */
#line 52 "./grammar/statements/attach.y"
                                                                                                {}
#line 30993 "./grammar/grammar_out.cpp"
    break;

  case 1473: /* opt_database_alias: AS ColId  */
#line 56 "./grammar/statements/attach.y"
                                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 30999 "./grammar/grammar_out.cpp"
    break;

  case 1474: /* opt_database_alias: %empty  */
#line 57 "./grammar/statements/attach.y"
                                                                                                        { (yyval.str) = NULL; }
#line 31005 "./grammar/grammar_out.cpp"
    break;

  case 1475: /* CreateFunctionStmt: CREATE_P OptTemp macro_alias qualified_name table_macro_list  */
#line 9 "./grammar/statements/create_function.y"
                        {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				(yyvsp[-1].range)->relpersistence = (yyvsp[-3].ival);
				n->name = (yyvsp[-1].range);
				n->functions = (yyvsp[0].list);
				n->onconflict = PG_ERROR_ON_CONFLICT;
				(yyval.node) = (PGNode *)n;
			}
#line 31018 "./grammar/grammar_out.cpp"
    break;

  case 1476: /* CreateFunctionStmt: CREATE_P OptTemp macro_alias IF_P NOT EXISTS qualified_name table_macro_list  */
#line 19 "./grammar/statements/create_function.y"
                        {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				(yyvsp[-1].range)->relpersistence = (yyvsp[-6].ival);
				n->name = (yyvsp[-1].range);
				n->functions = (yyvsp[0].list);
				n->onconflict = PG_IGNORE_ON_CONFLICT;
				(yyval.node) = (PGNode *)n;

			}
#line 31032 "./grammar/grammar_out.cpp"
    break;

  case 1477: /* CreateFunctionStmt: CREATE_P OR REPLACE OptTemp macro_alias qualified_name table_macro_list  */
#line 30 "./grammar/statements/create_function.y"
                        {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				(yyvsp[-1].range)->relpersistence = (yyvsp[-3].ival);
				n->name = (yyvsp[-1].range);
				n->functions = (yyvsp[0].list);
				n->onconflict = PG_REPLACE_ON_CONFLICT;
				(yyval.node) = (PGNode *)n;
			}
#line 31045 "./grammar/grammar_out.cpp"
    break;

  case 1478: /* CreateFunctionStmt: CREATE_P OptTemp macro_alias qualified_name macro_definition_list  */
#line 40 "./grammar/statements/create_function.y"
             {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				(yyvsp[-1].range)->relpersistence = (yyvsp[-3].ival);
				n->name = (yyvsp[-1].range);
				n->functions = (yyvsp[0].list);
				n->onconflict = PG_ERROR_ON_CONFLICT;
				(yyval.node) = (PGNode *)n;
             }
#line 31058 "./grammar/grammar_out.cpp"
    break;

  case 1479: /* CreateFunctionStmt: CREATE_P OptTemp macro_alias IF_P NOT EXISTS qualified_name macro_definition_list  */
#line 50 "./grammar/statements/create_function.y"
                         {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				(yyvsp[-1].range)->relpersistence = (yyvsp[-6].ival);
				n->name = (yyvsp[-1].range);
				n->functions = (yyvsp[0].list);
				n->onconflict = PG_IGNORE_ON_CONFLICT;
				(yyval.node) = (PGNode *)n;
			 }
#line 31071 "./grammar/grammar_out.cpp"
    break;

  case 1480: /* CreateFunctionStmt: CREATE_P OR REPLACE OptTemp macro_alias qualified_name macro_definition_list  */
#line 60 "./grammar/statements/create_function.y"
                         {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				(yyvsp[-1].range)->relpersistence = (yyvsp[-3].ival);
				n->name = (yyvsp[-1].range);
				n->functions = (yyvsp[0].list);
				n->onconflict = PG_REPLACE_ON_CONFLICT;
				(yyval.node) = (PGNode *)n;
			 }
#line 31084 "./grammar/grammar_out.cpp"
    break;

  case 1481: /* table_macro_definition: param_list AS TABLE select_no_parens  */
#line 72 "./grammar/statements/create_function.y"
                        {
				PGFunctionDefinition *n = makeNode(PGFunctionDefinition);
				n->params = (yyvsp[-3].list);
				n->query = (yyvsp[0].node);
				(yyval.node) = (PGNode *)n;
			}
#line 31095 "./grammar/grammar_out.cpp"
    break;

  case 1482: /* table_macro_definition_parens: param_list AS TABLE select_with_parens  */
#line 82 "./grammar/statements/create_function.y"
                        {
				PGFunctionDefinition *n = makeNode(PGFunctionDefinition);
				n->params = (yyvsp[-3].list);
				n->query = (yyvsp[0].node);
				(yyval.node) = (PGNode *)n;
			}
#line 31106 "./grammar/grammar_out.cpp"
    break;

  case 1483: /* table_macro_list_internal: table_macro_definition_parens  */
#line 92 "./grammar/statements/create_function.y"
                        {
				(yyval.list) = list_make1((yyvsp[0].node));
			}
#line 31114 "./grammar/grammar_out.cpp"
    break;

  case 1484: /* table_macro_list_internal: table_macro_list_internal ',' table_macro_definition_parens  */
#line 96 "./grammar/statements/create_function.y"
                        {
				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
			}
#line 31122 "./grammar/grammar_out.cpp"
    break;

  case 1485: /* table_macro_list: table_macro_definition  */
#line 103 "./grammar/statements/create_function.y"
                        {
				(yyval.list) = list_make1((yyvsp[0].node));
			}
#line 31130 "./grammar/grammar_out.cpp"
    break;

  case 1487: /* macro_definition: param_list AS a_expr  */
#line 111 "./grammar/statements/create_function.y"
                        {
				PGFunctionDefinition *n = makeNode(PGFunctionDefinition);
				n->params = (yyvsp[-2].list);
				n->function = (yyvsp[0].node);
				(yyval.node) = (PGNode *)n;
			}
#line 31141 "./grammar/grammar_out.cpp"
    break;

  case 1488: /* macro_definition_list: macro_definition  */
#line 120 "./grammar/statements/create_function.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 31149 "./grammar/grammar_out.cpp"
    break;

  case 1489: /* macro_definition_list: macro_definition_list ',' macro_definition  */
#line 124 "./grammar/statements/create_function.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 31157 "./grammar/grammar_out.cpp"
    break;

  case 1492: /* param_list: '(' ')'  */
#line 136 "./grammar/statements/create_function.y"
                        {
				(yyval.list) = NIL;
			}
#line 31165 "./grammar/grammar_out.cpp"
    break;

  case 1493: /* param_list: '(' func_arg_list ')'  */
#line 140 "./grammar/statements/create_function.y"
                        {
				(yyval.list) = (yyvsp[-1].list);
			}
#line 31173 "./grammar/grammar_out.cpp"
    break;

  case 1494: /* AnalyzeStmt: analyze_keyword opt_verbose  */
#line 10 "./grammar/statements/analyze.y"
                                {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[0].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				}
#line 31187 "./grammar/grammar_out.cpp"
    break;

  case 1495: /* AnalyzeStmt: analyze_keyword opt_verbose qualified_name opt_name_list  */
#line 20 "./grammar/statements/analyze.y"
                                {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[-2].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 31201 "./grammar/grammar_out.cpp"
    break;

  case 1496: /* PragmaStmt: PRAGMA_P ColId  */
#line 8 "./grammar/statements/pragma.y"
                                {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[0].str);
					(yyval.node) = (PGNode *)n;
				}
#line 31212 "./grammar/grammar_out.cpp"
    break;

  case 1497: /* PragmaStmt: PRAGMA_P ColId '=' var_list  */
#line 15 "./grammar/statements/pragma.y"
                                {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[-2].str);
					n->args = (yyvsp[0].list);
					(yyval.node) = (PGNode *)n;
				}
#line 31224 "./grammar/grammar_out.cpp"
    break;

  case 1498: /* PragmaStmt: PRAGMA_P ColId '(' func_arg_list ')'  */
#line 23 "./grammar/statements/pragma.y"
                                {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[-3].str);
					n->args = (yyvsp[-1].list);
					(yyval.node) = (PGNode *)n;
				}
#line 31236 "./grammar/grammar_out.cpp"
    break;

  case 1499: /* DropSecretStmt: DROP opt_persist SECRET ColId opt_storage_drop_specifier  */
#line 8 "./grammar/statements/drop_secret.y"
                                {
					PGDropSecretStmt *n = makeNode(PGDropSecretStmt);
					n->persist_type = (yyvsp[-3].str);
					n->secret_name = (yyvsp[-1].str);
					n->secret_storage = (yyvsp[0].str);
					n->missing_ok  = false;
					(yyval.node) = (PGNode *)n;
				}
#line 31249 "./grammar/grammar_out.cpp"
    break;

  case 1500: /* DropSecretStmt: DROP opt_persist SECRET IF_P EXISTS ColId opt_storage_drop_specifier  */
#line 17 "./grammar/statements/drop_secret.y"
                {
                    PGDropSecretStmt *n = makeNode(PGDropSecretStmt);
                    n->persist_type = (yyvsp[-5].str);
                    n->secret_name = (yyvsp[-1].str);
                    n->secret_storage = (yyvsp[0].str);
                    n->missing_ok  = true;
                    (yyval.node) = (PGNode *)n;
                }
#line 31262 "./grammar/grammar_out.cpp"
    break;

  case 1501: /* opt_storage_drop_specifier: %empty  */
#line 28 "./grammar/statements/drop_secret.y"
                                                    { (yyval.str) = pstrdup(""); }
#line 31268 "./grammar/grammar_out.cpp"
    break;

  case 1502: /* opt_storage_drop_specifier: FROM IDENT  */
#line 29 "./grammar/statements/drop_secret.y"
                                                    { (yyval.str) = (yyvsp[0].str); }
#line 31274 "./grammar/grammar_out.cpp"
    break;

  case 1503: /* TransactionStmt: ABORT_P opt_transaction  */
#line 3 "./grammar/statements/transaction.y"
                                {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					n->transaction_type = PG_TRANS_TYPE_DEFAULT;
					(yyval.node) = (PGNode *)n;
				}
#line 31286 "./grammar/grammar_out.cpp"
    break;

  case 1504: /* TransactionStmt: BEGIN_P opt_transaction opt_transaction_type  */
#line 11 "./grammar/statements/transaction.y"
                                {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					n->transaction_type = (yyvsp[0].transactiontype);
					(yyval.node) = (PGNode *)n;
				}
#line 31297 "./grammar/grammar_out.cpp"
    break;

  case 1505: /* TransactionStmt: START opt_transaction opt_transaction_type  */
#line 18 "./grammar/statements/transaction.y"
                                {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					n->transaction_type = (yyvsp[0].transactiontype);
					(yyval.node) = (PGNode *)n;
				}
#line 31308 "./grammar/grammar_out.cpp"
    break;

  case 1506: /* TransactionStmt: COMMIT opt_transaction  */
#line 25 "./grammar/statements/transaction.y"
                                {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					n->transaction_type = PG_TRANS_TYPE_DEFAULT;
					(yyval.node) = (PGNode *)n;
				}
#line 31320 "./grammar/grammar_out.cpp"
    break;

  case 1507: /* TransactionStmt: END_P opt_transaction  */
#line 33 "./grammar/statements/transaction.y"
                                {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					n->transaction_type = PG_TRANS_TYPE_DEFAULT;
					(yyval.node) = (PGNode *)n;
				}
#line 31332 "./grammar/grammar_out.cpp"
    break;

  case 1508: /* TransactionStmt: ROLLBACK opt_transaction  */
#line 41 "./grammar/statements/transaction.y"
                                {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					n->transaction_type = PG_TRANS_TYPE_DEFAULT;
					(yyval.node) = (PGNode *)n;
				}
#line 31344 "./grammar/grammar_out.cpp"
    break;

  case 1509: /* opt_transaction: WORK  */
#line 51 "./grammar/statements/transaction.y"
                                                                                {}
#line 31350 "./grammar/grammar_out.cpp"
    break;

  case 1510: /* opt_transaction: TRANSACTION  */
#line 52 "./grammar/statements/transaction.y"
                                                                                        {}
#line 31356 "./grammar/grammar_out.cpp"
    break;

  case 1511: /* opt_transaction: %empty  */
#line 53 "./grammar/statements/transaction.y"
                                                                                                {}
#line 31362 "./grammar/grammar_out.cpp"
    break;

  case 1512: /* opt_transaction_type: READ_P ONLY  */
#line 57 "./grammar/statements/transaction.y"
                                                                                        { (yyval.transactiontype) = PG_TRANS_TYPE_READ_ONLY; }
#line 31368 "./grammar/grammar_out.cpp"
    break;

  case 1513: /* opt_transaction_type: READ_P WRITE_P  */
#line 58 "./grammar/statements/transaction.y"
                                                                                        { (yyval.transactiontype) = PG_TRANS_TYPE_READ_WRITE; }
#line 31374 "./grammar/grammar_out.cpp"
    break;

  case 1514: /* opt_transaction_type: %empty  */
#line 59 "./grammar/statements/transaction.y"
                                                                                                { (yyval.transactiontype) = PG_TRANS_TYPE_DEFAULT; }
#line 31380 "./grammar/grammar_out.cpp"
    break;

  case 1515: /* UpdateStmt: opt_with_clause UPDATE relation_expr_opt_alias SET set_clause_list_opt_comma from_clause where_or_current_clause returning_clause  */
#line 12 "./grammar/statements/update.y"
                                {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[-5].range);
					n->targetList = (yyvsp[-3].list);
					n->fromClause = (yyvsp[-2].list);
					n->whereClause = (yyvsp[-1].node);
					n->returningList = (yyvsp[0].list);
					n->withClause = (yyvsp[-7].with);
					(yyval.node) = (PGNode *)n;
				}
#line 31395 "./grammar/grammar_out.cpp"
    break;

  case 1516: /* CreateAsStmt: CREATE_P OptTemp TABLE create_as_target AS SelectStmt opt_with_data  */
#line 12 "./grammar/statements/create_as.y"
                                {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[-1].node);
					ctas->into = (yyvsp[-3].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[-3].into)->rel->relpersistence = (yyvsp[-5].ival);
					(yyvsp[-3].into)->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (PGNode *) ctas;
				}
#line 31412 "./grammar/grammar_out.cpp"
    break;

  case 1517: /* CreateAsStmt: CREATE_P OptTemp TABLE IF_P NOT EXISTS create_as_target AS SelectStmt opt_with_data  */
#line 25 "./grammar/statements/create_as.y"
                                {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[-1].node);
					ctas->into = (yyvsp[-3].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[-3].into)->rel->relpersistence = (yyvsp[-8].ival);
					(yyvsp[-3].into)->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (PGNode *) ctas;
				}
#line 31429 "./grammar/grammar_out.cpp"
    break;

  case 1518: /* CreateAsStmt: CREATE_P OR REPLACE OptTemp TABLE create_as_target AS SelectStmt opt_with_data  */
#line 38 "./grammar/statements/create_as.y"
                                {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[-1].node);
					ctas->into = (yyvsp[-3].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[-3].into)->rel->relpersistence = (yyvsp[-5].ival);
					(yyvsp[-3].into)->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (PGNode *) ctas;
				}
#line 31446 "./grammar/grammar_out.cpp"
    break;

  case 1519: /* opt_with_data: WITH DATA_P  */
#line 54 "./grammar/statements/create_as.y"
                                                                                                { (yyval.boolean) = true; }
#line 31452 "./grammar/grammar_out.cpp"
    break;

  case 1520: /* opt_with_data: WITH NO DATA_P  */
#line 55 "./grammar/statements/create_as.y"
                                                                                        { (yyval.boolean) = false; }
#line 31458 "./grammar/grammar_out.cpp"
    break;

  case 1521: /* opt_with_data: %empty  */
#line 56 "./grammar/statements/create_as.y"
                                                                                                { (yyval.boolean) = true; }
#line 31464 "./grammar/grammar_out.cpp"
    break;

  case 1522: /* create_as_target: qualified_name opt_column_list OptWith OnCommitOption  */
#line 62 "./grammar/statements/create_as.y"
                                {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[-3].range);
					(yyval.into)->colNames = (yyvsp[-2].list);
					(yyval.into)->options = (yyvsp[-1].list);
					(yyval.into)->onCommit = (yyvsp[0].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				}
#line 31478 "./grammar/grammar_out.cpp"
    break;

  case 1523: /* AlterSeqStmt: ALTER SEQUENCE qualified_name SeqOptList  */
#line 10 "./grammar/statements/alter_sequence.y"
                                {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				}
#line 31490 "./grammar/grammar_out.cpp"
    break;

  case 1524: /* AlterSeqStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SeqOptList  */
#line 18 "./grammar/statements/alter_sequence.y"
                                {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				}
#line 31502 "./grammar/grammar_out.cpp"
    break;

  case 1525: /* SeqOptList: SeqOptElem  */
#line 29 "./grammar/statements/alter_sequence.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 31508 "./grammar/grammar_out.cpp"
    break;

  case 1526: /* SeqOptList: SeqOptList SeqOptElem  */
#line 30 "./grammar/statements/alter_sequence.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 31514 "./grammar/grammar_out.cpp"
    break;

  case 1527: /* opt_with: WITH  */
#line 34 "./grammar/statements/alter_sequence.y"
                                                                                        {}
#line 31520 "./grammar/grammar_out.cpp"
    break;

  case 1528: /* opt_with: WITH_LA  */
#line 35 "./grammar/statements/alter_sequence.y"
                                                                                                {}
#line 31526 "./grammar/grammar_out.cpp"
    break;

  case 1529: /* opt_with: %empty  */
#line 36 "./grammar/statements/alter_sequence.y"
                                                                                                {}
#line 31532 "./grammar/grammar_out.cpp"
    break;

  case 1530: /* NumericOnly: FCONST  */
#line 41 "./grammar/statements/alter_sequence.y"
                                                                                        { (yyval.value) = makeFloat((yyvsp[0].str)); }
#line 31538 "./grammar/grammar_out.cpp"
    break;

  case 1531: /* NumericOnly: '+' FCONST  */
#line 42 "./grammar/statements/alter_sequence.y"
                                                                                { (yyval.value) = makeFloat((yyvsp[0].str)); }
#line 31544 "./grammar/grammar_out.cpp"
    break;

  case 1532: /* NumericOnly: '-' FCONST  */
#line 44 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.value) = makeFloat((yyvsp[0].str));
					doNegateFloat((yyval.value));
				}
#line 31553 "./grammar/grammar_out.cpp"
    break;

  case 1533: /* NumericOnly: SignedIconst  */
#line 48 "./grammar/statements/alter_sequence.y"
                                                                                { (yyval.value) = makeInteger((yyvsp[0].ival)); }
#line 31559 "./grammar/grammar_out.cpp"
    break;

  case 1534: /* SeqOptElem: AS SimpleTypename  */
#line 53 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[0].typnam), (yylsp[-1]));
				}
#line 31567 "./grammar/grammar_out.cpp"
    break;

  case 1535: /* SeqOptElem: CACHE NumericOnly  */
#line 57 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[0].value), (yylsp[-1]));
				}
#line 31575 "./grammar/grammar_out.cpp"
    break;

  case 1536: /* SeqOptElem: CYCLE  */
#line 61 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[0]));
				}
#line 31583 "./grammar/grammar_out.cpp"
    break;

  case 1537: /* SeqOptElem: NO CYCLE  */
#line 65 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[-1]));
				}
#line 31591 "./grammar/grammar_out.cpp"
    break;

  case 1538: /* SeqOptElem: INCREMENT opt_by NumericOnly  */
#line 69 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[0].value), (yylsp[-2]));
				}
#line 31599 "./grammar/grammar_out.cpp"
    break;

  case 1539: /* SeqOptElem: MAXVALUE NumericOnly  */
#line 73 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[0].value), (yylsp[-1]));
				}
#line 31607 "./grammar/grammar_out.cpp"
    break;

  case 1540: /* SeqOptElem: MINVALUE NumericOnly  */
#line 77 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[0].value), (yylsp[-1]));
				}
#line 31615 "./grammar/grammar_out.cpp"
    break;

  case 1541: /* SeqOptElem: NO MAXVALUE  */
#line 81 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[-1]));
				}
#line 31623 "./grammar/grammar_out.cpp"
    break;

  case 1542: /* SeqOptElem: NO MINVALUE  */
#line 85 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[-1]));
				}
#line 31631 "./grammar/grammar_out.cpp"
    break;

  case 1543: /* SeqOptElem: OWNED BY any_name  */
#line 89 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[0].list), (yylsp[-2]));
				}
#line 31639 "./grammar/grammar_out.cpp"
    break;

  case 1544: /* SeqOptElem: SEQUENCE NAME_P any_name  */
#line 93 "./grammar/statements/alter_sequence.y"
                                {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[0].list), (yylsp[-2]));
				}
#line 31648 "./grammar/grammar_out.cpp"
    break;

  case 1545: /* SeqOptElem: START opt_with NumericOnly  */
#line 98 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[0].value), (yylsp[-2]));
				}
#line 31656 "./grammar/grammar_out.cpp"
    break;

  case 1546: /* SeqOptElem: RESTART  */
#line 102 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[0]));
				}
#line 31664 "./grammar/grammar_out.cpp"
    break;

  case 1547: /* SeqOptElem: RESTART opt_with NumericOnly  */
#line 106 "./grammar/statements/alter_sequence.y"
                                {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[0].value), (yylsp[-2]));
				}
#line 31672 "./grammar/grammar_out.cpp"
    break;

  case 1548: /* opt_by: BY  */
#line 112 "./grammar/statements/alter_sequence.y"
                                                {}
#line 31678 "./grammar/grammar_out.cpp"
    break;

  case 1549: /* opt_by: %empty  */
#line 113 "./grammar/statements/alter_sequence.y"
                                        {}
#line 31684 "./grammar/grammar_out.cpp"
    break;

  case 1550: /* SignedIconst: Iconst  */
#line 117 "./grammar/statements/alter_sequence.y"
                                                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 31690 "./grammar/grammar_out.cpp"
    break;

  case 1551: /* SignedIconst: '+' Iconst  */
#line 118 "./grammar/statements/alter_sequence.y"
                                                                                        { (yyval.ival) = + (yyvsp[0].ival); }
#line 31696 "./grammar/grammar_out.cpp"
    break;

  case 1552: /* SignedIconst: '-' Iconst  */
#line 119 "./grammar/statements/alter_sequence.y"
                                                                                        { (yyval.ival) = - (yyvsp[0].ival); }
#line 31702 "./grammar/grammar_out.cpp"
    break;


#line 31706 "./grammar/grammar_out.cpp"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
    }

  yyerror_range[1] = yylloc;
  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, yyscanner);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  ++yylsp;
  YYLLOC_DEFAULT (*yylsp, yyerror_range, 2);

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, yyscanner);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

#line 132 "./grammar/statements/alter_sequence.y"


#line 1 "./grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGNode *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int *seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	if (seed) {
		n->has_seed = true;
		n->seed = *seed;
	}
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	p->name = NULL;
	return (PGNode *) p;
}

/* makeNamedParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeNamedParamRef(char *name, int location)
{
	PGParamRef *p = (PGParamRef *)makeParamRef(0, location);
	p->name = name;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	if (stmt->type != T_PGSelectStmt) {
		ereport(ERROR,
				(errcode(PG_ERRCODE_SYNTAX_ERROR),
						errmsg("DESCRIBE/SHOW/SUMMARIZE with CTE/ORDER BY/... not allowed - wrap the statement in a subquery instead"),
						parser_errposition(exprLocation((PGNode *) stmt))));
	}
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = larg;
	n->rarg = rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make1(makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
